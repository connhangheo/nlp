[
    {
        "content": "I've been building IPsec VPNs for years but to be honest I've never fully grasped the technical difference between IKE and ISAKMP. I often see the two terms used interchangeably (probably incorrectly).  I understand the two basic phases of IPsec and that ISAKMP seems to deal primarily with phase one. For instance, the IOS command \"show crypto isakmp sa\" displays IPsec phase one information. But there's no equivalent command for IKE. ", 
        "type": "1", 
        "id": "1", 
        "parentId": -1
    }, 
    {
        "content": "ISAKMP is part of IKE. (IKE has ISAKMP, SKEME and OAKLEY). IKE establishs the shared security policy and authenticated keys. ISAKMP is the protocol that specifies the mechanics of the key exchange.  The confusion, (for me,) is that in the Cisco IOS ISAKMP/IKE are used to refer to the same thing. By which I mean, my understanding is that Cisco's IKE only implements/uses ISAKMP. So one configures IKE, and then conceptually inside that, one configures ISAKMP. ", 
        "type": "2", 
        "id": "2", 
        "parentId": "1"
    }, 
    {
        "content": "How can one perform quality of service based on layer 7 traffic? How would you classify the traffic and actively monitor and respond (dynamically prioritizing traffic)? Are there any solutions which provide a kind of weather map? ", 
        "type": "1", 
        "id": "3", 
        "parentId": -1
    }, 
    {
        "content": "Our network experienced a short outage when one of our BGP routes went down for a short time yesterday. Thankfully our connections failed over to our secondary BGP route after a few minutes, and the primary route became operational after a shut/no shut on the ISP side.  We're running 2 stacked (backplane) Cisco 3750e switches running iOS 12.2 58.  In my conversation with our ISP, they couldn't give any definitive answers to the cause. Is there anything that we can do to pinpoint the cause on our end to avoid this issue in the future?  Log at the time of error  172258: May  6 14:43:06: %BGP-5-ADJCHANGE: neighbor xxx.xxx.12.34 Down BGP Notification sent 172259: May  6 14:43:06: %BGP-3-NOTIFICATION: sent to neighbor xxx.xxx.12.34 4/0 (hold time expired) 0 bytes 172260: May  6 14:43:06: %BGP_SESSION-5-ADJCHANGE: neighbor xxx.xxx.12.34 IPv4 Multicast topology base removed from session  BGP Notification sent 172261: May  6 14:43:06: %BGP_SESSION-5-ADJCHANGE: neighbor xxx.xxx.12.34 IPv4 Unicast topology base removed from session  BGP Notification sent   Log when ISP did a shut/no shut to reset BGP on their side  172542: May  6 15:04:15: %LINEPROTO-5-UPDOWN: Line protocol on Interface GigabitEthernet2/0/49, changed state to down 172543: May  6 15:04:16: %LINK-3-UPDOWN: Interface GigabitEthernet2/0/49, changed state to down 172544: May  6 15:04:16: %PIM-5-NBRCHG: neighbor xxx.xxx.12.34 DOWN on interface GigabitEthernet2/0/49 non DR 172545: May  6 15:04:16: %PIM-5-NBRCHG: neighbor xxx.xxx.12.34 UP on interface GigabitEthernet2/0/49  172546: May  6 15:04:16: %PIM-5-DRCHG: DR change from neighbor 0.0.0.0 to xxx.xxx.12.35 on interface GigabitEthernet2/0/49 172547: May  6 15:04:18: %LINK-3-UPDOWN: Interface GigabitEthernet2/0/49, changed state to up 172548: May  6 15:04:19: %LINEPROTO-5-UPDOWN: Line protocol on Interface GigabitEthernet2/0/49, changed state to up   Log when the BGP connection finally went from idle to Up  172828: May  6 15:27:33: %BGP-5-ADJCHANGE: neighbor xxx.xxx.12.34 Up   BGP interface on our end (note: no CRC, drops, collisions reported...)  GigabitEthernet2/0/49 is up, line protocol is up (connected) Hardware is Gigabit Ethernet, address is xxxx.xxxx Internet address is xxx.xxx.12.35/31 MTU 1500 bytes, BW 1000000 Kbit/sec, DLY 10 usec, reliability 255/255, txload 1/255, rxload 3/255 Encapsulation ARPA, loopback not set Keepalive not set Full-duplex, 1000Mb/s, link type is auto, media type is 1000BaseLX SFP input flow-control is off, output flow-control is unsupported ARP type: ARPA, ARP Timeout 04:00:00 Last input 00:00:09, output 00:00:12, output hang never Last clearing of \"show interface\" counters never Input queue: 0/75/52/0 (size/max/drops/flushes); Total output drops: 0 Queueing strategy: fifo Output queue: 0/40 (size/max) 5 minute input rate 14536000 bits/sec, 1655 packets/sec 5 minute output rate 1010000 bits/sec, 640 packets/sec 413176726 packets input, 428902543141 bytes, 0 no buffer Received 143495 broadcasts (0 IP multicasts) 0 runts, 0 giants, 0 throttles 0 input errors, 0 CRC, 0 frame, 0 overrun, 0 ignored 0 watchdog, 139275 multicast, 0 pause input 0 input packets with dribble condition detected 125748632 packets output, 42915625632 bytes, 0 underruns 0 output errors, 0 collisions, 0 interface resets 0 unknown protocol drops 0 babbles, 0 late collision, 0 deferred 0 lost carrier, 0 no carrier, 0 pause output 0 output buffer failures, 0 output buffers swapped out  ", 
        "type": "1", 
        "id": "4", 
        "parentId": -1
    }, 
    {
        "content": "I know that to secure OSPF you should 1) use OSPF authentication, 2) use passive interface command on interfaces that do not have ospf neighbors.  If I only use the passive interface command and not ospf authentication, what vulnerabilities am I left open to? ", 
        "type": "1", 
        "id": "5", 
        "parentId": -1
    }, 
    {
        "content": "Trying to figure out how to perform rate limits on Juniper EX for both inet and inet6 families.  Ideally I'd like a packet rate limiter to be applied before the ip type is ever looked at.  Basically, I don't care whether the traffic is V6, V4, or MPLS, I want to rate limit all packets incoming to the interface.    To note, the addresses for each family are applied directly to the interface.  I can't see a way to actually make this work.    The work around I've found is to convert the interface to layer-2, stick it in a vlan, create an RVI and apply all the addressing to the that.  Then make the interface 'family ethernet-switching' and apply a policer there.  That seems like a lot of work around to get something which, to me, should be pretty straightforward.  EX4550 running 12.3R2.5 ", 
        "type": "1", 
        "id": "6", 
        "parentId": -1
    }, 
    {
        "content": "It depends on your network topology. If the non-passive links are isolated (point-to-point) and secured at lower layers of the stack (physical access control of the routers), then I would be hard pressed to identify a viable attack vector. Authentication is critical when it is possible for a rogue router to present arbitrary traffic on a given link. ", 
        "type": "2", 
        "id": "7", 
        "parentId": "5"
    }, 
    {
        "content": "What are best practices migrating ASA config to 8.3 and forward?  I have manually created a new config file with the following changes:   new network objects new NAT statements new access-lists referencing network objects   My next steps would be to upgrade from 8.2 to 8.3 keeping note of any errors. Instead of cleaning up the config would it be easier to re-do it line by line? ", 
        "type": "1", 
        "id": "8", 
        "parentId": -1
    }, 
    {
        "content": "If anyone were to gain access to the actual equipment and somehow insert another device to the far end of the link, that would give them access to your network, to inject routes into your routing table and other nasty stuff like that.  A scenario like this would be very theoretical in places such as backbone networks that are in secured locations, but should the link go to a customer or to another third party, some sort of authentication would probably be very wise. ", 
        "type": "2", 
        "id": "9", 
        "parentId": "5"
    }, 
    {
        "content": "One issue is that authentication ensures that only trusted devices are capable of exchanging routes on the network.  Without authentication, you could introduce a non-trusted device and cause significant routing issues.  For example:  If area 0 is not authenticated, attach a router in area 0 with bogus routes to null0.  You could even create a default route and inject it into the topology leading to the bad router to black hole traffic.  Or the route could force traffic toward a bogus gateway designed to sniff connections and pull out insecure data before sending it on the right path.  Authentication ensures that only routers you know about and trust are exchanging information. ", 
        "type": "2", 
        "id": "10", 
        "parentId": "5"
    }, 
    {
        "content": "I think this depends heavily on the platform on which you want to accomplish this. For example, IOS uses NBAR to classify transit traffic, primarily for QoS and security mechanisms. But as far as I know, NBAR QoS configurations are entirely static.  For centralized monitoring, NetFlow is probably your best bet. ", 
        "type": "2", 
        "id": "11", 
        "parentId": "3"
    }, 
    {
        "content": "If we make an assumption that your layers 1-3 are secure than OSPF authentication doesn't make any sense. But because layer 1-3 are not necessarily secure OSPF employs it's own security method - authentication.  Authentication in OSPF prevents an attacker who can sniff and inject packets to fool routers and modify OSPF topology. Results are for example: possible of MITM when attacker changes the topology in such way that certain/all traffic flows through machine controlled by him. Denial of service when the attacker discards traffic which flows through him. Another result could be meltdown of all routers when attacker announces new information very rapidly, although this could be partially solved by tuning SPF timers.  Authentication also prevents replay attacks, for example it prevents attacker from advertising expired information from past. Also it prevents mayhem by plugging a router from another network with existing OSPF configuration which could inject overlapping routes for example (thanks to this, authentication is good even if you have your layer 1-3 secured). ", 
        "type": "2", 
        "id": "12", 
        "parentId": "5"
    }, 
    {
        "content": "We are running a wireless infrastructure using PEAPv1/EAP-GTC. Our Windows machines can't seem to connect to wireless access points, what is happening? ", 
        "type": "1", 
        "id": "13", 
        "parentId": -1
    }, 
    {
        "content": "Naitvely, Windows does not support PEAP-GTC, however there are supplicants available to support PEAP-GTC authentication on Windows. ", 
        "type": "2", 
        "id": "14", 
        "parentId": "13"
    }, 
    {
        "content": "I have bought two WS-2948G switches from cisco for a lab. I now need to buy two additional modules for them WS-G5484. I've never worked with fiber so I was wondering if there are differences in fiber cables and what type of fiber cable I should use on these? ", 
        "type": "1", 
        "id": "15", 
        "parentId": -1
    }, 
    {
        "content": "I was doing some cisco exercises on configuring a vtp server and client, something I can't figure out is :   I setup a vtp server, added my VLAN's I then took another switch that was attached to this vtp server and set it to client Now my VTP client didn't get the vlans configured on the vtp server, however when I added another vlan on my server, suddenly they were all there   Is there a way to push the configs, like a force update command ? ", 
        "type": "1", 
        "id": "16", 
        "parentId": -1
    }, 
    {
        "content": "You can't manually force updates because VTP configs are pushed based on the highest current VLAN database revision number. Normally, after every change to your VTP config the configuration revision number should be incremented. The only way to force update this is by actually doing a VTP database change. ", 
        "type": "2", 
        "id": "17", 
        "parentId": "16"
    }, 
    {
        "content": "Give a short enough config set, reconfiguring by hand should be an acceptable option.  You could even take your existing config and try to implement it again via the ASDM to see what the new GUI returns.  If your config is multiple pages or has a large number of objects, it might be best to implement it on a test box to see what comes back as an error message before putting it into production.  Unlike the PIX-to-ASA migration, Cisco never released a sanity check tool. ", 
        "type": "2", 
        "id": "18", 
        "parentId": "8"
    }, 
    {
        "content": "If you're simply looking to 'root cause' this issue:  You might want to ask your provider if there were any configuration changes being made on their end immediately before this occurred.  There are instances on Cisco routers (not 100% sure what code rev at the moment) where BGP sessions will flap when one side removes and re-adds a \"route-map\" with an \"mpls-ip\" and/or an \"mtu\" configuration in the BGP peering.  Although that kind of maintenance shouldn't cause problems with the peering session, I have heard tale of this happening.  Also, I'm not certain they would have needed to go as far as to drop the interface and bring it back up to 'fix' the issue.  I think simply resetting the peering session would have sufficed, but if there was no traffic being passed at the time of the failure, one could argue that it doesn't matter that they dropped the interface to get things rolling again. ", 
        "type": "2", 
        "id": "19", 
        "parentId": "4"
    }, 
    {
        "content": "The WS-G5484 is a multimode fiber connector.  If you're using standard multimode fiber (62.5 micron), you should be about to get around 300m distance out of them.  With 50 micron fiber, that number should go up to around 500m. ", 
        "type": "2", 
        "id": "20", 
        "parentId": "15"
    }, 
    {
        "content": "Not from what I'm seeing.  Your ISP's router quit responding to the hello messages from your router, which is why you lost your BGP connection.  It's also possible that your router quit listening to the hello messages from the ISP, but I'm not seeing anything obvious in the messages that would help pinpoint the issue.  Maybe someone more focused on the ISP track can comment and shed some light? ", 
        "type": "2", 
        "id": "21", 
        "parentId": "4"
    }, 
    {
        "content": "I would definitely recommend rebuilding the configuration to clean it up. Often rules get put in and either go stale or are never used. This is a perfect opportunity to start it over with a clean slate.  The last upgrade I did took about a week to re-write the rules, but they were much cleaner and labeled. ", 
        "type": "2", 
        "id": "22", 
        "parentId": "8"
    }, 
    {
        "content": "172259: May  6 14:43:06: %BGP-3-NOTIFICATION: sent to neighbor xxx.xxx.12.34 4/0 (hold time expired) 0 bytes  That generally means the other side of the connection did not respond to any keepalives within the hold timer (default 180 seconds). There are a variety of issues that could have caused this. Usually its a layer3 reachability issue. If it happens again, you should rule out layer3 issue by testing to the peer via ping and telnet (telnet to port 179, see if it responds).  If its not a layer3 reachability issue, then there was a problem with one end of the neighborship (more likely the far side in this case). ", 
        "type": "2", 
        "id": "23", 
        "parentId": "4"
    }, 
    {
        "content": "I need to perform monitoring of my network infrastructure but I'm wondering if using SNMPv2 is secure? What are the weaknesses of SNMPv2? ", 
        "type": "1", 
        "id": "24", 
        "parentId": -1
    }, 
    {
        "content": "SNMPv2 should not be used especially if SNMPv3 is available. There are some basic flaws in SNMPv2, predominantly the use of community strings which are sent over the network in an unencrypted form to query the network infrastructure.  Also it's based on a community string instead of a separate username/password combination,  SNMPv2 (and 1 for that matter) cannot provide any assurance of confidentiality, integrity nor authenticity.   SNMPv3 is a lot better in regard to security,SNMPv3 includes three important services: authentication, privacy, and access control (Figure 1). To deliver these services in a flexible and efficient manner, SNMPv3 introduces the concept of a principal, which is the entity on whose behalf services are provided or processing takes place. Read more about it on the cisco website. ", 
        "type": "2", 
        "id": "25", 
        "parentId": "24"
    }, 
    {
        "content": "You are looking for the \"Logical Interface (Aggregate) Policer\":  http://www.juniper.net/techpubs/en_US/junos11.4/topics/concept/policer-logical-interface-aggregate-overview.html  Unfortunately they are only available on EX9200 (which is a castrated MX) if the information on the EX feature page is correct:  http://www.juniper.net/techpubs/en_US/release-independent/junos/topics/concept/ex-series-software-features-overview.html#routing-policy-packet-filtering-features-by-platform-table ", 
        "type": "2", 
        "id": "27", 
        "parentId": "6"
    }, 
    {
        "content": "Whereas SNMPv3 is significantly more secure than v2, you can at least mitigate some of the risk of implementing v2 by restricting access with an ACL.  I would also advise against creating a read/write v2 community. ", 
        "type": "2", 
        "id": "28", 
        "parentId": "24"
    }, 
    {
        "content": "I've got a lot of clients with mobile devices that want to connect to our corporate network which uses Cisco Anyconnect. How can my clients connect to our VPN using a mobile device? ", 
        "type": "1", 
        "id": "29", 
        "parentId": -1
    }, 
    {
        "content": "Cisco provides a special application for iphone devices or for android devices. Unfortunately Windows Phone isn't supported yet. ", 
        "type": "2", 
        "id": "30", 
        "parentId": "29"
    }, 
    {
        "content": "Performing a packet capture I keep seeing strange \"DEC MOP Remote Console\" frames:  No.     Time        Source                Destination           Protocol Info     141 83.557841   Cisco_57:62:a0        DEC-MOP-Remote-Console 0x6002   DEC DNA Remote Console  Ethernet II, Src: Cisco_57:62:a0 (00:0d:bc:57:62:a0), Dst: DEC-MOP-Remote-Console (ab:00:00:02:00:00)     Destination: DEC-MOP-Remote-Console (ab:00:00:02:00:00)         Address: DEC-MOP-Remote-Console (ab:00:00:02:00:00)         .... ...1 .... .... .... .... = IG bit: Group address (multicast/broadcast)         .... ..1. .... .... .... .... = LG bit: Locally administered address (this is NOT the factory default)     Source: Cisco_57:62:a0 (00:0d:bc:57:62:a0)         Address: Cisco_57:62:a0 (00:0d:bc:57:62:a0)         .... ...0 .... .... .... .... = IG bit: Individual address (unicast)         .... ..0. .... .... .... .... = LG bit: Globally unique address (factory default)     Type: DEC DNA Remote Console (0x6002)   The source mac address is one from a Cisco router. However Decnet is disabled on the router and transport input set to telnet:  router# show decnet  % DECnet is not enabled  router# show run | begin line vty line vty 0 4    transport input telnet   How can I prevent this router to send these remote console frames? ", 
        "type": "1", 
        "id": "31", 
        "parentId": -1
    }, 
    {
        "content": "Decnet Maintenance Operation Protocol (MOP) is an ancient protocol that was used to administrate remote systems, and provided tools such as remote console or network bootstrap.    However, as of now this is still enabled by default on all Cisco IOS Releases from 9.0 to recent 15.x.   To disable MOP on the router it has to be done on a per-interface basis:  router# conf t router(configure)# interface fastethernet0/0 router(configure-if)# no mop enabled  router# sh run int f0/0 | include mop  no mop enabled   MOP will be disabled even though the router still shows MOP as protocol on the interface:  router# show int f0/0 count prot status  Protocols allocated:  FastEthernet0/0: Other, IP, DEC MOP, ARP, CDP, IPv6  ", 
        "type": "2", 
        "id": "32", 
        "parentId": "31"
    }, 
    {
        "content": "Once you have interfaces set to passive, you're not open to much.  Authentication does add two possible vectors for trouble:   CPU utilization - this isn't necessarily a huge issue, but shouldn't be forgotten when you're doing your calculations.  However, if you are running a network where convergence times take longer than you want, every little bit counts.  Troubleshooting.  It's easy to miss something, and that can slow down bringing up a new connection, replacement router, etc.    If you're worried about getting OSPF sniffed and having a malicious intruder inject data, you should probably be running something stronger than authentication: start with running actual encryption rather than the weak MD5 you're going to get with OSPFv2, and BGP is better for untrusted links. ", 
        "type": "2", 
        "id": "33", 
        "parentId": "5"
    }, 
    {
        "content": "If SNMPv3 is not an option you can do some things to help secure SNMPv2 better.   Don't enable the Read-Write string. There are very few reasons to enabled it. Choose community strings that are more complex and remove any that are 'private' or 'public'. Use an access-list on the community string to restrict what IP addresses can poll the device. Do not enable 'system-shutdown' option. Use a different community string for SNMP traps vs the polling SNMP string.  ", 
        "type": "2", 
        "id": "34", 
        "parentId": "24"
    }, 
    {
        "content": "It could be an MTU problem. Had this a while ago. Starts up fine but when an UPDATE with a lot of routes is received it gets lost due to MTU mismatch. Also if you have L2 devices (switch? media converter?) between your two routers it could be possible that the connection is interrupted without the interface going down. ", 
        "type": "2", 
        "id": "36", 
        "parentId": "4"
    }, 
    {
        "content": "Device arrangement is as follows:     BGP Peers        +        |        | +------+-------+ |              | | Juniper MX5  | |              | +------+-------+        |.254   OSPF | 10.0.1.0/24        |.1 +------+-------+ |              | |  Cisco ASA   | ASA NAT |              | 10.0.0.1 <> 134.0.15.1 +------+-------+        |.254        |10.0.0.0/24        |.1 +------+-------+ |              | |    HOST1     | |              | +--------------+   If you have the ASA performing NAT to address space that is not statically routed to it, how do you get the NAT'd addresses announced in to the OSPF zone so the router at the top (Juniper MX5) knows how to reach it?  (FYI this is a largely simplified slice out of a much larger network purely to demonstrate the components involved in this problem) ", 
        "type": "1", 
        "id": "37", 
        "parentId": -1
    }, 
    {
        "content": "", 
        "type": "5", 
        "id": "38", 
        "parentId": -1
    }, 
    {
        "content": "Cisco is a major provider of networking equipment. Cisco devices often run IOS or NX-OS.  This is a generic tag to be used when no more specific tags are available. See the partial list of tags in the full Tag Wiki.", 
        "type": "4", 
        "id": "39", 
        "parentId": -1
    }, 
    {
        "content": "If VTP is not updating the VLANs correctly, check to make sure the MD5 digest on all VTP domain switches is the same.  The MD5 digest is calculated using the revision number, domain name, and password to make sure the information in the VTP update can be trusted. I've seen issues where switches configured with the same domain and password, but the MD5 digest is not aligned until I update the VLAN database on the VTP server.  This is typically caused by the local revision number being different between the switches.  Making a VLAN change on the VTP server will send out a VTP update to all domain switches with the newest revision number so that the MD5 digests should align properly.  You can see the VTP md5 digest with a \"show vtp status\" command on each switch:  SW1(config)#do sh vtp statu VTP Version                     : 2 Configuration Revision          : 0 Maximum VLANs supported locally : 1005 Number of existing VLANs        : 17 VTP Operating Mode              : Server VTP Domain Name                 : CISCO VTP Pruning Mode                : Enabled VTP V2 Mode                     : Disabled VTP Traps Generation            : Disabled MD5 digest                      : 0x09 0xF0 0xD7 0x82 0xB7 0x08 0x82 0xAA  Configuration last modified by 0.0.0.0 at 0-0-00 00:00:00 Local updater ID is 155.1.7.7 on interface Vl7 (lowest numbered VLAN interface found)   SW2(config)#do sh vtp statu VTP Version                     : 2 Configuration Revision          : 0 Maximum VLANs supported locally : 1005 Number of existing VLANs        : 17 VTP Operating Mode              : Client VTP Domain Name                 : CISCO VTP Pruning Mode                : Enabled VTP V2 Mode                     : Disabled VTP Traps Generation            : Disabled MD5 digest                      : 0x09 0xF0 0xD7 0x82 0xB7 0x08 0x82 0xAA  Configuration last modified by 0.0.0.0 at 0-0-00 00:00:00  ", 
        "type": "2", 
        "id": "40", 
        "parentId": "16"
    }, 
    {
        "content": "Generally when you're working with fiber you have to be concerned about two things:  1. Type of fiber:   Long-Haul: Single-Mode, used for long distances.   Example: Across a city  Short-Haul: Multi-Mode, used for generally shorter distances.   Example: Internal to your campus/building     *Caveat: There are different types of Single-Mode and Multi-Mode.  2. Connector type:  Both Long and Short haul fiber connects into your transceiver with a connector. Your WS-G5484 uses a SC connector type. More modern connectors use smaller LC type connectors.  Like Tom Says, since you have the fiber transceiver already (WS-G5484) this means you are going to need a Multi-Mode fiber patch cable with SC connectors. ", 
        "type": "2", 
        "id": "41", 
        "parentId": "15"
    }, 
    {
        "content": "What tools are able to provide an almost real time weather map of usage and average traffic per timeframe going over the different links?  What are some ways or solutions to actively monitor my network and provide alerts on heavy network usage over a prolonged period?    ", 
        "type": "1", 
        "id": "42", 
        "parentId": -1
    }, 
    {
        "content": "Updates to VTP are only sent out when there is an increment to the VTP revision number. The only way to 'force' an update is to create an erroneous Vlan and then delete it. This will accomplish a 'force update' and send the change out to the rest of your clients. ", 
        "type": "2", 
        "id": "44", 
        "parentId": "16"
    }, 
    {
        "content": "Typically you would install a static route on the upstream device (the Juniper MX5 in this example) pointing to the NAT outside network, rather than trying to advertise the network from the ASA. At least, that's how I always go about it. ", 
        "type": "2", 
        "id": "45", 
        "parentId": "37"
    }, 
    {
        "content": "Since a VSS is a single system image, does it make sense to enable UDLD for links between the switch pair? We've seen some recovery problems that we feel might be due to UDLD mistakenly identifying an ISL link as unidirectional, especially in a configuration with ASA-SMs in an HA configuration. ", 
        "type": "1", 
        "id": "46", 
        "parentId": -1
    }, 
    {
        "content": "You can use tools like Cacti or PRTG. These tools support weathermaps showing you actual bandwidth usage in the network. You can also set thresholds so that when more than 80% on a link is utilized send an e-mail or SNMP trap and so on.  These tools are mostly SNMP based. You can also use Netflow to get more visibility into what is using how much bandwidth. ", 
        "type": "2", 
        "id": "47", 
        "parentId": "42"
    }, 
    {
        "content": "We just recently went through this and I rebuilt the config from scratch.  My config was only about 6 pages so it wasn't terrible.  This also allowed for some consolidation into object groups and auditing of rules that existed on the ASA.  If your config is too large you could try setting up 8.2 in GNS3, applying your configuration then updating.  Never tried an ASA upgrade in GNS3, but have had 8.2, 8.3, and 8.4 working properly in GNS3.    Another option, if you have an Active/Standby pair, would be to break the pair during maintenance and upgrade the Standby.  Once everything validates, then make it the primary and bring the other unit back into the pair as standby after upgrading it.  If testing fails, downgrade the standby unit and bring it back into the old pair.   ", 
        "type": "2", 
        "id": "48", 
        "parentId": "8"
    }, 
    {
        "content": "There are a few examples that can do this.  Cacti is one. It has a weather-map plugin that can be leveraged to produce output such as the following  GigaPop Illinois   Wisconsin University  These are examples of what the weather map plugin can do. When configured correctly you can see minute, hourly, daily, weekly and monthly traffic stats.  You can download Cacti from the website listed above, weather-map here or a nice script hosted by Brent Salisbury here.  It is worth reading up on Cacti as there is a lot of features and devices that it can look after. Email alerts based on thresholds, events, lack of information and more can be delivered. This can be utilized via SNMP. ", 
        "type": "2", 
        "id": "49", 
        "parentId": "42"
    }, 
    {
        "content": "Cacti is a good open source solution.  You will need some Linux experience to get up and running.  PRTG is a nice solution, can't be the price.  You can use SNMP to monitor interfaces and it now also includes Netflow.  Probably not the most robust reporting, but a good starting point for the price.  SolarWinds is another huge player.  Great features and reporting.  Only downside is you will pay a higher cost.  IMO, the benefits justify the cost, but every scenario is different.  ManageEngine has some nice products, but I have always found their interface and navigation not as intuitive as other solutions on the market.  Either way the product does what is advertised. ", 
        "type": "2", 
        "id": "50", 
        "parentId": "42"
    }, 
    {
        "content": "Wow, this question could be an entire site of its own.  Regardless of what software package(s) you end up using, if snmp is how you're getting your numbers, it's time to embrace sFlow (aka: NetFlow depending on your hardware).  I love snmp.  It's perfect for getting a plethora of network (and other) statistics.  That said, if you want a deeper look into your traffic: into vlans and protocols, start looking at whether your gear supports sFlow/Netflow.  I'm sure there are many opinions about what software to use, but here are a few that I've used in the past to put together a fairly complete monitoring solution:   Cacti: For graphing of everything under the sun.  With additional modules, it will do some alerting on thresholds that you configure.  It also supports multiple users with individual rights ... so if you're a provider and want or need to give access to customers to their own traffic graphs, this is a great tool. Nagios: For monitoring and alerting.  Nagios is very powerful.  It has a huge arsenal of scripts, and plugins, and add-ons.  It is also one of the most unintuitive platforms to configure and manage.  It is a beast. Zabbix: For monitoring, alerting and graphing.  This is functionally cacti + nagios + quite a bit more.  It will do some auto-discovery for you as well as inventory of everything it is looking at. Intermapper: This is commercial software.  It is monitoring and alerting.  I mention it because you mention wanting something of a weather map.  You can watch everything you are monitoring in real-time (or near real-time) with Intermapper. It is great software for a NOC environment.   There are many many network monitoring packages out there.  These are just a few that I've had success with in the past.  Good luck! ", 
        "type": "2", 
        "id": "51", 
        "parentId": "42"
    }, 
    {
        "content": "I operate an MPLS/IP network that utilizes auto-bandwidth to measure bandwidth utilization and signal RSVP accordingly. How can I maintain balance across my LSP paths such that one large [P router]-to-[P router] path/flow doesn't saturate any one link?  I think that by creating more equal-cost LSPs, traffic should be getting balanced at the cost of increased signaling overhead. I'm also considering lowering the statistics measurement interval for closer-to-reality signaling bandwidths, but at the cost of increased measurement time and signaling overhead.  What's the best way to find the optimal balance of full-mesh LSP count and statistics interval?  The routing platform here is Juniper JunOS. ", 
        "type": "1", 
        "id": "52", 
        "parentId": -1
    }, 
    {
        "content": "The terms CoS & QoS are often used interchangably, particularly in the SP space when providing \"Class of Service profiles\" etc as part of Product sets.  I'm looking to re-affirm my understanding that CoS is just one way in which traffic can be marked at layer 2, whilst QoS determines what you actually do to that traffic at layer 3?  Can anyone provide more real world implementation examples of distinguishing between the two terms or alternatively advise me of any overlap? ", 
        "type": "1", 
        "id": "53", 
        "parentId": -1
    }, 
    {
        "content": "When I need to connect a number of branch sites to one another for a customer, I typically recommend an MPLS VPN through a trusted carrier. The CE at each site speaks BGP with its upstream PE and each site is numbered with its own private ASN. This is very convenient for us as BGP provides myriad traffic engineering tools and our adjacencies are limited to n+1 for n sites (the +1 being our colo environment).  Lately, however, I've noticed increasing customer interest in Metro Ethernet solutions. Many of our customers have branch sites within a common metro area and MetroE quotes are coming in at several hundred dollars (USD) less than MPLS service for circuits of the same speeds. While this is appealing, I'm not sure how to best establish routing across a layer two backbone while avoiding turning a mesh topology into hub-and-spoke.  BGP would necessitate a full mesh of adjacencies among branch sites in order to maintain mesh connectivity, which obviously is undesirable from a scalability perspective. The other option is to deploy an IGP, namely OSPF, and have all sites form adjacencies across the WAN. I'd like to address each site as its own area, which seems like overkill but I want to preserve the ability to summarize routes advertised from each site and this can only be done on area borders.  Does this make sense? Are there any caveats to watch out for when deploying OSPF in this manner (for example, should I consider disabling LSA flooding)? Or is there another solution I've overlooked? ", 
        "type": "1", 
        "id": "54", 
        "parentId": -1
    }, 
    {
        "content": "Class of Service is a layer 2 identifier, usually in conjunction with an 802.1q tag (You shouldn't see CoS referenced on an access port, only a trunk port).  DiffServ would be the corresponding identifier on a layer 3 link.  Quality of Service is a superset of both controlling how both layer 2 and layer 3 links classify, police, and queue traffic on different types of links. ", 
        "type": "2", 
        "id": "55", 
        "parentId": "53"
    }, 
    {
        "content": "CoS operates on Layer 2, whereas QoS operates on Layer 3.  CoS is a means of adding a priority to the VLAN header that can later me interpreted by QoS mechanisms to handle the traffic accordingly.  A real world example might be a VoIP VLAN on a network, which would usually be marked with a CoS flag as CS7. Routers QoS engines can then interpret that and prioritise that traffic higher in policing or profiling situations.  CoS can be used independently of QoS implementations to pass appropriately tagged traffic to other networks you have no control over.  Here is a good white paper giving a detailed introduction to the topic. ", 
        "type": "2", 
        "id": "56", 
        "parentId": "53"
    }, 
    {
        "content": "What about a route-server configuration with 'spokes' beeing rs-clients of the hub/main routers?   Even though the bgp peerings would be like a hub&spoke topology, all the spokes should be able to send traffic directly to all others.   You could even re-use the same private AS numbers as those used with the MPLS provider to facilitate migration from a service to another. ", 
        "type": "2", 
        "id": "57", 
        "parentId": "54"
    }, 
    {
        "content": "We recently replaced international MPLS with new ASA 5510s and site-to-site VPNs.  However, when we deployed this we ran into a problem where each remote location has 2 ISPs for redundancy, but when enabling the VPN on both interfaces it flaps between the two and the tunnel is up and down as the tunnel gets torn down and moved between ISPs.  Cisco has been working on this for 8 months now and we still don't have stable tunnels with multiple ISPs.  Remote Office:    access-list RWS_TUNNEL remark Interesting traffic for IND-RWS tunnel access-list RWS_TUNNEL extended permit ip object-group BNG_tunnel_NETS object-group CORP_tunnel_NETS crypto map RWS_TUNNEL 1 match address RWS_TUNNEL crypto map RWS_TUNNEL 1 set peer 216.xxx.102.2  crypto map RWS_TUNNEL 1 set transform-set IND-RWS tunnel-group 216.xxx.102.2 type ipsec-l2l tunnel-group 216.xxx.102.2 ipsec-attributes  pre-shared-key *****   route outside 0.0.0.0 0.0.0.0 216.xxx.206.1 1 track 2 route outside2 0.0.0.0 0.0.0.0 182.xxx.26.229 100 sla monitor 55  type echo protocol ipIcmpEcho 63.251.61.142 interface outside  num-packets 5  timeout 1000  frequency 10 sla monitor schedule 55 life forever start-time now track 2 rtr 55 reachability   Central office:    access-list BNG_TUNNEL remark Interesting traffic for IND-RWS tunnel access-list BNG_TUNNEL extended permit ip object-group CORP_tunnel_NETS object-group BNG_tunnel_NETS   route outside2 0.0.0.0 0.0.0.0 216.xxx.102.1 crypto map BNG_TUNNEL 1 match address BNG_TUNNEL crypto map BNG_TUNNEL 1 set peer 182.xxx.26.230 216.xxx.206.4 crypto map BNG_TUNNEL 1 set transform-set L2L  tunnel-group 182.xxx.26.230 type ipsec-l2l tunnel-group 182.xxx.26.230 ipsec-attributes  pre-shared-key ***** tunnel-group 216.xxx.206.4 type ipsec-l2l tunnel-group 216.xxx.206.4 ipsec-attributes  pre-shared-key *****   So what I've found is that when ISAKMP is enabled on both outside interfaces (remote office) and both IPs are configured as peers (central office) the VPN comes up successfully on both interfaces, but at some point will begin flapping between IPs.  This is true with or without the SLA Monitoring, so even if the routes are all static, behaviour still occurs.  Any insight is appreciated. ", 
        "type": "1", 
        "id": "58", 
        "parentId": -1
    }, 
    {
        "content": "This is kind of a complex question, as the two different products are very different.  A MPLS L3VPN circuit inherently is a full mesh between all locations that participate, while a MetroE connection is generally a point to point link between two specific sites.    In my experience, a MetroE circuit is a directly provisioned path, with no protect services, unless contracted with a protect path.  This means that failure of an interface or router along the specific path would be traffic interrupting between the two sites that are directly linked by the MetroE service.  The MPLS L3VPN will heal around interface/routing failures to keep you with a full mesh between your sites.  This generally accounts for the price difference between the two.  There is nothing wrong with building your own services on top of a MetroE platform -- you just need to work with customer requirements to determine what type of routing is appropriate.  If you are working with a small office network, OSPF/IS-IS/EIGRP could be a wonderful way to exchange routing information between the directly connected sites that you have established.  If you're more of an NSP/ISP/*SP, separating infrastructure and customer routes between IGP and EGP becomes much more important as you scale.  As an ISP engineer, we extensively use MetroE and EWAN links to build our backbone, and utilize our knowledge of the physical links to design our iBGP/eBGP environment.  In many cases, we use route reflectors, and dual route reflectors (route-reflector-client on both sides of the peering) to reduce our iBGP peer count.  However, unless you're dealing with 6+ routers in a POP, iBGP scales pretty well.  In short -- if it's for a single client, that is not offering network services to clients of their own -- stick with an IGP.  If external connectivity needs to be shared between sites, with failover/redundancy/etc, closely examine the physical paths you have, and design your eBGP/iBGP to reflect that.  No point in having a router in a remote location with only 1 link outside the site to iBGP peer with all other routers in the AS -- use a dual route reflector. ", 
        "type": "2", 
        "id": "59", 
        "parentId": "54"
    }, 
    {
        "content": "If you are referring the the VSL between the to VSS switches, I don't think it makes sense to enable UDLD because LMP will detect a unidirectional link.     LMP is designed to run on each VSL member link to maintain multiple state machines with the same peer over different ports. In a case in which a unidirectional condition on a port is detected, LMP marks it as down and attempts to restart VSLP negotiation\u2014instead of err-disabling the port.   For this and more LMP and VSS info: http://www.cisco.com/en/US/docs/solutions/Enterprise/Campus/VSS30dg/VSS-dg_ch2.html#wp1055977 ", 
        "type": "2", 
        "id": "60", 
        "parentId": "46"
    }, 
    {
        "content": "As many known the Nexus 2000 series is a switch which allows a distributed fabric in DC networks. Pinning Nexus 2000 is quite a breeze. I was looking to seek discussion and a general consensus on what others do.  A simple N2K pin is as such.  fex 101 pinning max-links 1 description \"FEX0101   Do many of you lock down what Nexus 2000 device can be assigned to a pin by providing \"verification\" of the pinned Nexus 2000.  fex 102 pinning max-links 1 description \"SVRSW-01-102\" serial FOC240831BZ type N2248TP   Does the additional configuration fall into you best practice configuration or is it a must have in your environment and do you add it as a layer of pseudo-physical security? ", 
        "type": "1", 
        "id": "61", 
        "parentId": -1
    }, 
    {
        "content": "DECnet MOP for some reason is still enabled in Enterprise trains. I've seen it get silently enabled after an IOS upgrade because it included a switch from advipservices. Unfortunately it is hard to get Cisco to change a default, no ip directed-broadcast has basically been the operator community's only success story (highest on my list to go is proxy arp). ", 
        "type": "2", 
        "id": "62", 
        "parentId": "31"
    }, 
    {
        "content": "I would recommend using a DMVPN solution to connect remote sites over L2L (Lan-to-Lan) IPSec tunnels between ASAs. The DMVPN solution is much easier, cleaner, and will allow spoke to spoke communication as well. ", 
        "type": "2", 
        "id": "63", 
        "parentId": "58"
    }, 
    {
        "content": "You could very well run OSPF (or other IGP) on a multi-point metro-Ethernet service, and it should work very nicely.  There could be reasons to continue to run BGP, however...though they would be much the same arguments of why you might want to run BGP within your own network as well.  You don't necessarily have to put all of your BGP speakers in the same AS on a \"broadcast\" network like that.  Think of it as a sort of internal IXP run by the telecom where your private ASes can interconnect with each other via a layer 2 mesh.  You wouldn't even have to necessarily maintain a full mesh of BGP peerings as BGP updates can carry a next-hop in its update message that isn't the same as where the peer session is coming from.  So, for example, if you have a layer 2 mesh with routers A, B, and C on it and you have BGP peers between A and B, and between B and C, when C gets updates for routes originated at A, it will have A as the next-hop, even though they were learned through the peering session with B.  Obviously you would want more route peering than just a single hub-and-spoke, so you're not dependent on the single hub, but you don't need a full mesh by any means.  You still get all the routing-policy benefits of running BGP if you do it this way...and it also, as another respondent mentioned, can use the same private AS number space and could even interconnect with the existing L3VPN so your model and support mechanisms don't need to change.  That being said, I have a couple of metro-E links (point-to-point in my case) that I run OSPF and iBGP across and it works just fine. ", 
        "type": "2", 
        "id": "64", 
        "parentId": "54"
    }, 
    {
        "content": "Switching from a managed L3VPN (what I assume you meant by \"MPLS VPN\") to an L2VPN is a nice step up in that you can run non-IP protocols, and get total control of the routing protocols and routing platforms that define your routing topology.  Assuming that you place just one Ethernet MAC address on the CPE-side of each of your sites, it's much simpler for the provider's equipment to learn and forward 1 MAC addresses per site, than to learn and route potentially-many subnets per-site.  Protocol-wise, this is a bit of a tricky question to answer without a lot more information, as the best choice depends on your traffic and growth plans.  Is this just one big customer that needs internal and internet connectivity, or does it sell connectivity as well? Assuming it's all internal, then you'll just be deploying an IGP and maybe running some eBGP for announcing paths out.  If you don't have very many sites or internal prefixes, a link-state protocol like OSPF or IS-IS makes the most sense, as it will converge quickly and can build the FIB from the RIB quickly if there are just a few prefixes.  If you will have many sites or many prefixes, this will start to tax your routing platforms, as they each need to process each. This is something that starts to take n2 time. If you have sites that are coming up and down often, this churn in link-state can also start to tax your router pool.  If you are going to have many sites, many stubby sites (one path \"upstream\", no other downstream routers), or lots of route churn, you're going to need to look into other protocols or topologies.  In a case like that, I'd recommend using BGP with some route reflectors. This way, you can provision 2+ heavy-duty route-reflectors that spokes announce into, and for which the other spokes can grab a routing table from. This way, you can deploy lightweight CPEs at your many spoke sites that just connect up, announce their space and get an internal table or default route to a router that does.  Approximately, I'd suggest some scales and gear (and assuming sub-Gigabit throughputs):   1 - 20 spokes -- OSPFv3 between all sites. Juniper SRX240 or similar for all sites. 20 - 100 spokes -- iBGP with route reflectors. Juniper SRX240 in the spokes, Juniper MX5/10/40/80 for route reflection (or Debian Linux/BIRD). 100 - 500 spokes -- Start breaking them into different L2 networks, ASes, or areas  ", 
        "type": "2", 
        "id": "65", 
        "parentId": "54"
    }, 
    {
        "content": "I have been migrating sites away from policy-based VPNs for just this reason. Policy-based VPNs are too unpredictable when it comes to failover behavior. I much prefer route-based IPsec tunnels, either point-to-point or DMVPN. Unfortunately, to my knowledge the ASA platform still doesn't support route-based tunnels. ", 
        "type": "2", 
        "id": "66", 
        "parentId": "58"
    }, 
    {
        "content": "I believe this is considered best practice. Frankly, there's no reason not to. Given that the 2K is essentially just a line card that can be moved around arbitrarily, this is the only way to ensure that it always shows up in the same \"slot\" of the parent switch. ", 
        "type": "2", 
        "id": "68", 
        "parentId": "61"
    }, 
    {
        "content": "Can spanning tree and UDLD be run together, and if so, is this a good idea? ", 
        "type": "1", 
        "id": "69", 
        "parentId": -1
    }, 
    {
        "content": "Absolutely.  There are many failure modes in spanning tree related to uni directional traffic that UDLD is able to detect and make sure the network continues operating correctly. ", 
        "type": "2", 
        "id": "70", 
        "parentId": "69"
    }, 
    {
        "content": "QoS is an umbrella term which covers the use of features such as policing, shaping, traffic classification, and advanced queuing mechanisms.  CoS is a form of QoS limited to layer-2 Ethernet and it uses 3-bits (8 values) of the 802.1Q tag to differentiate your traffic. Therefore no trunking, no CoS.  DSCP is the most commonly acted upon value at layer-3 and it is found in 6-bits (64 values) of the IP header.  Typically only 14 of the values are used and are referred to using the notations of best effort, expedited forwarding (EF), and assured forwarding (AF).  AF values are in the form AFxy, where x is 1-4 and refers to the precedence and y is 1-3 and refers to the drop probability.  Telco vendors (such as AT&T specifically) use the term CoS to define the bandwidth allocation classes that they support in their MPLS offerings.  Basically they turned CoS into a marketing term.  Typically a Telco uses DSCP to know which of their CoS classes your traffic is supposed to be a part of.  Another important point for configuring these features is that in a Cisco switch or router you  need to use a command such as 'mls qos trust dscp' or 'mls qos trust cos' or else the device will reset the QoS marking to zero.  There are some exceptions based on model, configuration, and IOS version but this has been true for everything within the last few years in my experience.  This configuration is required because the device needs to know which marking you want it to act upon since it cannot use both.  I like using DSCP. I haven't found a solid reason to use CoS over it but I'm sure someone has one. ", 
        "type": "2", 
        "id": "71", 
        "parentId": "53"
    }, 
    {
        "content": "I find a lot of people, as well as companies don't document their knowledge, or, do a poor job of it. I'd like to discuss what has been found to work well and not so well when it comes to doing this in the hope that we'll be able to assist one another.  Wiki  I use Dokuwiki hosted on my webserver. My job requires me to be across a large range of topics, so having my notes easily accessible and available regardless of which PC I am using is extremely useful.  I have lost count of the number of times where I have documented something a few years ago which has come in handy later on down the track. The best thing is that as it is my own notes, I can write about certain \"gotchas\" which I encountered which I may forget some time in the future. On the other hand, Googling and bookmarks won't afford me this. Further to this, if I were to use bookmarks alone I run the risk of those websites not being around when I may need them in the years to come. There are the \"archiving\" websites, but I'd prefer not to have to rely on them if I didn't have to.  Having said the above, I'm definitely not against bookmarking. I have found a wiki entry with my own notes as well as useful external links to websites contained inside the wiki entry to be a killer combination. This way the information is all in one spot. If I'm worried about a useful website not being around when I need it, I use a HTML to PDF converter and attach it to the wiki too.  File Syncing  I have found File Syncing to be a huge benefit as well. There are multiple options out there, most of which are free. As I don't trust the cloud with my data, I use BoxCryptor to encrypt my filenames and files.  Using the above two solutions I have all of my notes and all of my files with me everywhere I go, regardless of which PC(s) I use. ", 
        "type": "1", 
        "id": "72", 
        "parentId": -1
    }, 
    {
        "content": "In the Juniper world they are more interchangeable. As all QoS config is done under the class of service stanza of the config. An example of the config is:  class-of-service {     forwarding-classes {         queue 0 assured-forwarding;         queue 1 best-effort;         queue 2 expedited-forwarding;     }     interfaces {         ge-0/0/3 {             unit 0 {                 scheduler-map 1st;                 shaping-rate 100m;             }         }     }     scheduler-maps {         1st {             forwarding-class assured-forwarding scheduler test1;             forwarding-class best-effort scheduler test2;             forwarding-class expedited-forwarding scheduler test3;         }     }     schedulers {         test1 {             transmit-rate 45m;             buffer-size percent 45;             priority low;         }         test2 {             transmit-rate 45m;             buffer-size percent 45;             priority low;         }         test3 {             transmit-rate 10m;             buffer-size percent 10;             priority low;         }     }                }  ", 
        "type": "2", 
        "id": "73", 
        "parentId": "53"
    }, 
    {
        "content": "NBAR is the Cisco feature that is capable of classifying traffic at layer-7.  This feature allows the use of the 'match protocol ...' command within your class-map so that you can then take action, such as marking the DSCP value or policing, the matching traffic.  NBAR uses something called a PDLM (Protocol Description Language Module) which is basically the logic for determining is traffic is a match.  For custom applications you need to write your own PDLM.  I have never done this so I cannot comment on how easy or hard this is.  I have personally found the IP addresses and/or ports have worked well for classifying my traffic into my supported traffic categories.  As far as monitoring goes I would agree with Jeremy that NetFlow is the best feature to use.  There are various free and paid tools that can collect and report this data (the router pushes this data to your management station).  Cacti (free) may have support for the \"Weather Map\" report that you are looking for.  Also for monitoring you may want to look into a reporting tool that uses SNMP to gather the usage and drops from your traffic classes.  It would be advisable that you configure your device with 'snmp mib persist cbqos' if you go that route (this keeps your ifIndex values static across reboots).  Again there are many tool options and Cacti is a good place to start. ", 
        "type": "2", 
        "id": "74", 
        "parentId": "3"
    }, 
    {
        "content": "Agreed, UDLD is very important, especially on fiber links.  I would recommend both sides of the link be configured using 'udld aggressive' mode if your devices support it. ", 
        "type": "2", 
        "id": "75", 
        "parentId": "69"
    }, 
    {
        "content": "I would like to get some opinions regarding ways in which I can improve a BGP dual-provider, dual-router design. Each provider supplies a /24 public subnet. I will refer to the routers, circuits, subnets, HSRP groups and providers as A and B, respectively. The bandwidth on each circuit is adequate for the entire load.  Current Design  The current design attempts to achieve per-provider symmetry. In a steady state, the intended routing logic is that traffic to/from subnet A transits only circuit A and traffic to/from subnet B transits only circuit B. The circuits would back each other up in a failed state.  The providers only advertise the default route. Outbound routing entails a mix of PBR and HSRP. The routers have no routing between them: No iBGP, no OSPF, no static routing. Instead, there are two HSRP groups tracking the default route. Router A is primary for HSRP group A and router B is primary for HSRP group B. Downstream devices have a default route pointing to HSRP group A and PBR which directs traffic sourced from subnet B to HSRP group B. Inbound routing is influenced with prepending and communities. Subnet A is prepended and communitied on circuit B and subnet B is prepended and communitied on circuit A.  I see much room for improvement in this design. The lack of Internet topology awareness combined with circuit affinity completely eliminates best path selection. There are concerns about the tier designation of the providers and the design has been rationalized as providing \u2018acceptable performance\u2019 and simpler to troubleshoot. Indeed, the design couldn\u2019t possibly get any simpler. I have demonstrated that transiting an extra AS adds 6 hops and 63ms (+421%) to the RTT. I would prefer not to settle for acceptable.  Better Design  The better design provides the routers with as much Internet topology awareness as possible. The best path algorithm is left to determine the inbound and outbound routing logic. The circuits would back each other up in a failed state.  The providers advertise the full view. The routers run iBGP and OSPF. HSRP is eliminated. The outbound routing would be purely destination-based best path and the inbound routing would be left to the best path algorithm and transit provider whims.  Now that I type it out, it does seem simpler. At the very least, it took fewer words to explain. There are concerns about asymmetry, but I have seen plenty of asymmetry in the current design. I would think they are probably equally prone to asymmetry and it really doesn\u2019t worry me. We have never seen problems as a result. Presently it is relegated to the realm of ifs, \u201cWhat \u2018if\u2019 we had to troubleshoot something?\u201d  Am I way off base here or did I hit the nail on the head? How have others solved this problem? What would Google do? ", 
        "type": "1", 
        "id": "76", 
        "parentId": -1
    }, 
    {
        "content": "You absolutely should use the serial command. I'm less worried about what is pinned where, than what happens if a FEX is connected to the wrong port. We were moving some equipment around and two SFPs were swapped. These FEXen were connected to a pair of Nexus 5000 via vPCs and both FEX lost all their configuration. It was a fairly unpleasant experience, and I recommend against it, myself. ", 
        "type": "2", 
        "id": "77", 
        "parentId": "61"
    }, 
    {
        "content": "Yes, you did hit the nail on the head.  You will get asymmetry in the improved design, but asymmetry is a fact of life on the Internet, and there's really no good reason to expect symmetric routing of traffic to/from.  Shoot, the whole concept of packet routing is that separate packets are routed independently of each other and may take different paths, even packets going in the same direction.  Personally, I loath PBR.  Its one of those technologies that when I decide that its the best solution to the problem, I stop and take a step back to see if I really understand the real nature of the problem, even back to figuring out what the business problem to be solved is.  When I do so, I almost always find that there is a way to solve the problem without using a technology like that.  Having full Internet routes in your routers will take some getting used to, but once you get used to it, it is indeed very easy to understand and troubleshoot.  Certainly there are fewer \"moving parts\" of different protocols to worry about.  You don't want to have full Internet routes in your OSPF database, so you'll want to advertise a default via OSPF into the interior of your network (or perhaps static default...personally I prefer default in OSPF).  That will move traffic towards the BGP speaking Internet routers which can make the more fully informed decision of having the full Internet routes.  That will give you close to \"destination based best path\".  There will still be cases where the traffic will do things you don't quite expect, so you'll want to get familiar with the BGP route selection process. ", 
        "type": "2", 
        "id": "78", 
        "parentId": "76"
    }, 
    {
        "content": "I am in the process of designing a virtual private network setup for a cloud hosting environment.  Given our requirements I don't really see this as different from a dedicated server environment.  The idea is that we want to allow customers to be able to require that their users connect to specific virtual machines or dedicated servers using a VPN which could provide auxiliary encryption (for example for print jobs submitted back to customer networks).  We are looking at supporting host to host IPSec (ESP and AH), and of course SSH tunnels, but neither of these really offer an ability to use VPN adapters.  We are considering consequently adding at least some of the following, but since space is at a premium we want to standardize on no more than one or two of these (one would be better):   IPSec tunnel support on the virtual or dedicated host tinc PPTP   Because our servers taking backups etc may be in different data centers, we'd prefer to be able to re-use our VPN approach here. This would seem to rule out PPTP.   My current thinking is that IPSec is likely to be better because we can use standard VPN adaptors, but setting up routing (based on customer requirements) is likely to be significantly more difficult, which is why we are also looking at tinc.  Which of these two is preferable?  Is my fear that routing management is likely to be a severe headache with IPSec unjustified?  Is there an easy way around this?  Are there other gotchas regarding tinc that I am missing (i.e. other than requiring a separate client)?  Update in response to @Wintermute's answer:  Yes, this question is from a server perspective.  The reason is that these are effectively disconnected servers from client's networks.  Yes our target market is the SME network.  Yes, we are expecting to use public IP's for each client server unless they need something different (and then we can talk).  The solution we are leaning towards is one where clients define IP tunnels and the network ranges accessible by those tunnels and where we string these together with our own management tools (which are under development), which connect customer requests to configuration changes.  The problem is that since we aren't likely to run routing software on the vms and servers, the routing table needs to be statically managed so customers who make mistakes in configuration will find that the VPN's don't work right.  It is also likely that we will be using ESP over the network for our own internal operations (for things like backups).  The whole setup is rather complex and has many different perspectives, from server-centric (our client vpn to hosted instance) to network-centric (internal stuff), to database-centric (our tools).  So I wouldn't say the question is representative of our whole approach (and questions are getting asked on a bunch of SE sites).  None of this really affects the question as a whole though.  It is perhaps useful context though. ", 
        "type": "1", 
        "id": "79", 
        "parentId": -1
    }, 
    {
        "content": "Rather than focus on a couple tools that you use I would focus on what type of data is worth documenting.  I find that the most overlooked document is the \"why\" document that should be a companion to a standards document.  This \"why\" document would describe the design options that were reviewed and the reasoning behind the choice that was made.  Months or years later you can then look back and see if the reasoning is still sound and make changes as necessary.  It also can prevent rehashing of old arguments by summarizing the arguments against the alternate designs. ", 
        "type": "2", 
        "id": "80", 
        "parentId": "72"
    }, 
    {
        "content": "What attack vectors does the BGP TTL security knob protect against? ", 
        "type": "1", 
        "id": "81", 
        "parentId": -1
    }, 
    {
        "content": "BGP TTL security makes your router only accept packets that have a very high TTL number, typically 254. Since TTL is decremented every time a packet is routed, configuring this feature on both neighbors ensures that only a directly connected neighbor router could have sent you this packet. ", 
        "type": "2", 
        "id": "82", 
        "parentId": "81"
    }, 
    {
        "content": "If an engineer configures some changes in a JunOS box and then set them to go live later, that effectively locks the config database with a configure exclusive.  How can I see the changes that he or she has committed? ", 
        "type": "1", 
        "id": "83", 
        "parentId": -1
    }, 
    {
        "content": "I think, you can use show | compare from configuration mode. ", 
        "type": "2", 
        "id": "84", 
        "parentId": "83"
    }, 
    {
        "content": "Not sure about tinc but IPSEC is almost mandatory. No serious business would trust PPTP.   Not sure how IPSEC affects routing. A tunnel is a tunnel is a tunnel regardless of the encryption. You'll be running into the same issues re: split tunnel or not, getting customers to understand the concept / oh look a particular customer's LAN IP clashes with the VPN pool you've picked, etc.  Sounds like you're aiming at SME market (individual servers, direct login etc.) so that rules out more sophisticated solutions, but I'll list two possible approaches anyway   some kind of VPN concentrator that allows profiles. All customers login to VPN concentrator then depending on their profile/group/whatever vendor teminology, get permissions to use protocol X to IP Y (ie their own server).  Cisco ASR1000V virtual routers - each customer gets one, you can then run direct IPSEC tunnels (with VTIs so makes routing appear easy)  or even direct MPLS back to the customers so the router appears as just another branch in their topology, then allocate your VNICs VLANs etc. on the inside so they get a nice virtual 'branch'.  a smaller scale version of the above, we've used monowall to great effect for this purpose (i.e. each customer gets a layer 3 virtual device that acts as a router/firewall, they VPN into this device and get access to their VLANs only), however then each router/firewall needs their own public IP address.    Re: your current approach, you do realise then each server needs a public IP or you have a complicated and convoluted system of NATs where each customer's VPN path gets allocated a single port or similar.  I'd recommend getting a full time networker in to look over any design / proposal you have, it sounds like you're coming at it from a server background. ", 
        "type": "2", 
        "id": "85", 
        "parentId": "79"
    }, 
    {
        "content": "I'm working with a couple Cisco WLCs and I know that they use information about client signal strength in determining device locations but I was reading up on \"probe requests\" and found that, by default, access points will forward probe requests they see only for SSIDs that they serve.  I found that I can disable the \"filter\" of probe requests so that APs will report all probe requests they see even if destined for unsupported SSIDs.  According to Cisco documentation they say that disabling \"probe request filtering\" will improve location accuracy but I can't tell if there are any caveats to doing so  Anyone have any experience with this?  The documentation I am going off of is here: http://www.cisco.com/en/US/docs/wireless/controller/7.4/configuration/guides/consolidated/b_cg74_CONSOLIDATED_chapter_01111010.html ", 
        "type": "1", 
        "id": "86", 
        "parentId": -1
    }, 
    {
        "content": "So what I understand from the write up is that you don't really have a need to make decisions based on AS paths to reach external subnets and the only purpose of dual homing to two ISP's is to buy redundancy to reach the internet. If thats the case, then you don't really need to run BGP. You can just accept the same default routes that you are already receiving from both your service provider. Now for the local side of the network, run a single ospf area on the routers that connect to the ISP on the interface facing your LAN (Do not include the ISP interface under the process) and depending on how simple the design needs to be to you can add routers in different areas and summarize the subnets at network boundaries, but for two subnets I think size of the OSPF database or the number of LSA flooding is not a huge concern, so you can put all the nodes in a single OSPF area and divide it into different areas as you grow.   On each OSPF router that connects to the ISP, redistribute the learned default routes into OSPF by using a \"default-information originate\" statement.    Couple of advantages:    With this design, when you grow the network you can enable BGP with the service providers and just accept the default route without touching anything downstream devices. Until you verify that you are receiving a default route from BGP you are good.  Whenever you need to route traffic off of a ISP for maintenance, just remove the \"default-information originate\" from underneath the OSPF process on that router and proceed with the maintenance. Nothing else is needed.    And I agree with the previous answer in that symmetric routing is over-rated, I rather go for scalability and ease of maintenance.  ", 
        "type": "2", 
        "id": "87", 
        "parentId": "76"
    }, 
    {
        "content": "I would highly recommend reading up on and making a decision regarding alternative OSPF topologies such as starting out as NBMA instead of standard. You will soon realise there is no way for OSPF to correctly select between two paths going to the same router/site within the same metro ethernet, due to the way cost is calculated via outbound interface, both the main and backup WAN links will appear same cost in standard OSPF. However if you choose to use NBMA for example then you can manually define neighbor costs - but now you have to manually define the mesh/adjacencies.   Whatever you do, ROUTE OVER IT DO NOT I REPEAT DO NOT JOIN AT LAYER 2, you're just asking for trouble later on, if you need layer 2 interconnectivity, use OTV or other layer 2 over layer 3 feature.   You'll quickly find you'll learn a lot more about OSPF (and need to know a lot more) than compared to a simple provider MPLS-VPN where the WAN core is hidden from you.  ", 
        "type": "2", 
        "id": "88", 
        "parentId": "54"
    }, 
    {
        "content": "Yes, it's a good idea to run both as they protect you from different failures. If UDLD is not supported on both sides you can use LACP as a poor man's UDLD (between Cisco and Juniper for example) or you could even use Ethernet OAM LFM. ", 
        "type": "2", 
        "id": "89", 
        "parentId": "69"
    }, 
    {
        "content": "I agree with above statements. Go simple VTI based IPSEC or alternatively DMVPN. Just remember to run different routing procotol instances within and without the tunnels. Yeah you'll have to replace the ASAs with ISRs.   Are both ISPs going back to a single head office ASA or two? If two I find it hard to see (with the config available at least) how this behaviour could occur, but if its the same ASA (or same pair) it could be related.  ", 
        "type": "2", 
        "id": "90", 
        "parentId": "58"
    }, 
    {
        "content": "We are running an Aerohove wireless network (controller-less).. I occasionally get mac-flaps within the VLAN tied to a SSID. I know this is coming from a roaming client.. The problem is that the company I work for has end to end vlans (no money to put L3 devices on access-layer) and I believe that these mac-flaps cause the mac-table to get flushed throughout the L2 domain for that VLAN... which in turn causes more broadcasts and so on.   I know terminating the L2 domain at the access layer would be the best solution, but there is no money on the short term... Any thoughts on how to deal with this issue? ", 
        "type": "1", 
        "id": "91", 
        "parentId": -1
    }, 
    {
        "content": "UDLD is generally run on fibre media, it is not required on UTP due to the use of Fast Link Pulse which is already monitoring link status.  This page has a very good explanation of the various L2 protections available. Here is an excerpt specifically regarding UDLD:     UDLD is used to detect if a link is only available in one direction,   for example half the fibre is disconnected. UDLD performs this check   faster than STP will bring the port in to a fowarding state. That   means if you have UDLD and STP enabled then UDLD will prevent STP from   bringing a port in to a state where it will forward traffic to   nowhere.      A unidirectional link occurs when traffic is transmitted between   neighbors in one direction only. Unidirectional Link Detection is a   Layer 2 protocol. UDLD performs tasks that Layer 1  mechanisms, such   as auto negotiation, cannot perform. When UDLD and auto-negotiation   are enabled, both Layer 1 and Layer 2 detections work together to   prevent physical and logical unidirectional connections and the   malfunctioning of other protocols. Unidirectional links can cause    spanning-tree topology loops. UDLD enables devices to detect when a   unidirectional link exists and also to shut down the affected   interface. UDLD is useful on a fiber ports to prevent  network issues   resulting in miswiring at the patch panel causing the link to be in   up/up status but the BPDUs are lost.      With UDLD enabled, the switch periodically sends UDLD protocol packets   to its neighbor and expects the packets to be echoed back before a   predetermined timer expires. If the timer  expires, the switch   determines the link to be unidirectional and shuts down the port. If   messages are not received within the timeout interval (45 seconds),   the port is disabled. The messages are sent out every default   interval, which is 15 seconds.      The 45 seconds it takes to detect a unidirectional link and errdisable   the port is less than the 50 seconds it would take for STP to   transition the port to a Forwarding state, which is based on 20   seconds for Max Age + 30 seconds for Listening and Learning. This   prevents a loop that would otherwise be caused if STP transitioned the   port into the Forwarding state because of a lack of received BPDUs.   So in summary, yes they can be run together and on fibre links they should be run together. ", 
        "type": "2", 
        "id": "92", 
        "parentId": "69"
    }, 
    {
        "content": "QoS (Quality of Service) is a set of measures intended to provide guarantees not previously provided on packet switched networks.  These are used for traffic shaping and to try to get quality guarantees hopefully in some cases approximating circuit-switched protocols over packet switched networks.  It is significantly more complex than this in implementation but that's the basic purpose.  CoS stands for Class of Service and is intended to designate certain ethernet traffic for QoS purposes.  For example in a switched network, this might be used to differentiate TDMoE which is very latency sensitive from ordinary packet switched traffic (TDMoE would likely be carrying telephone voice data between phone switches/gateways).  This could then be used to ensure QoS guarantees could be met.  This gives you an idea of how the concepts interrelate.  The way I look at it is that QoS is really aimed at trying to offer the sorts of very robust guarantees that are typical of connection-switched networks (like the PSTN).  Over ethernet this allows you to take a trunk in a switched network, and then utilize the portion of the bandwidth unused by TDMoE for example, and use that for packet-switched communications.  So the way I would describe it is that QoS is the set of techniques and approaches to solving a specific set of problems, while class of service is a designation to data transmissions (particularly on the ethernet protocol level) in order to manage it according to QoS. ", 
        "type": "2", 
        "id": "93", 
        "parentId": "53"
    }, 
    {
        "content": "Juniper Networks, Inc. is an American manufacturer of networking equipment founded in 1996. It is headquartered in Sunnyvale, California, USA. The company designs and sells high-performance Internet Protocol network products and services. Juniper's main products include T-series, M-series, E-series, MX-series, and J-series families of routers, EX-series Ethernet switches and SRX-series security products. Junos, Juniper's own network operating system, runs on most Juniper products.  Company Profile:   Type  Public Traded as NYSE: JNPR S&P 500 Component Industry  Networking equipment Founded   6 February 1996 (Incorporated 25 June 1999) Founder(s)    Pradeep Sindhu Headquarters  Sunnyvale, California, USA Key people    Kevin Johnson, CEO Products  Routers, switches, Firewalls, Intrusion detection systems, VPN hardware Revenue    US$ 4.36 billion (2012)[1] Net income     US$ 186 million (2012) Employees 9,129 (2012) Website   www.juniper.net  ", 
        "type": "5", 
        "id": "94", 
        "parentId": -1
    }, 
    {
        "content": "A tag for questions involving Juniper Networks hardware or software.", 
        "type": "4", 
        "id": "95", 
        "parentId": -1
    }, 
    {
        "content": "Open Shortest Path First (OSPF) is a link-state routing protocol for Internet Protocol (IP) networks. It uses a link state routing algorithm and falls into the group of interior routing protocols, operating within a single autonomous system (AS).  OSPF is perhaps the most widely used interior gateway protocol (IGP) in large enterprise networks. IS-IS, another link-state dynamic routing protocol, is more common in large service provider networks. The most widely used exterior gateway protocol is the Border Gateway Protocol (BGP), the principal routing protocol between autonomous systems on the Internet. ", 
        "type": "5", 
        "id": "96", 
        "parentId": -1
    }, 
    {
        "content": "Use this tag for questions about OSPF.  Open Shortest Path First (OSPF) is a link-state routing protocol for Internet Protocol (IP) networks.", 
        "type": "4", 
        "id": "97", 
        "parentId": -1
    }, 
    {
        "content": "We use the following tools for different types of documentation:   RackTables - Holds physical rack layouts, cabling, asset tracking, IPAM (IP address management), and change logs. Rancid - Automatically backs up all configuration changes in to SVN from all of our switches, routers and firewalls. This provides automatic documentation and tracking on changes. MediaWiki - All code snippets, procedures, and detailed customer information is logged in wiki form as it's easy to edit for all while providing good version history. GitHub - All large configuration sets (eg for Nagios or Bacula) are stored in private repositories in GitHub. We moved to Git from SVN around a year ago as it provides far superior tracking and delegated maintainership.  ", 
        "type": "2", 
        "id": "98", 
        "parentId": "72"
    }, 
    {
        "content": "These days both fibre and twisted pair are supporting 1000BASE-T and 10GBASE-T, but when do you choose one over the other? The obvious one is maximum cable length, but what are other factors which might come to mind when making this choice.  ", 
        "type": "1", 
        "id": "99", 
        "parentId": -1
    }, 
    {
        "content": "There are various tools dependant on platform. For example:   Cisco - NBAR SonicWALL - AppFlow Juniper - No specific option in JunOS, though can roughly be achieved using class maps.   For monitoring of traffic Netflow & NFSEN is your friend. The bundle simplifies deployment of the NFDUMP capture, dump and analysis tools and gives you a nice frontend to view it all in and make graphs for management. ", 
        "type": "2", 
        "id": "100", 
        "parentId": "3"
    }, 
    {
        "content": "There are a fairly large number of factors to consider and it is also important to accept that not all fiber is the same just like not all twisted pair is the same.  Here are a few things that occur to me.  Of course these may vary depending on environment.  Fiber:  Much longer max distances, depending on specification and throughput.  No electromagnetic interference. Note however that fiber comes in a large number of grades and planning for the future may be somewhat more complex.  Copper: Shorter max distances per link.  Susceptible to electromagnetic interference.  Fewer number of grades/variations (but still mind these!) meaning fewer accidents when the rollout team grabs the wrong spool (see below for a funny story).  Supports power over ethernet.  Funny story:  A particular county in a Western state runs a fiber network that began as a control system for their hydroelectric dams.  As time went on they found they didn't need nearly as much fiber as was laid for this and so they separated out many of the strands and used it to build a county-wide network linking homes and businesses to ISP's and telco's.  Of course single mode fiber was used for longer transmissions and multi-mode for short runs.  So when they were running the longer runs to connect towns and cities with this new network, the team that ran the fiber grabbed the wrong spool, and ran multi-mode fiber on all these long distance links.  The team was quite unhappy when they found out they would have to re-run all the fiber again!  Moral of the story:  be very careful about ensuring that everyone knows which grades of fiber go where.... ", 
        "type": "2", 
        "id": "101", 
        "parentId": "99"
    }, 
    {
        "content": "I'm trying to help a friend with some Nexus issues.  The topology is like this:  Cat 3750 stack -> vPC -> 2x N7k -> LACP -> Fortigate firewall cluster  The 3750 stack is running OSPF to both the Nexuses. The adjacencies are up. From what I have read this is not a supported design. Loop prevention would prevent packets that come in on one Nexus but that is destined for another and then goes across the peer link. If this traffic exits another vPC it will be blocked due to the loop prevention mechanism.  In this case though the firewalls (cluster) are not connected via vPC. Will loop prevention still kick in?  Also I'm surprised that OSPF adjacencies are up and seem to be working. All routes are present but there are still reachability issues. Some OSPF packets would probably come in over the peer link. I can see how this could be an issue for the unicast packets that need to cross peer link and then exit vPC back to the stack which not be allowed.  How will the multicast be treated. I guess that should be received correctly?  So I guess they should maybe turn up new interfaces that are routed instead. Or would it be possible to run SVI which is point-to-point between each Nexus and the stack? ", 
        "type": "1", 
        "id": "102", 
        "parentId": -1
    }, 
    {
        "content": "Tools  We are currently using a private SVN server for knowledge documentation.  Our team is small and savvy (and includes people mostly familiar with SVN including someone who commits code to the Apache Subversion project).  We also track knowledge in other areas as well.  Keep in mind our operation is small (just a few individuals) and so the emphasis is on coordination and making sure we don't forget stuff we shouldn't.  We are in the process (which may take some time) of fully integrating the CMS/FAQ/etc, tracking with our ERP (which is where we store detailed customer info) but this may take quite some time.  One of our goals is a very highly integrated system where changes made in the ERP get rolled out automatically to the network (both at the network and host level), and where knowledge and information is tightly bound to that.  Use  Regarding network engineering there are two critical aspects for us, namely periodic review (documenting is great, but it is useless if you don't periodically do something with it).  This is particularly important when it comes to security knowledge.  What is our current threat profile we are worried about?  What are we doing about this?  Are either of these things can can be improved on?  In general, documented knowledge should be both reviewable and periodically reviewed. ", 
        "type": "2", 
        "id": "103", 
        "parentId": "72"
    }, 
    {
        "content": "If your APs are just bridging clients from the wireless right onto your wired network, then you're going to see this from time to time. Clients will appear from different ports as they re-associate to other APs/cells in the ESSID.  I'm presuming you're talking about Cisco IOS here, based on the term \"MACFLAP\", which appears in their log messages when this happens. For example: \"%SW_MATM-4-MACFLAP_NOTIF: Host 0011.2233.4455 in vlan 123 is flapping between port Gi1/1 and port Gi1/2\"  What this means is that the switch is having to \"re-learn\" an Ethernet MAC address out of a different port than what is cached in the hardware forwarding table. This takes a little CPU time for each event, and having it happen more than couple times in a row will cause that MACFLAP message to get logged as more and more CPU time is consumed.  However, this should not cause the entire table to be flushed or cleared. Just the entries for the flapping source MAC address should be getting affected.  Now, in your case, if this is an infrequent message and it's just wireless clients moving from place to place, I wouldn't worry about this too much. To prevent this, some centralized wireless client termination would be needed. This way, frames would pop out onto the wired VLAN in a consistent place.  However, if this is happening frequently for many MAC addresses, it could be indicative of a Layer 2 loop which will definitely need some investigation. :p ", 
        "type": "2", 
        "id": "104", 
        "parentId": "91"
    }, 
    {
        "content": "If you ever feel that you are going to run FCoE over the medium then it is better to run fibre than copper as the BER for copper is significantly higher and most of the time will be outside of the tolerance for the 'lossless' nature of FCoe. ", 
        "type": "2", 
        "id": "105", 
        "parentId": "99"
    }, 
    {
        "content": "As the firewalls aren't part of a vPC they won't be part of the normal vPC loop prevention.  The loop prevention only states that a packet cannot ingress on the peer link if it is destined to go out another vPC enabled port.  Not too sure on the multicast front as we don't use it in our environment and I haven't really looked into its behaviour on the 7K's.  Usually if you are running a routing protocol down on the switch stack the recommended design would be to not have it as a member of a vPC and just use OSPF to give you the same advantages that vPC gives you at L2. ", 
        "type": "2", 
        "id": "106", 
        "parentId": "102"
    }, 
    {
        "content": "There are technologies like wavelength division multiplexing (WDM), that you can't use with copper. I would say that two best reasons to use fiber over copper is max cable length and WDM. ", 
        "type": "2", 
        "id": "107", 
        "parentId": "99"
    }, 
    {
        "content": "I think that the documentation is fundamental and all the answers (especially Mike's one IMHO) pointed out very good reasons to do so.  What I would like to add is that, I think the choice of the tool should be done on the base of the \"audience\". That is: if one needs to document a developed simulator for him and some colleagues, perhaps GitHub is sufficient. But, consider the case in which the same simulator should be used in an academic course: then, probably, it is worth to provide to students also a rough illustration guide to explain the basic functionalities. ", 
        "type": "2", 
        "id": "108", 
        "parentId": "72"
    }, 
    {
        "content": "This is way too broad, but here is an effort to answer what I think you are asking.  What follows is more information concerning Jeremy's answer above.  I assume you are asking about prioritizing traffic based on specific aspects of the application layer control protocols (btw, I use TCP/IP terminology rather than OSI ones when discussing TCP/IP because IMO the OSI model does not map to TCP/IP as well as one might think --- for example try to understand how H.323 fits on the model, both as originally designed and when over TCP/IP).  As a simple example, maybe you want to prioritize TFTP requests for PXE booting over other TFTP requests, or perhaps you want to prioritize H.323 signalling of some types over others.  To do this you need either routers or the like which can understand the protocols you wish to shape traffic based on.  These routers then need to be able to inspect the packets deeply at least when required, and then shape the traffic based on what they find.  Needless to say different application protocols will have different requirements and possibilities.  For this reason, it depends on the platform, the protocol, and what you want to accomplish.  As others have noted various vendors have toolkits for this, but to really answer what is involved, we need a lot more information about what traffic you have, what problem you are solving, and what tools you have available to you already. ", 
        "type": "2", 
        "id": "109", 
        "parentId": "3"
    }, 
    {
        "content": "You need a proper application aware appliance. Exinda, riverbed, etc. Cisco and Juniper et al (yes I include WAAS) is a crowbar solution. NBAR is nowhere as accurate esp. with the trickier protcols that use random/dynamic ports. For enterprise use NBAR is fine as you can control the environment but when dealing with the internet you are going to be dealing with a lot of clever tricky protocols and varied situations.   For example the app aware stuff can be tied into dynamic white/blacklists and offer far more granular behaviour e.g. for http, allow burst for first 100M, if the rate is above X (set it above HD youtube lol) then start rate limiting after the first 100M if priority traffic is getting contended. This kind of behaviour gives your users excellent experience and appears transparent to them whilst hitting people downloading large files via http/https like filelockers for example. And critically they deal with a lot more protocols, try getting nbar to spot chinese p2p video streaming like pplive or pps for example.   For basic enterprise use yes you'd rely on nbar/static port definitions then use qos classifications to queue appropriately. Works fine in that scenario.  ", 
        "type": "2", 
        "id": "110", 
        "parentId": "3"
    }, 
    {
        "content": "If cost is a factor for you, I would look at it like this;  Scenario 1  If you are making a short run, say 50M, I would go for copper, simply because of cost (This 50M run is between two comms cabs in an office building for example).  Copper is cheaper and using switches would save on the cost of SFPs or GBICs and so on. We obviously aren't talking thousands here but some people are on strict budgets.  Scenario 2  If you are making a short run between two cabs in a DC between core routers, it would be fibre for me hands down.  In scenario 1, you could in fact drop in two or three 50M lengths of copper for almost the same price as one run. This would cover any likely future expansion. In scenario 2, fibre would better cover future expansion and give a greater ROI because of technologies like WDM.  As others have mentioned, fibre will go futher. If you want greater than 100M, you have one option - fibre. If you need a shorter run, it simply becomes a cost trade off. ", 
        "type": "2", 
        "id": "111", 
        "parentId": "99"
    }, 
    {
        "content": "In addition to the exact answer about MMF and SC-SC connectors, the PDF presentation linked here from Richard Steenbergen @ NANOG57 is the best introduction to fibre you'll ever find.  Everything You Always Wanted to Know About Optical Networking \u2013 But Were Afraid to Ask  ", 
        "type": "2", 
        "id": "112", 
        "parentId": "15"
    }, 
    {
        "content": "If you run linux you could try l7-filter, which is a iptables/netfilter-module. You can then use the usual iptables-magic to do some QOS. Weathermaps could be created with collectd (writing to RRDs) and then reading from these with http://www.network-weathermap.com or http://weathermap4rrd.tropicalex.net/  I have no tool ready that allows monitoring and dynamic prioritisation \u2014 you might have to invest in some soft of tailored linux-distribution or a hardware-firewall of some sort. ", 
        "type": "2", 
        "id": "113", 
        "parentId": "3"
    }, 
    {
        "content": "How does STP/RSTP determine which bridge is the root bridge, and how are paths to the root bridge selected ? ", 
        "type": "1", 
        "id": "114", 
        "parentId": -1
    }, 
    {
        "content": "You're asking about STP theory:  https://en.wikipedia.org/wiki/Spanning_Tree_Protocol  But the basic idea is that each switch has a Bridge ID which is a combination of its priority and its MAC address. By default, all switches use 32768 as their priority so by default the switch with the lowest MAC will act as the Root Bridge. You can manipulate this by adjusting the priorities, since the default Root Bridge is likely not the one you want to act as Root. You would decide which switch to use as root based on your layer 2 designs and where you anticipate layer 2 traffic to travel most.  The cost of the path to root is the sum of the link costs between the port in question and the relevant port on the root bridge. The faster the link, the lower the cost. So ten hops to root over 1GBPS links would give a port cost of 40 (4+4+4+4+4+4+4+4+4+4), while a single 10MBPS link would be 100. So the root port would be the one that connects to the 1GBPS links.  You can also manipulate the STP paths and roots per vlan. The link above will get you started. It can be as complex as you want it to be. ", 
        "type": "2", 
        "id": "115", 
        "parentId": "114"
    }, 
    {
        "content": "Not sure how much you know about switching and spanning tree but basically when starting out all switches claim that they are the root. All switches send BPDUs (Bridge Protocol Data Unit) which contain a priority and the BID (Bridge ID).   The BID is 8 bytes long. 6 bytes is used for the MAC address of the bridge. 12 bits is used to indicate the VLAN, this is called extended system ID. 4 bits are used to set the priority. Lower priority means it is preferred compared to a higher. The priority is set in multiples of 4096.  If there is a tie in priority then the lowest MAC address will determine which bridge becomes the root.  To select the path to the root the cost to the root is calculated. As the BPDU travels from the root downstream the cost is increased INBOUND. 802.1D-1998 (legacy STP) had a cost of 19 for a FastEthernet interface. The newer standard 802.1D-2004 defines a cost of 200000 for FastEthernet.  If there is a tie in cost then choose the BPDU that came from the switch with lowest BID. If that is a tie as well (multiple links to same switch) port ID comes into play. The port ID is from the upstream switch as well and consists of a port priority and port ID which identifies the interface. The default port priority is 128.  There is a lot to spanning tree but these are the basic steps. ", 
        "type": "2", 
        "id": "116", 
        "parentId": "114"
    }, 
    {
        "content": "I would answer it differently.  When you configure for example a value of 5 in the tt-security feature, the router deduct 5 from 255, so it accepts only an IP TTL greater than or equal to 255 minus the value configured.  SO, it doesnt really means it only accept a router directly connected.  IT avoids attacks from host manipulating the TTL in the TCP session. ", 
        "type": "2", 
        "id": "117", 
        "parentId": "81"
    }, 
    {
        "content": "In cases where common configure mode is unavailable, like when the chassis are clustered, you can use the following method.  After executing a commit at, JunOS checks the config and creates the file /config/juniper.conf+.gz. The running config database is locked until the commit at time, so other users won't be able to commit interim changes.  Other users can delete pending changes with the clear system commit command.  This will unlock the running config database and allow for other commits; however, the original user may be a bit upset at his or her changes not going in.  If you want to see what the differences between the pending config file and the current running config, perform the following:  configure private load replace /config/juniper.conf+.gz show | compare   JunOS will output the patch-style text of the changes in the pending commit. After doing whatever work you need to complete during the pending commit, you can paste that back in with a load patch terminal (or pipe to another file), and the original commit at user will be much happier.  Edit: If you seem to be forced into a private edit mode, as might be the case in a chassis cluster:  user@SRX3600> configure  warning: Clustering enabled; using private edit warning: uncommitted changes will be discarded on exit Entering configuration mode  {primary:node1}[edit]   you can use   configure shared show | compare   That seems to work just fine and skirts that nasty issue of being forced into private config mode.  configure shared is a hidden commmand ", 
        "type": "2", 
        "id": "118", 
        "parentId": "83"
    }, 
    {
        "content": "I'm comfortable with IPv4 address space allocations. By which I mean: Given services to plan for, or an organization to network, I have a good grasp of how to plan IP address space usage. (or at least, I think I do. :)  Are there any best practices guidance, or case studies, for IPv6 address space layout? ", 
        "type": "1", 
        "id": "119", 
        "parentId": -1
    }, 
    {
        "content": "I only use it on copper ports where there is another L1 media between endpoints, the usual culprit of this is a fibre media converter. ", 
        "type": "2", 
        "id": "120", 
        "parentId": "69"
    }, 
    {
        "content": "The layout that we are using for our rollout is:   /48 per customer /56 per customer site (as a subnet of the other /48) /126 for all point-to-point links in the core, these are all subnets of a /48 used for all core links   These sizes are mostly taken from the RIPE advisory here. ", 
        "type": "2", 
        "id": "121", 
        "parentId": "119"
    }, 
    {
        "content": "I will add another factor that hasn't been mentioned.  I can quickly and easily make copper cables, measured and cut to the exact length I need for a run...resulting in neater cable plants.  While you can cut to length and put ends on fiber optic cable, I find it considerably more difficult and time consuming...and my experience doing this is with multi-mode fiber, I can only imagine that single-mode is that much worse. ", 
        "type": "2", 
        "id": "122", 
        "parentId": "99"
    }, 
    {
        "content": "Depending what type of traffic is going over the network, it's often not feasible that an employee brings a wireless router and sets it up into your network. This because often they are not or poorly secured and present a backdoor into the network. What can you do to prevent rogue wireless access points being introduced into your network?  ", 
        "type": "1", 
        "id": "123", 
        "parentId": -1
    }, 
    {
        "content": "First of all you need to build a policy prohibiting introducing network equipment into the network which is not owned by or approved by the company IT department. Next enforce port security so that unknown mac addresses cannot connect to your network.  Third set up a separate wireless network under your control (if you give them what they want they are less likely to introduce rogue AP) (if possible and feasible) for accessing the internet with their (mobile) devices. These access points should be secured with PEAP or similar and preferably run on a separate network.  Last you can also do regular security scans using tools like netstumbler to detect and track rogue access points in your network.   There is also the option to perform IPsec over your network so that in case someone does set up a rogue AP, the exposed \"waves\" will not be plain readable in case of someone sniffing the wireless network.  ", 
        "type": "2", 
        "id": "124", 
        "parentId": "123"
    }, 
    {
        "content": "The old recommendation was to use /64 everywhere even on P2P links and assign a /48 per site.  Using large, empty subnets on point-to-point links can lead to a number of potential security issues, (see RFC6164,) so it's now best practice to use a /127 for P2P links and /128 for loopbacks.  It's not necessary to give a small customer a /48 although you would have plenty addresses to go around if you choose to do so.  Interfaces that are facing customers should be /64 if you want to use SLAAC. If you don't intend to use it you can use another mask.  Here are some good links to go through:  BRKRST-2301 from ciscolive365.com (create free account) http://www.cisco.com/web/strategy/docs/gov/IPv6_WP.pdf http://tools.ietf.org/html/rfc5375.html http://tools.ietf.org/html/rfc6177  Some people take their current v4 assignments and convert second and third octet into hex and use that for v6. There are lots of different ways of doing it so you have to choose what feels best. ", 
        "type": "2", 
        "id": "125", 
        "parentId": "119"
    }, 
    {
        "content": "Lucas's answer above is a bit of a starting point.    There are however two or three other things that must be considered.  These end up being somewhat outside the scope of network engineering, but certainly have impacts for network engineering and security so here they go.   You probably want some way of preventing wireless cards in company laptops from being switched into ad hoc mode.  Assuming the laptops are running Windows, you probably want to use a GPO to set to infrastructure mode only.  For Linux, it is harder to fully restrict, but there are ways to do this too. Enforcing IPSec is also a good idea, particularly with good key management and trusted enforcement.  For example if you can go to X509 certs for key management this can keep unauthorized devices from communicating with the rest of your network directly.  Consider key management as a core part of the infrastructure here.  If you use a proxy server you may even be able to block unauthorized devices from accessing the internet. Note the limitations of your efforts.  None of these prevents a person from setting up an unsecured wireless access point connected to a USB NIC, for sole purposes of communicating with their computer, especially if the SSID is hidden (i.e. not broadcast).   Not sure how to further contain problems or if further paranoia is well past the point of insufficient returns..... ", 
        "type": "2", 
        "id": "126", 
        "parentId": "123"
    }, 
    {
        "content": "With IPv6 you no longer have to worry about allocating space for a given number of hosts.  All subnets (other than P2P links) should be assigned as a /64 which gives you a ridiculous number of host addresses.  This frees you to focus on other topics such as good network layout & design.  (A /48 would give you 65,536 /64 networks)  There are (of course) several schools of thought on this.  If you are already pretty happy with your IPv4 design, then doing a IPv6 overlay that mirrors things is probably a good option and eases the transition for everyone.   2001:0DB8:1:1:: /64  -->  10.1.1.0 /24  2001:0DB8:1:2:: /64  -->  10.1.2.0 /24  ...  2001:0DB8:1:254:: /64 --> 10.1.254.0 /24   Play around with some of the IPv6 calculators to help you get your head around all of this.  Here is an example one:  GestioIP Online IPv4/v6 Calculator  This was the hardest thing for me to get over - don't worry about allocating space for hosts!  Plan your network -- focus on locations of layer-3 boundaries, services offered, physical location of devices, etc.  It is probably going to be years before you have a pure IPv6 network, but you will begin laying the groundwork of good network design now. ", 
        "type": "2", 
        "id": "127", 
        "parentId": "119"
    }, 
    {
        "content": "From a monitoring standpoint, you could run a tool like NetDisco to find switchports with more MAC addresses connected than you would expect. It wouldn't automatically prevent a rogue WAP from being introduced to the network, but it would let you find one after the fact.  If the equipment connected to your switchports can be expected to remain static, MAC address limiting (with violations configured to administratively down the switchport) could prevent any rogue device (not just WAPs) from being connected. ", 
        "type": "2", 
        "id": "128", 
        "parentId": "123"
    }, 
    {
        "content": "Unless you're receiving lots of the macflap notifications, I wouldn't be concerned. It sounds like the roaming client is temporarily communicating with two APs (which are connected to the same switch) as it is being handed off from one to the other. The macflaps are occurring because the switch sees traffic from the same MAC on two interfaces at the same time. I would expect the macflaps to stop as the handoff is complete. The usual concern with macflaps is when they don't stop - the thrashing from constantly updating the MAC table multiple times a second can seriously damage a switch's hardware ($WORK once literally melted a 6500 supervisor card that way).   I don't see why the MAC table would flush through the L2 domain - its context is local to the switch. If you attach one of the APs to a different switch, you should stop seeing the macflap notifications. ", 
        "type": "2", 
        "id": "129", 
        "parentId": "91"
    }, 
    {
        "content": "I understand that IPv6 reserves the fe80::/10 prefix for link local addresses, and that hosts select an address with a /64 prefix.  Why is the reserved space so much larger than what is actually used for link local? ", 
        "type": "1", 
        "id": "130", 
        "parentId": -1
    }, 
    {
        "content": "For light amplification for longer-haul fiber lines, as far as I can tell, the two major options are EDFA's and Raman amplifiers.  What is the tradeoff between one type and the other?  Are there areas where Raman amplifiers are clearly better?  Is it just a matter of EDFA's being cheaper and Raman Amplifiers having greater gain ranges, or is there something more major that I am missing?  (For the uninitiated, EDFA = erbium doped fiber amplifier.  It acts basically as a sort of a lasing chamber without the mirrors, so it amplifies laser signals as they go through the (usually single mode) fiber.  This boosts the maximum distance of a fiber run.) ", 
        "type": "1", 
        "id": "131", 
        "parentId": -1
    }, 
    {
        "content": "You know, I've never considered this.  I would presume that fe80::/64 is used because systems then run stateless address autoconfiguration (SLAAC) in that /64.  Leaving the rest of the /10 available for statically assigned link-local addresses and netblocks.  I'm having a tough time coming up with significant use cases for static link-local assignments, but I suppose there are reasons that people might end up wanting to do so. ", 
        "type": "2", 
        "id": "132", 
        "parentId": "130"
    }, 
    {
        "content": "In use the following layout myself (datacenter pov)  Colocation customers: one /48.  Dedicated servers: one /64 per server by default.  P2P links (bgp linknets, and so on): /126  As for the IPv4 -> IPv6 transition to a dual stack environment for hosted vlans I match the ipv4 subnet to an ipv6 subnet which is large enough, to contain a /64 for every single ipv4 address.  For example:  Vlan containing one /24 ipv4 (256 ip's), I match that with a /56 Ipv6 (256 unique /64 subnets)  Vlan containing one /23 ipv4 (512 ip's), I match that with a /55 ipv6 (512 unique /64 subnets) ", 
        "type": "2", 
        "id": "133", 
        "parentId": "119"
    }, 
    {
        "content": "I think the link-local scope was set to /10 simply to \"fit in\" better with the other scopes, e.g. site-local (before it was replaced with unique local).  Initially I had thought maybe it was to allow the use of many link-local networks on the same link, but RFC 4291 explicitly states that only fe80::/64 may be used. ", 
        "type": "2", 
        "id": "134", 
        "parentId": "130"
    }, 
    {
        "content": "I need to set up a modest iSCSI SAN with a few ESX hosts and one storage array. Can I get by using a Catalyst 2960-S or do I need to upgrade? Are there any special tweaks I need to make to the switch in order to handle iSCSI? The switch will be dedicated to the SAN; no other traffic except management will be present. ", 
        "type": "1", 
        "id": "135", 
        "parentId": -1
    }, 
    {
        "content": "Given that the Cat2960-S is a desktop/access switch, with very, very small buffers, you would likely experience a lot of output drops.  A datacenter switch, such as a 4948E, would be a better choice for an iSCSI application.    To understand the reasoning behind this, you have to remember that an ethernet switch is either transmitting, or not transmitting on a specific port.  If traffic arrives on port 1 for port 2, and port 3 is already sending traffic to port 2, the traffic from port 1 has to be buffered until there's a gap in the traffic from 3 to 2.  If the buffer fills, additional traffic will be dropped.  The term \"microburst\" is used to reference traffic that, over time, is well below the limit for the interface, but occasionally bursts to cause output drops.  I am not as familiar with the 2960-S platform, but enabling QoS (without extensive tuning, see comments below) on it would probably be a bad idea; that would actually increase the number of output drops.  Enabling QoS splits your very small buffers into 4 even smaller buffers, and most traffic will hit only one of them. ", 
        "type": "2", 
        "id": "136", 
        "parentId": "135"
    }, 
    {
        "content": "I've had experience where customers have chosen to use the lower end switches (3750, 2960) for iSCSI and they are pretty terrible.  The issue gets even worse when you have your storage connected at a higher speed (like 10gbit for the SAN and 1gbit for the end servers).  I would look towards more of the DC class switches, if you want to stick with Catalyst then there is the 4900 series, alternatively you could venture in to the Nexus product line but it really depends on your price constraints. ", 
        "type": "2", 
        "id": "137", 
        "parentId": "135"
    }, 
    {
        "content": "On one of my routers, I see the following switching modes:  #show fabric switching-mode  Global switching mode is Truncated dCEF mode is not enforced for system to operate Fabric module is not  required for system to operate Modules are allowed to operate in bus mode Truncated mode is allowed, due to presence of DFC, CEF720, Standby supervisor module  Module Slot     Switching Mode 1                      Bus 2                 Crossbar 3                     dCEF 4                      Bus 5                      Bus 6                 Crossbar 7                      Bus 8                      Bus 9                 Crossbar   What is the difference between Crossbar, Bus, and dCEF switching modes? ", 
        "type": "1", 
        "id": "138", 
        "parentId": -1
    }, 
    {
        "content": "\"Bus\" is connection to 16Gbit/s bus that is common to legacy 6500 architecture.  Crossbar and dCEF mean the connection from the LC (line card) is using switch fabric (separate SFM module for Sup2, integrated switch fabric chip on Sup720 and Sup2T).  Crossbar means the connection is from the line card that doesn't have distributed processing capabilities (no DFC on it, CFC is installed), while dCEF means there's distributed CEF mode running on line card using DFC. ", 
        "type": "2", 
        "id": "139", 
        "parentId": "138"
    }, 
    {
        "content": "Check out this page for the info you require, plus a list of references from the Cisco site;  http://null.53bits.co.uk/index.php?page=6500-7600-chassis-architecture ", 
        "type": "2", 
        "id": "140", 
        "parentId": "138"
    }, 
    {
        "content": "", 
        "type": "5", 
        "id": "142", 
        "parentId": -1
    }, 
    {
        "content": "A virtual private network (VPN) extends a private network across a public network.", 
        "type": "4", 
        "id": "143", 
        "parentId": -1
    }, 
    {
        "content": "It looks like the two technologies have different strengths; Pending someone else having a first-person answer, this is the best I could find:  Performance evaluation of EDFA, RAMAN and SOA optical amplifier for WDM systems     Abstract   In this paper 10 Gbps WDM systems at 16, 32 and 64 channels   have been investigated with EDFA, RAMAN and SOA amplifiers   individually and the performance has been compared on the basis of   transmission distance and dispersion with and without nonlinearities.   It is demonstrated that when the dispersion is 2 ps/nm/km and the   number of channels are less, then SOA provide better results because   as we increases the number of channels, the gain saturation problem   arises due to cross gain modulation, the cross phase modulation and   four wave mixing. When dispersion is increased from 2 to 10 ps/nm/km,   EDFA provides better results than SOA in the term of BER and output   power, but it shows non-uniform gain spectrum. We also observed that   RAMAN amplifier provides better results for L band amplification and   gain flatting issue because it can substantially reduce the impact of   fiber nonlinearity.  ", 
        "type": "2", 
        "id": "144", 
        "parentId": "131"
    }, 
    {
        "content": "BGP, or Border Gateway Protocol is used primarily on the Internet today in two flavors which have many similarities.  eBGP, or External BGP, is used to communicate routing information between different ASs (Autonomous Systems).  iBGP, or Internal BGP is used to communicate routing information inside a particular AS.  BGP is defined by RFCs, in particular RFC4271. ", 
        "type": "5", 
        "id": "145", 
        "parentId": -1
    }, 
    {
        "content": "BGP is Border Gateway Protocol, used on the internet both inside of and in between networks.", 
        "type": "4", 
        "id": "146", 
        "parentId": -1
    }, 
    {
        "content": "EIGRP and OSPF are both IGP protocols, the former is a mostly Cisco protocol and the latter is a well established open standard. What are the benefits of one over the other?  Put another way, when deploying a network, why choose one over the other? If you have mixed devices the choice would obviously be OSPF, but what if you are running a Cisco only shop? Are there any features where EIGRP excels compared to OSPF that would make it feasible to only deploy EIGRP? ", 
        "type": "1", 
        "id": "147", 
        "parentId": -1
    }, 
    {
        "content": "EIGRP is now an IETF draft so it's no longer proprietary. See http://tools.ietf.org/html/draft-savage-eigrp-01  If we look at EIGRP with default settings and OSPF with default settings and there are multiple loop free paths to a destination then EIGRP will converge much faster because it keeps what are called feasible successors in it's topology database. These are basically loop free alternatives to the best path. EIGRP also has summarization at any point in the network. It also has stub feature which is useful when you don't want to use a router for transit. Commonly deployed in DMVPNS. EIGRP is also less confusing than OSPF because it does not have different network types and EIGRP is easier to deploy in hub and spoke scenarios.  EIGRP uses a flat network without areas, this can both be an advantage and disadvantage.  OSPF is obviously an open standard so it's the logical choice if you have multiple vendors. It can perform well but it requires that you tweak SPF timers because by default in IOS there is a 5 second wait before running the SPF algorithm. OSPF uses areas which means you can segment the network more logically. OSPF can only summarize between areas. OSPF is link state so it has a better view of the entire network than EIGRP before it runs the SPF algorithm. Network administrators will usually be more comfortable with OSPF because it's more commonly deployed.  Both protocols have advantages and disadvantages. But the common answer that EIGRP should be discarded because being proprietary is not entirely true any longer. ", 
        "type": "2", 
        "id": "148", 
        "parentId": "147"
    }, 
    {
        "content": "Let's say you have a bunch of separate but fully internally addressable Networks (Building 1, Building 2, Building 3, ...), that run on an IPv4-Basis.  What would be possible ways, to switch the connecting Backbone to a IPv6-Basis as transparently as possible, so that the IPv4-Devices in the respective Networks do not notice the change, unless they actively try to look for it? ", 
        "type": "1", 
        "id": "149", 
        "parentId": -1
    }, 
    {
        "content": "Quick rule of thumb: dCEF > Crossbar > Bus  If you have a line card operating in bus mode, then your active supervisor will operate in bus mode as well.  This can impact the performance of your 6500/7600.  You may want to look into the modules running in bus mode.  Many of these modules have been EoL for some time and should probably be replaced.  We recently also discovered that the Sup2T will also have issues with modules that use CEF256 which will cause them to run in bus mode (per Cisco internal document referenced when we opened a TAC case) even though they will run in crossbar mode with a Sup720. ", 
        "type": "2", 
        "id": "150", 
        "parentId": "138"
    }, 
    {
        "content": "A Brocade router running NetIron 5.2, and a Dynamips emulation running IOS 12.4 both fail to dependably use equal cost paths in what seems to be a very simple configuration. I say \"dependably\" because I did observe very briefly the expected behavior from the Brocade, but it was after a longish period of inactivity and vanished as soon as I perturbed the system.  In case it is relevant, I am setting up an anycast destination for a stateless network service. This will be a site-specific configuration, with little or no network path length diversity, so the purpose of the anycast capability is mainly for fail-over redundancy and partly for load sharing. My question concerns the load sharing function.  My prototype network looks like this.  R1 <--N1--> Rcore <--N2--> R2   R1 and R2 advertise the anycast destination via OSPF. If Rcore has identical cost to on its N1 and N2 interfaces, and the anycast destination has identical cost at each of the other routers, I would expect to find two equal cost paths in the Rcore routing table. I don't, at least not always, and not even predictably. Why not?  Among other, potentially relevant details are the following.   Rcore is an ABR connecting N1 and N2, which are in separate NSSA areas, to the backbone (not shown). Inspection of the Rcore LSDB confirms that the expected LSAs from R1 and R2 are correctly installed, and contain the anycast destination with the correct metric.   I have considered three possible explanations.   I don't understand how to configure and operate ECMP on these platforms. This is likely, and I hope to find enlightenment here that I could not find in the vendor docs. I don't understand the interaction among OSPF Areas, ECMP, anycast, etc. I don't think this is very likely, but I am prepared to learn something anyway. These two vendors implementations suffer from the same bug, or mis-feature, or something. I suppose it could happen.   Edit Added example config and output for Dynamips/Dynagen implementation.  Configs  Router R1  ! version 12.4 ! hostname R1 ! interface Loopback0  ip address 1.1.1.1 255.255.255.255  ip ospf cost 1 ! interface FastEthernet0/0  ip address 10.1.0.2 255.255.255.252  ip ospf cost 2 ! router ospf 1  router-id 10.1.0.2  log-adjacency-changes  area 0.0.0.1 nssa no-summary  passive-interface Loopback0  network 1.1.1.1 0.0.0.0 area 0.0.0.1  network 10.1.0.0 0.0.0.3 area 0.0.0.1 ! line console 0  exec-timeout 0 0 ! end   Router R2  ! version 12.4 ! hostname R2 ! interface Loopback0  ip address 1.1.1.1 255.255.255.255  ip ospf cost 1 ! interface FastEthernet0/0  ip address 10.2.0.2 255.255.255.252  ip ospf cost 2 ! router ospf 1  router-id 10.2.0.2  log-adjacency-changes  area 0.0.0.2 nssa no-summary  passive-interface Loopback0  network 1.1.1.1 0.0.0.0 area 0.0.0.2  network 10.2.0.0 0.0.0.3 area 0.0.0.2 ! line console 0  exec-timeout 0 0 ! end   Router Rcore  ! version 12.4 ! hostname Rcore ! interface Loopback0  ip address 10.0.0.1 255.255.255.255  ip ospf cost 4 ! interface FastEthernet0/0  ip address 10.1.0.1 255.255.255.252  ip ospf cost 2 ! interface FastEthernet0/1  ip address 10.2.0.1 255.255.255.252  ip ospf cost 2 ! router ospf 1  log-adjacency-changes  area 0.0.0.1 nssa no-summary  area 0.0.0.2 nssa no-summary  passive-interface Loopback0  network 10.0.0.1 0.0.0.0 area 0.0.0.0  network 10.1.0.0 0.0.0.3 area 0.0.0.1  network 10.2.0.0 0.0.0.3 area 0.0.0.2 ! line console 0  exec-timeout 0 0 ! end   Output  Router Rcore  Router LSA from R1  Rcore#sh ip ospf database router 10.1.0.2              OSPF Router with ID (10.0.0.1) (Process ID 1)          Router Link States (Area 0.0.0.1)    LS age: 1618   Options: (No TOS-capability, DC)   LS Type: Router Links   Link State ID: 10.1.0.2   Advertising Router: 10.1.0.2   LS Seq Number: 80000002   Checksum: 0x726F   Length: 48   Number of Links: 2      Link connected to: a Stub Network      (Link ID) Network/subnet number: 1.1.1.1      (Link Data) Network Mask: 255.255.255.255       Number of TOS metrics: 0        TOS 0 Metrics: 1      Link connected to: a Transit Network      (Link ID) Designated Router address: 10.1.0.2      (Link Data) Router Interface address: 10.1.0.2       Number of TOS metrics: 0        TOS 0 Metrics: 2   Router LSA from R2  Rcore#sh ip ospf database router 10.2.0.2              OSPF Router with ID (10.0.0.1) (Process ID 1)          Router Link States (Area 0.0.0.2)    LS age: 1766   Options: (No TOS-capability, DC)   LS Type: Router Links   Link State ID: 10.2.0.2   Advertising Router: 10.2.0.2   LS Seq Number: 80000002   Checksum: 0x8A53   Length: 48   Number of Links: 2      Link connected to: a Stub Network      (Link ID) Network/subnet number: 1.1.1.1      (Link Data) Network Mask: 255.255.255.255       Number of TOS metrics: 0        TOS 0 Metrics: 1      Link connected to: a Transit Network      (Link ID) Designated Router address: 10.2.0.2      (Link Data) Router Interface address: 10.2.0.2       Number of TOS metrics: 0        TOS 0 Metrics: 2   Routing table excerpt  Rcore#sh ip route 1.1.1.1 Routing entry for 1.1.1.1/32   Known via \"ospf 1\", distance 110, metric 3, type intra area   Last update from 10.1.0.2 on FastEthernet0/0, 00:30:54 ago   Routing Descriptor Blocks:   * 10.1.0.2, from 10.1.0.2, 00:30:54 ago, via FastEthernet0/0       Route metric is 3, traffic share count is 1  ", 
        "type": "1", 
        "id": "151", 
        "parentId": -1
    }, 
    {
        "content": "You can read about the finer workings of these protocols for yourself, they are thoroughly documented on the Internet and it's a doddle to find information on them.  From a practicle perspective I would say that in the case of EIGRP vs OSPF, OSPF always wins for the following reasons:  Convergence Speed:  Everyone always mentioned that EIGRP is faster than OSPF using default settings. If you deploy either protocol without reading about them and use their default settings, then you clearly don't know what you are doing in my opinion. Why would you deploy default settings without knowing what they are, and when you do realise what they are you realise that OSPF supports BFD and becomes lightening quick (as does ISIS).  Traffic Engineering:  Because OSPF like ISIS is based on TLV values, it has been extended quite a lot. It has support for extensions like MPLS-TE and GMPLS.  Continual Expansion  As I mentioned above, OSPF and ISIS have been extended quite a lot and extension drafts are being written fairly regularly and will continue to be. EIGRP doesn't have many of the advanced options these two do.  Scalability  OSPF scales better than EIGRP with its use of areas however, I don't think this really matters either (like the convergence time aregument, due to BFD). Not many people are running 10k routes in one area in OSPF. Typically I would use an IGP for fast routing within a given part of a network, but ultimately iBGP carries all the internal routes. Every single router doesn't need every internal route in its RIB sourced via OSPF if you have hundreds or thousands or routers, some of them are so far away (topologically speaking) it's worthless knowing about them.  Interoperability  Lastly there is the obviously reason that EIGRP is/was a Cisco proprietary technology. Although this has recently been submitted into a draft for other software vendors to start incorporating, it's too late (I believe). No currently running network is going to waste huge sums of money switching from some other IGP to EIGRP, and I don't know why a new network would consider it (if you are going to be mixing Cisco equipment with non-Cisco). Simply because non-Cisco equipment that supports OSPF has been doing so for years. The code is tried and test, many bugs fixed, oodles of information on line etc. It will take years for EIGRP to catch up (if it isn't too late already!). ", 
        "type": "2", 
        "id": "152", 
        "parentId": "147"
    }, 
    {
        "content": "I can't reproduce this in my lab, using 12.4(24).  Same topology, RCore area 0 loopback, R1 with lo0 and interface in area 1, R2 with lo0 and interface in area 2 (both NSSA), redistributed route gets picked up for ECMP on Rcore:  Routing entry for 10.20.0.0/16   Known via \"ospf 1\", distance 110, metric 20, type NSSA extern 2, forward metric 6477   Last update from 2.2.2.6 on Serial1/1, 00:02:23 ago   Routing Descriptor Blocks:     2.2.2.6, from 2.2.2.21, 00:02:23 ago, via Serial1/1       Route metric is 20, traffic share count is 1   * 1.1.2.1, from 1.1.1.1, 00:06:31 ago, via Serial1/0       Route metric is 20, traffic share count is 1   Possibilities I can think of: Depending on how the route is making it into OSPF, and what OSPF route-type is used, cost to ASBR router may/may not be factored into the route selection process (for ECMP to work, both route cost, and cost to ASBR have to match).  Seeing the metric on the actual LSA for both may help.    I was able to reproduce this on IOS by mimic'ing your configuration -- placing the anycast on an interface, and placing the interface into an area.  If you do need ECMP, consider redistributing the route into OSPF, as that does appear to work. ", 
        "type": "2", 
        "id": "153", 
        "parentId": "151"
    }, 
    {
        "content": "I think another reason someone might use one over the other is just cost.  EDFA is usually cheaper from what I've seen, in comparison to RAMAN.  From MRV website: \"They [RAMAN] also have a better optical signal-to-noise ratio than EDFA amplifiers.\" http://www.mrv.com/product/MRV-FD-OARM/ ", 
        "type": "2", 
        "id": "154", 
        "parentId": "131"
    }, 
    {
        "content": "", 
        "type": "5", 
        "id": "155", 
        "parentId": -1
    }, 
    {
        "content": "Simple Network Management Protocol (SNMP) is used for managing devices on IP networks. It is most often used to query statistics for network equipment.", 
        "type": "4", 
        "id": "156", 
        "parentId": -1
    }, 
    {
        "content": "I'm pricing out a decent size 10gb network (6-8 ToR switchs) and the uplink costs are a major factor.   I figure each ToR switch needs 4x40gb uplinks and you have a cost for the uplink optics that is approximately the cost of the ToR switch itself, not to mention the server cabling. That is with 1st part optics (Juniper in my case).  Anybody have any practical experience with either:    Cheaper 3rd party 40gb optics, or  Using the copper ones?    I'm interested in experience with 3rd party optics.   How is the longevity and quality? How much pushback do you get from your switch vendors? Anything to look for or avoid?  We use copper sfp+ cables wherever practical to save costs, I presume the qsfp+ ones would be similar. Anything else I'd need to be aware of? ", 
        "type": "1", 
        "id": "157", 
        "parentId": -1
    }, 
    {
        "content": "To offer a different approach to the others given already, which may or may not be better than the existing ideas, but primarily to through some extra ideas out there;  I would say two easy steps you can take to improve on your current situation are as follows;  Step 1;  Get full BGP tables from both providers - Now, you will have more optimal outbound routing because you will be routing via the transit provider with the smallest AS path to your destination. As you said, you can remove HSRP and simple advertise a default route in OSPF and run iBGP between your two edge routers.  Step 2;  Set up AS prepends and communities etc on your two edge routers to control outbound traffic granularly as you require. So ISP B may have a better route to some subnet but you may buy more transit from ISP A and rather it when via them, and so on.    Assuming the two /24's you mentioned as having are PI independent address space so you are announcing them via both providers, or both providers have agree to announce the same IP address space for you, you can now announce both prefixes to both ISPs from both routers without prepends or communities and get better inbound routing as well (of course, unless you have some CDRs you need to adhear to or similar, in which case you can tune as required). ", 
        "type": "2", 
        "id": "158", 
        "parentId": "76"
    }, 
    {
        "content": "If the full BGP table is too much for you I think you could consider just receiving a portion. Perhaps provider A and B each advertise a default route and their local AS routes. You would need to run iBGP internally. That way you would have the shortest route for anything directly connected to the providers and would take either for downstream AS routes. ", 
        "type": "2", 
        "id": "159", 
        "parentId": "76"
    }, 
    {
        "content": "If the distances are short enough I would look at the twinax receivers, at the end of the day this is what they were designed for.  I don't know if 40gbit and the larger 100gbit have been around long enough yet for their to be a 'grey' market of QSFP/CFP's.  Be careful with copper (non-twinax) though if you are running anything like FCoE over the links as the BER is usually too high for the lossless network required by FCoE. ", 
        "type": "2", 
        "id": "160", 
        "parentId": "157"
    }, 
    {
        "content": "In answer to you question: How hard would it be, to switch the connecting Backbone to a IPv6-Basis as transparently as possible, so that the IPv4-Devices in the respective Networks do not notice the change, unless they actively try to look for it?  I'm going to say, \"not too hard,\" but I realize that is a rather ambiguous answer :)  Couple of things to consider:   Careful planning to not exclude any IPv4 hosts from keeping connectivity under the new IPv6 backbone, You will need both expertise and some experiences already in troubleshooting IPv4 and IPv6 and 4-to-6 related issues, otherwise you are going to be \"driving blind\", I  assume you have checked all the devices and they all have both IPv4 and IPv6 capability where required,   Ultimately asking \"How hard is...?\" is a bit like \"How long is a piece of string?\". I'm going to stick with \"not too hard\" because I would say from a networking point of view you can get away with simply configuring IPv4 in IPv6 GRE tunnels (I say simply, this depends on the applications on your network and if this will correctly support them! You may have to look at something more advanced like a VPLS style scenario over IPv6 BGP/MPLS to have more functional broadcasting amongst hosts, or multiple pseudowires or similar).  So from a theoretical point of view you could configure a network as dual stack and have full IPv4 and IPv6 visibility and convergence across it, then configured GRE tunnels from the access layer across the core, then slowly reconfigure access links as IPv6, but unless you move everything into IPv6 in one hit, you will likely have broken visibility across devices on the network.   In terms of a real world scenario, I would dual stack everything, then shut off IPv4 if you really wanted to, I don't think I would try for a tricky \"transition\" away from IPv4 though. Best of luck. ", 
        "type": "2", 
        "id": "161", 
        "parentId": "149"
    }, 
    {
        "content": "My first thought would be that OSPF is thinking it's the same LSA instead of simply the same prefix. I don't know much about brocade, but with the LSA outputs from the Cisco box I could probably tell you more.   In general, for Cisco, if the routes are equal in the protocol they will both be presented to the routing table. The routing table, will, by default, install both paths and do ECMP. If the metrics or protocols differ, they will not ECMP. This would also apply to different LSAs for the same prefix. ", 
        "type": "2", 
        "id": "164", 
        "parentId": "151"
    }, 
    {
        "content": "Depending on what Brocade hardware you're using (MLX? CER? XMR?), you might want to update the software.  There were several bugs fixed through the 5.3 (and 5.4 depending on your hardware) software trees who's symptoms were related to OSPF route costs not being updated properly.  I don't know all the criteria for seeing the bugs, but a couple of them were:  If the cost was changed on a 1gig port or a loopback interface on a router running OSPF, the change was not processed and the cost was not updated.  I realize you're seeing this on two manufacturers' platforms, so this is more likely to be a configuration issue.  I also realize that the old tech-support-punt \"update your software\" can often be worth nothing more than an eye roll.  That said, it might be something to keep in mind. ", 
        "type": "2", 
        "id": "165", 
        "parentId": "151"
    }, 
    {
        "content": "A site I support uses 3 T1s setup with multilink PPP.  They are trying to use Jive which is a hosted VoIP provider, with horrible results.  I want to know how packets are distributed between the individual T1s since I think this may help explain what is going on.  SNMP monitoring of the multilink interface shows that they have available capacity, but their VoIP test calls are horrible.  It acts as if there is a huge amount of jitter and dropped packets.  Though simple tests with PING/Iperf to not show jitter/latency that is as bad as you might expect given the call quality.  How are packets distributed between the multiple T1s.  I assume that it isn't the same as Ethernet bonding.  If the multi-link PPP is an issue what can I look at on the routers that will show this? Can it be corrected?  The routers are Cisco, I believe they are 2800s, but I would have to double check. ", 
        "type": "1", 
        "id": "166", 
        "parentId": -1
    }, 
    {
        "content": "Good afternoon,  I've got a shiny new 4500E running 15.0(1r)SG7 that is set to replace an ailing 3750E. It is running ipbase for now.  On the 3750 I was able to check out the incoming DSCP/CoS values on interfaces using the sh mls qos int gigX/X/X statistics. I can't seem to find any releveant commands to show the same info on this platform. Looking at the config documents here: Configuring Quality of Service there seems to be much less visibility into the individual interface markings.  I would think it should have been displayed with a sh qos int tenX/X/X but all that gives me is this:  SR-CORE-C4500X-32#sh qos int ten1/1/31 Operational Port Trust State: Trusted Trust device: none Default DSCP: 0 Default CoS: 0 Appliance trust: none   Any ideas? ", 
        "type": "1", 
        "id": "167", 
        "parentId": -1
    }, 
    {
        "content": "Oi...lemme dredge up those long-unused neurons to remember how Multilink PPP works.  During the LCP phase when the first link is brought up during a non-multilink PPP session, the two sides negotiate the MRU (Maximum Receive Unit) for each direction of the link...basically each side tells the other how big of a packet it can handle being sent to it.  With Multilink PPP, they negotiate that, but they also negotiate, when the first link is brought up, an MRRU, or Maximum Reconstructed Receive Unit.  Because Multilink PPP added extra frame header space, the creators were concerned about Path MTU problems, so they decided that Multilink would be able to fragment and reassemble packets on either end of the Multilink PPP session.  So, yes, unlike Ethernet bonding, its not just a matter of balancing frames across the multiple links...the frames can actually be fragmented and reassembled.  This can cause a jump in latency and jitter.  On T-1's you should be able to configure each side with a significantly larger MRU and MRRU than any packets that would likely need to cross the link, and if the MRU is as large as, or larger than the MRRU, then you shouldn't see any fragmentation and reassembly occuring.  Hopefully this will get the latency and jitter under control and help out your VoIP behavior.  You will likely need to adjust this configuration on both sides of the links, though, as each direction is negotiated independently.  In general, I wouldn't expect VoIP packets to need to be fragmented, though...they tend to not be big enough to need that.  Worth a shot to check your MRU and MRRU sizes on the links and the Multilink session, maybe they're way out of whack and causing problems. ", 
        "type": "2", 
        "id": "168", 
        "parentId": "166"
    }, 
    {
        "content": "Flapping events don't require ingress traffic alternating between ports -- a simple change from ingress of a MAC address on port A to port B on a switch quickly enough will cause a flapping event to be logged; for instance, a live migration of a virtual machine from one host to another will often cause a MAC flapping notification.  As the other answers have covered, it's nothing to be worried about whatsoever until the events are much more frequent than what you're seeing.  Your concerns about spanning tree re-convergence and flushing of MAC tables are unfounded; it's not a topology change for spanning tree and the table is just getting updated for the MAC address that flapped - other entries on the same switch, same vlan, or same port are unaffected. ", 
        "type": "2", 
        "id": "169", 
        "parentId": "91"
    }, 
    {
        "content": "I understand that only the best path is advertised to eBGP neighbors, but is this true of iBGP? If I peer with two providers, I was under the impression that anyone else peering with both of my providers would have two paths to me. After inspecting a number of looking glasses, it appears this isn't so. ", 
        "type": "1", 
        "id": "170", 
        "parentId": -1
    }, 
    {
        "content": "Try this:  show platform hardware interface ten1/1/31 statistics  That should show you input bytes by CoS.  The 4500 is a very different beast than the 3560/3750 for qos config and monitoring.  Some other useful verification commands are:  show platform hardware qos interface foo X/Y  shows queue lengths and flow counts  show interface foo X/Y counter detail  shows interface egress packets by queue, queue drops and DBL drops.  show policy-map interface foo X/Y  Mostly useful if you are doing custom policy maps   show interface foo X/Y capabilities  If you want to know what the number and type of queues are available on a particular interface  show qos maps  To show the DSCP-CoS mappings ", 
        "type": "2", 
        "id": "172", 
        "parentId": "167"
    }, 
    {
        "content": "BGP always only advertises the best path onward to its peers.  This is true for eBGP, iBGP, route reflection (which is merely a special case of iBGP), and any other way you might use BGP.  But, yes, you are correct, if you are sending advertisements to providers A and B, and I have connections and BGP sessions also with providers A and B, then I should see both paths in my BGP tables.  I may not see multiple routes created in my routing tables...that's a question of the configuration of my devices and whether I allow multiple routes of equal AS Path lengths to be inserted into the routing table...typically BGP will only install a single route.  The BGP tables, though, should show advertisements from both providers.  Actually...even if I'm peering with providers B and C, or even C and D, I should still see multiple paths in my BGP tables as long as you are reachable through B, C, and D.  All other things being equal, my devices should pick B because that should be the shortest AS PATH, but I would still see the paths with the longer AS PATHs from C and D.  Now, perhaps C and D have both decided that the path through A is better than the path through B, then the paths that I would see would have AS PATHs of \"A C\" and \"A D\", so it would appear as if you weren't connected to B at all, but if the path through A went away, then the path through B would get propagated onward through C and D.  If you can give some specifics...maybe even your blocks that you're advertising if you're willing to share that....others can take a look at what we're seeing and perhaps give some more specific guidance. ", 
        "type": "2", 
        "id": "173", 
        "parentId": "170"
    }, 
    {
        "content": "The answer is not a simple \"yes\" or \"no\", but I think essentially your observation is indeed true that \"this isn't so.\"  For more detail, see here.  For the sake of curation, SE prefers against answers that are purely links to other pages, however, so I'll reproduce some of that here in case the source someday disappears or changes.     How the Best Path Algorithm Works      BGP assigns the first valid path as the current best path. BGP then   compares the best path with the next path in the list, until BGP   reaches the end of the list of valid paths. This list provides the   rules that are used to determine the best path:      1) Prefer the path with the highest WEIGHT.      Note:  WEIGHT is a Cisco-specific parameter. It is local to the router   on which it is configured.      2) Prefer the path with the highest LOCAL_PREF.      Note: A path without LOCAL_PREF is considered to have had the value   set with the bgp default local-preference command, or to have a value   of 100 by default.      3) Prefer the path that was locally originated via a network or   aggregate BGP subcommand or through redistribution from an IGP.      Local paths that are sourced by the network or redistribute commands   are preferred over local aggregates that are sourced by the   aggregate-address command.      4) Prefer the path with the shortest AS_PATH.      Note: Be aware of these items:      This step is skipped if you have configured the bgp bestpath as-path   ignore command.      An AS_SET counts as 1, no matter how many ASs are in the set.      The AS_CONFED_SEQUENCE and AS_CONFED_SET are not included in the   AS_PATH length.      5) Prefer the path with the lowest origin type.      Note: IGP is lower than Exterior Gateway Protocol (EGP), and EGP is   lower than INCOMPLETE.      6) Prefer the path with the lowest multi-exit discriminator (MED).      Note: Be aware of these items:      This comparison only occurs if the first (the neighboring) AS is the   same in the two paths. Any confederation sub-ASs are ignored.      In other words, MEDs are compared only if the first AS in the   AS_SEQUENCE is the same for multiple paths. Any preceding   AS_CONFED_SEQUENCE is ignored.      If bgp always-compare-med is enabled, MEDs are compared for all paths.      You must disable this option over the entire AS. Otherwise, routing   loops can occur.      If bgp bestpath med-confed is enabled, MEDs are compared for all paths   that consist only of AS_CONFED_SEQUENCE.      These paths originated within the local confederation.      THE MED of paths that are received from a neighbor with a MED of   4,294,967,295 is changed before insertion into the BGP table. The MED   changes to to 4,294,967,294.      Paths received with no MED are assigned a MED of 0, unless you have   enabled bgp bestpath med missing-as-worst .      If you have enabled bgp bestpath med missing-as-worst , the paths are   assigned a MED of 4,294,967,294.      The bgp deterministic-med command can also influence this step.      Refer to How BGP Routers Use the Multi-Exit Discriminator for Best   Path Selection for a demonstration.      7) Prefer eBGP over iBGP paths.      If bestpath is selected, go to Step 9 (multipath).      Note: Paths that contain AS_CONFED_SEQUENCE and AS_CONFED_SET are   local to the confederation. Therefore, these paths are treated as   internal paths. There is no distinction between Confederation External   and Confederation Internal.      8) Prefer the path with the lowest IGP metric to the BGP next hop.      Continue, even if bestpath is already selected.      9) Determine if multiple paths require installation in the routing   table for BGP Multipath.      Continue, if bestpath is not yet selected.      10) When both paths are external, prefer the path that was received   first (the oldest one).      This step minimizes route-flap because a newer path does not displace   an older one, even if the newer path would be the preferred route   based on the next decision criteria (Steps 11, 12, and 13).      Skip this step if any of these items is true:      You have enabled the bgp best path compare-routerid command.      Note: Cisco IOS Software Releases 12.0.11S, 12.0.11SC, 12.0.11S3,   12.1.3, 12.1.3AA, 12.1.3.T, and 12.1.3.E introduced this command.      The router ID is the same for multiple paths because the routes were   received from the same router.      There is no current best path.      The current best path can be lost when, for example, the neighbor that   offers the path goes down.      11) Prefer the route that comes from the BGP router with the lowest   router ID.      The router ID is the highest IP address on the router, with preference   given to loopback addresses. Also, you can use the bgp router-id   command to manually set the router ID.      Note: If a path contains route reflector (RR) attributes, the   originator ID is substituted for the router ID in the path selection   process.      12) If the originator or router ID is the same for multiple paths,   prefer the path with the minimum cluster list length.      This is only present in BGP RR environments. It allows clients to peer   with RRs or clients in other clusters. In this scenario, the client   must be aware of the RR-specific BGP attribute.      13) Prefer the path that comes from the lowest neighbor address.      This address is the IP address that is used in the BGP neighbor   configuration. The address corresponds to the remote peer that is used   in the TCP connection with the local router.   That said, however, I could be wrong. I'm rather a novice in this field. ", 
        "type": "2", 
        "id": "174", 
        "parentId": "170"
    }, 
    {
        "content": "All of my experience so far has been with Cisco products so that is all I can really speak to.  The WCS controlled APs (lightweight and normal) have the ability to detect and report when non-trusted SSIDs pop up and how many clients are connected to it. If you have heatmaps set up and a decent number of access points  you stand a pretty good chance of being able to figure out where the access point is in proximity to your APs.  The only down side to this is that if you are in close proximity to any bars/coffee shops/college dorms/neighborhoods expect to see pages worth of \"rogue\" SSIDs that change as frequently as people move.  The WCS also has the ability to do some switchport tracing and alert you if rogues are plugged into your network. I have yet to have much luck getting this to work.  I honestly haven't had a whole lot of time to play with it.  By default, at least on my network, there seem to be quite a few false-positives with the way the trace works.  Without looking for sure, I believe it only looks at OUI of the MAC and if it matches then you get an alert about a rogue on the network.  Lastly, the WCS also has the ability to contain rouge APs/SSIDs.  It does with by using deauth and disassociate messages to any clients that are connected to that AP. ", 
        "type": "2", 
        "id": "175", 
        "parentId": "123"
    }, 
    {
        "content": "", 
        "type": "5", 
        "id": "176", 
        "parentId": -1
    }, 
    {
        "content": "Major release 15 of Cisco's IOS software", 
        "type": "4", 
        "id": "177", 
        "parentId": -1
    }, 
    {
        "content": "Trying to look for your own routes in looking glasses does not always work the way you expect, particularly if you buy from someone who purchases a lot of transit. For example, Internap buys transit from many other large ISPs. If you buy from Internap and then someone else, there is a good chance that your route on the other provider would be hidden by virtue of not being best. Most ISPs prefer their own customer routes. Seeing or not seeing your own routes in a looking glass has very little to do with if your route is propagating correctly or not. ", 
        "type": "2", 
        "id": "178", 
        "parentId": "170"
    }, 
    {
        "content": "Yes you're right. Looks like you'll have to deal with having separate IPs unless aggregating via a VPN concentrator. TBH the concentrator is probably the best bet, you'll just need 1 extra IP for all VPN connections, but its outside interface will need to reside in a different subnet/VLAN from the public IP hosts. I would go with that otherwise you're configuring IPSEC VPN directly on each individual server, what a nightmare ", 
        "type": "2", 
        "id": "179", 
        "parentId": "79"
    }, 
    {
        "content": "http://packetlife.net/blog/2012/jan/16/catalyst-2960s-iscsi-optimization/  I followed Jeremy Stretch's post here a while back, moving our iSCSI SAN off a production switch onto a dedicated 3750G (stack of 2).  While I can't speak specifically to the 2960S, the tweaks offered in that post seem to be doing well on the 3750G's.  I've got a handful of OutDiscards (less than 100) but for 38 weeks of uptime, that seems pretty good for me.  This is running 4 ESXi hosts connected to 4 JetStor 1Gbps SANs and all links are aggregated.  I'll happily forward a \"sh int counters\" if you are interested.  (Ha! Just noticed it was Jeremy who asked this...sorry for linking your own blog post!) ", 
        "type": "2", 
        "id": "180", 
        "parentId": "135"
    }, 
    {
        "content": "Do Procurve switches remark cos/dscp values between switches (trust boundaries) as Cisco switches do?  I'm wondering if there is an equivalent to \"mls qos trust (cos/dscp)\" in the HP realm. ", 
        "type": "1", 
        "id": "181", 
        "parentId": -1
    }, 
    {
        "content": "We are currently looking at connecting two Asterisk servers across a Metro Ethernet.  This leads to a couple of questions I haven't been able to find answers to elsewhere.  The first involves bit error rates and cabling.  I would expect that TDMoE, by virtue of being timing sensitive would also be very sensitive to bit error rates (i.e. I don't see how missing data could be retransmitted).  Is this a correct assumption?  Data seems pretty sparse.  Should I be basing cabling considerations around BER for the links between the two servers?  Should I be asking BER-related questions to the Metro Ethernet provider?  Or is the protocol capable of handling reasonable loss?  I don't have a lot of experience with TDMoE but thinking through this, my concern is that lost ethernet frames would lead to lost PRI frames which might lead to dropped calls and PRI's going into alarm states. ", 
        "type": "1", 
        "id": "182", 
        "parentId": -1
    }, 
    {
        "content": "As mentioned in the previous question I am looking at sending voice communications over a Metro Ethernet connection shared also by data connections.  In addition to the previous question I have this one involving QoS guarantees and TDMoE.  Voice communications are expected to use a little over 25-30% of MAN link capacity (basically running a PRI over TDMoE, which is 15% plus significant encapsulation overhead.  My current plan is just to ensure that the TDMoE is properly classed re: CoS and use QoS management on the switches to ensure that it is transmitted first.  This seems simple, straight-forward, and hopefully ensures reliable voice transmission rates.  Is this good enough?  Is there anything QoS-wise that I am missing that I need to be doing?   ", 
        "type": "1", 
        "id": "183", 
        "parentId": -1
    }, 
    {
        "content": "Can you provide some more information on the equipment used and how much bandwidth you have? Will your voice equipment mark packets itself or do you need to take care of it? Usually CoS 5 and/or DSCP EF is used to carry voice payload. Voice should be sent in some form of LLQ (Low Latency Queue).  If you give us some more specifics we could help with providing a policy for you. ", 
        "type": "2", 
        "id": "184", 
        "parentId": "183"
    }, 
    {
        "content": "For example preventing it from sending arp, stp, etc and to reveal as little as possible about the rest of the network.  Example use case would be connecting to a peering exchange. ", 
        "type": "1", 
        "id": "185", 
        "parentId": -1
    }, 
    {
        "content": "I'd like to see a worked example of recreating a regular common VLAN based topology using MPLS on Juniper hardware. In particular we will be using EX3xxx and EX4xxx for swicthing, though I don't think that's relevant. The router in question could be a Juniper MX.  Let's assume you have an existing network topology as follows:                 +--------------------+     Trunk     +---------+                |      Switch 5      +---------------+ Router1 |                |                    |               +---------+                +--+-----------------+                                  |                   |Trunk                   |                +--+-----------------+     VLAN2     +---------+                |      Switch 1      +---------------+  Host5  |                |                    |               +---------+                +--+--------------+--+                                 |              |                                   |Trunk         |Trunk                                |              |                    +----------------+---+      +---+----------------+  |      Switch 2      |      |      Switch 3      |  |                    |      |                    |  +---+------------+---+      +---+------------+---+      |            |              |            |      |VLAN2       |VLAN2         |VLAN3       |VLAN4      |            |              |            | +----+----+  +----+----+    +----+----+  +----+----+ |  Host1  |  |  Host2  |    |  Host3  |  |  Host4  | +---------+  +---------+    +---------+  +---------+   All Trunk links allow all VLANs, and the router has sub interfaces in each VLAN. ", 
        "type": "1", 
        "id": "186", 
        "parentId": -1
    }, 
    {
        "content": "You can search cisco-nsp@ for different propositions as to what to enable/disable on the ports. For example start here:  http://www.gossamer-threads.com/lists/nanog/users/124659?do=post_view_threaded  Depending on your particular Cisco switch - Catalyst or Nexus, you may also search cisco.com for specific design practices. For example, for Catalyst 6500:  http://www.cisco.com/en/US/products/hw/switches/ps708/products_white_paper09186a00801b49a4.shtml ", 
        "type": "2", 
        "id": "187", 
        "parentId": "185"
    }, 
    {
        "content": "Take a look at http://tools.ietf.org/html/rfc4553, generally speaking while the transport should provide error information, you'll loose information, there's no way to retransmit something that was sent. The transport itself (CEoIP in Cisco speak, or more generally - L2VPN with TDM transport over it) will be fine as long signalization will work between end nodes, your application however, running it's data over the TDM may encounter errors.  That's why it's critical for the nodes to be able to properly time the transport. If you'll be providing the transport yourself this is also different discussion that if you're asking for transport - for typical ME service, you'll get typical Ethernet BER assurance. ", 
        "type": "2", 
        "id": "188", 
        "parentId": "182"
    }, 
    {
        "content": "Your question touches not BGP itself, but ISP policies. Not always - either by policy or by mistake - your providers will announce your space to upstreams. Are you using PI or PA by the way? ", 
        "type": "2", 
        "id": "189", 
        "parentId": "170"
    }, 
    {
        "content": "I was recently advised I should not be using VLAN interfaces for connections to upstream peers.  On a Juniper MX what, if any, are the cons of using VLANs on an aggregated interface rather than dedicated physical interfaces? ", 
        "type": "1", 
        "id": "190", 
        "parentId": -1
    }, 
    {
        "content": "When your core network is MPLS based, how do you connect virtual servers behind vSwitches in to this? For example VMWare vDS or Cisco Nexus 1000v. ", 
        "type": "1", 
        "id": "191", 
        "parentId": -1
    }, 
    {
        "content": "This is where switches such as the Metro-E series from Cisco come in, by default all the downstream ports run in UNI mode which means that they dont send out CDP, STP or any frames at all from other UNI ports.  Another thing you could look at is private VLAN's and then disabling things like CDP. ", 
        "type": "2", 
        "id": "192", 
        "parentId": "185"
    }, 
    {
        "content": "If you mean using a switch to break out your 10g router port into individual VLANs and then using subinterfaces to route each port individually, I don't see how that is really wrong. Yes you'll lose the immediate failover when the physical port goes down, but as they say that's the \"cost of doing business\". Router ports are expensive compared to switch ports so I assume that is a business decision. ", 
        "type": "2", 
        "id": "193", 
        "parentId": "190"
    }, 
    {
        "content": "Besides reading books, network engineering students need to get practical experience regarding configuring and troubleshooting hardware. For some hardware there are simulators and emulators, such as the Cisco Packet Tracer and GNS3/Dynamips. However, access to real hardware is the best. Sadly, not everybody can afford to buy various devices, such as young students before really starting their network career.  Which freely accessible hardware training labs are on the Internet?  If you host one, or know one, it would be great if you would tell us some details such as kind of hardware or vendor (Cisco, or others). I host one, blackrack.net below, and I'm interesting in knowing about more). ", 
        "type": "1", 
        "id": "194", 
        "parentId": -1
    }, 
    {
        "content": "In a lot of locations, we have only one Cisco ASA 5505 each and one or more WiFi APs, besides the provider router. No servers or PCs, just WiFi service for occasional visitors. I want to remotely check if the provider gives us the contracted bandwidth. I could see used bandwidth on the ASA monitoring, and test one direction by sending traffic to the ASA using Iperf on my side.  Is there any way to let the ASA generate substantial traffic? ", 
        "type": "1", 
        "id": "195", 
        "parentId": -1
    }, 
    {
        "content": "Jeremy Stretch hosts one at packetlife.net. Not sure if he got everything up after his move though. I'm sure there might be a few more of them. Usually it will be standard gear though. If you want access to more expensive equipment like ASR, Nexus, CSR then you probably need to be partners with Cisco. Cisco has something called PEC (Partner Education Central) which gives access to various gear and training for Cisco partners.  Another great resource (free) is ciscolive365.com. There are no labs but you can find great slides on the internal architecture of different switches/routers.  Other than that you would have to go for rack rentals. INE, IPExpert and so on have rentals that are for the CCIE candidates but they can be used for other practice as well. ", 
        "type": "2", 
        "id": "197", 
        "parentId": "194"
    }, 
    {
        "content": "The first thing that comes to mind would be uploading the ASA and ASDM images. ", 
        "type": "2", 
        "id": "198", 
        "parentId": "195"
    }, 
    {
        "content": "I have an HP c7000 blade chassis which contains Cisco 3120X and Cisco 3120G switches running ios 12.2(58)SE1.  The blades themselves are very lightly loaded yet many interfaces on different blade switches in the chassis show a fairly high number of output drops.  If I check the number of output drops repeatedly I not only see the counter increasing but sometimes it decreases.  The numbers don't correlate with the packets/s recorded on the interface.  QoS settings are default for the platform.  The following samples were all taken within a 30 second period:   bc1019-3120-stack>sh int gi2/0/7 | i output drops   Input queue: 0/75/0/0 (size/max/drops/flushes); Total output drops: 2255550 bc1019-3120-stack>sh int gi2/0/7 | i output drops   Input queue: 0/75/0/0 (size/max/drops/flushes); Total output drops: 2255550 bc1019-3120-stack>sh int gi2/0/7 | i output drops   Input queue: 0/75/0/0 (size/max/drops/flushes); Total output drops: 2255550 bc1019-3120-stack>sh int gi2/0/7 | i output drops   Input queue: 0/75/0/0 (size/max/drops/flushes); Total output drops: 2255550 bc1019-3120-stack>sh int gi2/0/7 | i output drops   Input queue: 0/75/0/0 (size/max/drops/flushes); Total output drops: 2255550 bc1019-3120-stack>sh int gi2/0/7 | i output drops   Input queue: 0/75/0/0 (size/max/drops/flushes); Total output drops: 2255550 bc1019-3120-stack>sh int gi2/0/7 | i output drops   Input queue: 0/75/0/0 (size/max/drops/flushes); Total output drops: 451110 bc1019-3120-stack>sh int gi2/0/7 | i output drops   Input queue: 0/75/0/0 (size/max/drops/flushes); Total output drops: 451110 bc1019-3120-stack>sh int gi2/0/7 | i output drops   Input queue: 0/75/0/0 (size/max/drops/flushes); Total output drops: 902220 bc1019-3120-stack>sh int gi2/0/7 | i output drops   Input queue: 0/75/0/0 (size/max/drops/flushes); Total output drops: 1353330 bc1019-3120-stack>sh int gi2/0/7 | i output drops   Input queue: 0/75/0/0 (size/max/drops/flushes); Total output drops: 1804440 bc1019-3120-stack>sh int gi2/0/7 | i output drops   Input queue: 0/75/0/0 (size/max/drops/flushes); Total output drops: 1804440 bc1019-3120-stack>sh int gi2/0/7 | i output drops   Input queue: 0/75/0/0 (size/max/drops/flushes); Total output drops: 1804440 bc1019-3120-stack>sh int gi2/0/7 | i output drops   Input queue: 0/75/0/0 (size/max/drops/flushes); Total output drops: 451490  bc1019-3120-stack>sh int gi2/0/7 | i output rate   5 minute output rate 301000 bits/sec, 119 packets/sec    1) Is there anything else that can cause output drops besides the server nic not receiving the frames quickly enough?  2) What is the maximum number of output drops the interface counter can record?  Does it rollover when it reaches the max?  3) What would be considered a healthy rate of output drops? ", 
        "type": "1", 
        "id": "199", 
        "parentId": -1
    }, 
    {
        "content": "Downstream you might be able to download something to null: on the ASA but upstream you would be limited of how much the flash disk can transfer which is usually not that much.  Your best bet would be to connect a PC and run the tests but that requires someone to be on site of course. ", 
        "type": "2", 
        "id": "200", 
        "parentId": "195"
    }, 
    {
        "content": "At this moment you cannot terminate MPLS VPNs on vSwith/Nexus1000V, so the best options are vlans. Somewhere on PE you must have interfaces in separated VRFs. VRFs will be mapped to VLANs on PE. Use trunks to connect to N1k. With VPLS idea is the same, but you can move virtual machines between PEs.  There is one great article about implementation of MPLS VPN in enterprise (practice) done by Himawan Narugho (without vSwithes, but the idea is the same). http://www.himawan.nu/2006/06/enterprise-mpls-vpn-howto.html  ", 
        "type": "2", 
        "id": "201", 
        "parentId": "191"
    }, 
    {
        "content": "We have two geographically separate data centers.  We are preparing to implement a new WAN connection (dark cloud) that would be used only for backup traffic.  The servers will have two NIC cards (production & backup) but what is the best way to ensure that the production and backup traffic doesn't mix?  At the moment we are just using static routes to get to the WAN, but looking to implement BGP between our SP and ourselves.  Internal RP is a mix of EIGRP and OSPF.  Cores are Cisco 6500s and WAN routers will soon be upgraded to ASRs.  Suggestions on solutions? Policy-based routing (PBR)? VRFs?   ", 
        "type": "1", 
        "id": "202", 
        "parentId": -1
    }, 
    {
        "content": "Just to add two commonly-overlooked bits to the BGP discussion:   If you run iBGP, the you usually need another routing protocol to establish connectivity between BGP next hops. From the design perspective, iBGP is more a scalability tool than a routing protocol; If you run eBGP, you don't need a full mesh of BGP sessions for optimal end-to-end traffic flows; BGP next hop processing nicely solves those issues.    See http://blog.ioshints.info/2011/08/bgp-next-hop-processing.html for more details ", 
        "type": "2", 
        "id": "203", 
        "parentId": "54"
    }, 
    {
        "content": "Maybe I am missing something rather basic, but I don't know so I figured I would ask.  In terms of testing how sensitive various TDMoE are to BER and packet delay I am looking into how to simulate delay and random packet dropping at the ethernet level.  For these tests I will probably just run iptables as documented in a similar StackOverflow question.  However, although that will work here, I am not sure it will work in a more general case (perhaps testing BER tolerance between Windows servers and the like).  So this has got me thinking.  Are there any inexpensive network testing devices that allow one to artificially delay or drop packets in order to stress test protocols and evaluate sensitivity to latency and packet loss?  My requirements are to be able to do this on the ethernet level.  I am not looking so much for specific devices, brands, etc. so much as \"are there things that do this?\" and if so, maybe some general ideas of what they are like.   I am mostly looking at building a simple bridge running Linux and  iptables to do this.  Just wondering if this is the right way to go. ", 
        "type": "1", 
        "id": "204", 
        "parentId": -1
    }, 
    {
        "content": "If you really want to terminate MPLS in vSwitches (I wouldn't do it for numerous reasons, some of them here http://blog.ioshints.info/2012/03/mplsvpn-in-data-center-maybe-not-in.html and here http://blog.ioshints.info/2012/07/could-mpls-over-ip-replace-vxlan-or.html), look @ Juniper's Contrail acquisition, they actually do that with BGP between controller and external routers and XMPP between hypervisor and controller.  Here's the description of Contrail solution from NFD: http://vimeo.com/61490396 ", 
        "type": "2", 
        "id": "205", 
        "parentId": "191"
    }, 
    {
        "content": "Assuming the two NICs on the servers are used to separate production and backup traffic, use VRFs. That's the best traffic separation technique there is. For more scalability (not sure you need it based on the diagram), throw full-blown MPLS/VPN in the mix, it runs on both Cat 6500 and ASRs. ", 
        "type": "2", 
        "id": "206", 
        "parentId": "202"
    }, 
    {
        "content": "This looks like a simple layer two domain. MPLS is typically used only as backbone or distribution transit, that is, among routers. To implement MPLS, you would need to push the VLAN interfaces down to the access switches (and thus split Host5 into a new network or move it to switch 2) and run MPLS among the multilayer switches. Although, this wouldn't bring much benefit to the topology shown. ", 
        "type": "2", 
        "id": "207", 
        "parentId": "186"
    }, 
    {
        "content": "We want to find a \"safe\" way to stretch layer 2 network across 2 data-centers, and since we don't have any equipment running NX-OS on either data-centers we can't use OTV. So what are the alternatives for us who have the following equipment at hand:  Data-center 1: 2x 6509-E in VSS (SUP720, IP Services)  Data-center 2: 2x 4500-X in VSS (IP Base at the moment) ", 
        "type": "1", 
        "id": "208", 
        "parentId": -1
    }, 
    {
        "content": "Dark fiber and LAG across the two links. VPLS won't work on 4500.  Disable STP on the DCI link (and make sure nobody ever reconnects the cables the wrong way) or use MST with each DC as a region (you don't want STP events in one DC to spill over into the other).  In theory you could use Metro Ethernet services, but if they don't pass LACP and STP transparently, you're in a total mess (read: don't even try).  #Rant On  Also, please note that there is no safe way to stretch layer-2 networks. Layer-2 network is a single failure domain - you get a loop somewhere, everything gets affected. You can limit the damage by using storm control, but then you're killing the good packets with the bad.  Finally, think about routing and connectivity implications if the link between the two data centers fails completely.  #Rant off ", 
        "type": "2", 
        "id": "209", 
        "parentId": "208"
    }, 
    {
        "content": "There are tools like WANem which allow you to simulate WAN links by artificially causing arbitrary delay and loss rates on a link. WANem works at a relatively high-level; you won't see physical errors on the link but packets will be dropped. It can be deployed on commodity hardware.  I know there are a few other tools which serve similar purposes but I can't recall the names of any at the moment. ", 
        "type": "2", 
        "id": "210", 
        "parentId": "204"
    }, 
    {
        "content": "I mentor high school students regarding career planning. Today I was asked a question that I'm completely clueless about:  \"When I grow up, I want to be a Network Engineer. What degree should I pursue in college?\"  Any thoughts on how I should answer this question? ", 
        "type": "1", 
        "id": "211", 
        "parentId": -1
    }, 
    {
        "content": "Knowing very little about commercial-scale networking, I would suggest Computer Science, but perhaps that's not the best advice. ", 
        "type": "2", 
        "id": "212", 
        "parentId": "211"
    }, 
    {
        "content": "I have nearly finished studying an Msc in Advanced Networking. I didn't do a degree and dived strait into the MSc, if I had though, I think personally a BSc in Computer Science would have been a good primer if I was to take one rather than say a BSc in Networking.   I work as a network engineer for an ISP also, so I have both academic and practical experience. So much of networking for me is about being methodical, logical, rigorous, disciplined, forward thinking, and patient. That is why I would recommend Comp Sci as a primer, to get you into that mind set. Especially as it covers programming, and network engineers should definitely know at least one language in my opinion. Programming gives you an added mental skill set that you can only get from programming when it comes to planning, troubleshooting and diagnosing etc. ", 
        "type": "2", 
        "id": "213", 
        "parentId": "211"
    }, 
    {
        "content": "If my memory serves, the older Procurve switches used to accept and forward any CoS/DSCP markings they received.  You couldn't modify them unless you were on a 5400xl or better switch.  It looks like the 2520 and the 3800 allow you to modify whether or not you're using CoS or DiffServ TOS for classification.  The top level command you want is qos type-of-service.  The rest of the commands should be contained under that.  If they aren't available, you may not be able to modify the QoS settings on that specific platform. ", 
        "type": "2", 
        "id": "214", 
        "parentId": "181"
    }, 
    {
        "content": "VPLS, AToM, and L2TP are also additional ways to glue ports together that land on distant routers.  Some of them require MPLS on all the in-between routers, but L2TP(v3 in particular) does not require anything besides ip routing on the intermediary routers.  Basically, they glue together two remote router ports, and can usually pass spanning tree, etc, since they're not acting as switches in this regard. ", 
        "type": "2", 
        "id": "215", 
        "parentId": "208"
    }, 
    {
        "content": "From my own experience, there are no caveats in disabling the filters.  To be honest, if there were an alarming amount of probe data coming from unknown/unassociated SSIDs, I'd be more concerned about the rogue SSIDs popping up in the vicinity of your WLAN, and the interference they would cause, as a posed to the increase in probe data.  It will definitely increase accuracy on location, but don't expect it to magically turn a low density location deployment into a <5 meter accurate one. (although, I don't know the physics behind this yet, or the actual gains from doing this) If you're particularly worried, just keep an eye on the bandwidth of the tunnels going back to the controller. (unless you have a 3850 already) ", 
        "type": "2", 
        "id": "216", 
        "parentId": "86"
    }, 
    {
        "content": "Unless someone is clearing counters you should never see any odometer-type counters (those that increment based on a packet action) decrease, they should always increase.  That part sounds like a bug.  As far as what causes output drops in particular, there are so many different causes that it's very difficult to pinpoint it exactly.  Sometimes there is congestion inside the switch's backplane and those might show up as output drops on the outgoing interface.  In rare circumstances you can also get microbursts that don't show up when polled at 1 minute intervals that quickly overload the interface, but then drop back down very quickly.  I would suggest grabbing the SNMP OID for output drops and then graphing that and see how it corresponds to the CLI counter.  Generally speaking, you don't want any output drops as they indicate a packet that did not make it to its destination.  But, if you're running your links hot (which you say you're not) they're unavoidable to an extent, mostly due to interior switch buffering, etc. ", 
        "type": "2", 
        "id": "217", 
        "parentId": "199"
    }, 
    {
        "content": "System Administration degrees are becoming available; They are rare, but that is definitely the way to go. That education track would involve network engineering for sure.  Here's a list of programs with specific degrees. (Yes, link rot -- but the list is too long to infix.) Programs exist today on east and west coasts of US, with several coming on this year.  There is also an inaugural Summit for Educators in System Administration (SESA) which is put on by USENIX. So looking into that would help you find specific schools which offer these degree programs.  If you're personally interested in getting involved in shaping the educational programs, LOPSA is also discussing these ideas. ", 
        "type": "2", 
        "id": "218", 
        "parentId": "211"
    }, 
    {
        "content": "", 
        "type": "5", 
        "id": "219", 
        "parentId": -1
    }, 
    {
        "content": "Major release 12 of Cisco's IOS software", 
        "type": "4", 
        "id": "220", 
        "parentId": -1
    }, 
    {
        "content": "I'd be happy to post the config or logs for reference but I am having trouble getting my remote access VPN working on the same interface as my site to site IPSEC VPN. I am using a dynamic crypto map for the remote access vpn but it looks like it is failing trying to do phase one. Would anyone be able to give me a simple example config to work off of?  EDIT:  Here is a debug dump from it failing after implementing ISAKMP profiles per suggestion below. I am prompted for username and password but then it times out. It looks like the isakmp authorization is failing. Currently isakmp authorization is just set to the local user list. Does that appear to be the problem to you guys?  Jul  3 16:40:44.297: ISAKMP/aaa: unique id = 29277 Jul  3 16:40:44.297: ISAKMP:(0):Proposed key length does not match policy Jul  3 16:40:44.297: ISAKMP:(0):atts are not acceptable. Next payload is 3 Jul  3 16:40:44.313: ISAKMP:(0):ISAKMP/tunnel: setting up tunnel REMOTEACCESS pw request Jul  3 16:40:44.313: ISAKMP:(0):ISAKMP/tunnel: Tunnel REMOTEACCESS PW Request successfully sent to AAA Jul  3 16:40:44.317: ISAKMP:(0):ISAKMP/tunnel: received callback from AAA AAA/AUTHOR/IKE: Processing AV tunnel-password AAA/AUTHOR/IKE: Processing AV addr-pool AAA/AUTHOR/IKE: Processing AV inacl AAA/AUTHOR/IKE: Processing AV dns-servers AAA/AUTHOR/IKE: Processing AV wins-servers AAA/AUTHOR/IKE: Processing AV route-metric Jul  3 16:40:44.317: ISAKMP/tunnel: received tunnel atts Jul  3 16:40:44.341: ISAKMP AAA: Deleting old aaa_uid = 29277 Jul  3 16:40:44.341: ISAKMP AAA: NAS Port Id is already set to 174.98.136.27 Jul  3 16:40:44.341: ISAKMP:(0):AAA: Nas Port ID set to 174.98.136.27. Jul  3 16:40:44.341: ISAKMP AAA: Allocated new aaa_uid = 29278 Jul  3 16:40:44.341: ISAKMP AAA: Accounting is not enabled Jul  3 16:40:48.337: ISAKMP AAA: NAS Port Id is already set to 174.98.136.27 Jul  3 16:40:48.337: ISAKMP/Authen: unique id = 29278 Jul  3 16:40:48.337: ISAKMP:(2110):AAA Authen: setting up authen_request Jul  3 16:40:48.337: ISAKMP:(2110):AAA Authen: Successfully sent authen info to AAA  Jul  3 16:40:48.337: ISAKMP:(2110):AAA Authen: Local Authentication or no RADIUS atts recvd Jul  3 16:40:48.349: ISAKMP:(2110):ISAKMP/author: setting up the authorization request for REMOTEACCESS Jul  3 16:40:48.349: ISAKMP:(0):ISAKMP/author: received callback from AAA AAA/AUTHOR/IKE: Processing AV tunnel-password AAA/AUTHOR/IKE: Processing AV addr-pool AAA/AUTHOR/IKE: Processing AV inacl AAA/AUTHOR/IKE: Processing AV dns-servers Jul  3 16:40:48.349:  AAA/AUTHOR/IKE: no DNS addresses AAA/AUTHOR/IKE: Processing AV wins-servers Jul  3 16:40:48.349:  AAA/AUTHOR/IKE: no WINS addresses AAA/AUTHOR/IKE: Processing AV route-metric Jul  3 16:40:48.349: ISAKMP:(2110):ISAKMP/author: No Class attributes Jul  3 16:40:48.349: ISAKMP:FSM error - Message from AAA grp/user.   I also see these errors when I do debug isakmp and ipsec errors and pull the logs:  Jul  3 16:32:33.949: insert of map into mapdb AVL failed, map + ace pair already exists on the mapdb Jul  3 16:32:57.557: ISAKMP:(0):Proposed key length does not match policy Jul  3 16:32:57.557: ISAKMP:(0):atts are not acceptable. Next payload is 3 Jul  3 16:33:00.637: ISAKMP:FSM error - Message from AAA grp/user.  ", 
        "type": "1", 
        "id": "221", 
        "parentId": -1
    }, 
    {
        "content": "", 
        "type": "5", 
        "id": "222", 
        "parentId": -1
    }, 
    {
        "content": "Cisco's Adaptive Security Appliance (ASA) which combines functionality from the PIX, VPN 3000 series and Intrusion Prevention Systems (IPS) product lines", 
        "type": "4", 
        "id": "223", 
        "parentId": -1
    }, 
    {
        "content": "Catalyst is the brand name for a line of network switches sold by Cisco Systems. These are generally Ethernet switches but other interface types are available. Like many Cisco products the switch line initially began at companies that Cisco acquired, rebranding their products as various versions of the Catalyst product line. Many Catalyst switches also have layer-3 routing capabilities. ", 
        "type": "5", 
        "id": "224", 
        "parentId": -1
    }, 
    {
        "content": "A tag for questions related to Cisco's Catalyst line of switches. ", 
        "type": "4", 
        "id": "225", 
        "parentId": -1
    }, 
    {
        "content": "Ethernet is a family of computer networking technologies for local area networks (LANs). Ethernet was commercially introduced in 1980 and standardized in 1985 as IEEE 802.3. Ethernet has largely replaced competing wired LAN technologies.  The Ethernet standards comprise several wiring and signaling variants of the OSI physical layer in use with Ethernet. The original 10BASE5 Ethernet used coaxial cable as a shared medium. Later the coaxial cables were replaced by twisted pair and fiber optic links in conjunction with hubs or switches. Data rates were periodically increased from the original 10 megabits per second to 100 gigabits per second.  Systems communicating over Ethernet divide a stream of data into shorter pieces called frames. Each frame contains source and destination addresses and error-checking data so that damaged data can be detected and re-transmitted. As per the OSI model Ethernet provides services up to and including the data link layer.  Since its commercial release, Ethernet has retained a good degree of compatibility. Features such as the 48-bit MAC address and Ethernet frame format have influenced other networking protocols. ", 
        "type": "5", 
        "id": "226", 
        "parentId": -1
    }, 
    {
        "content": "For questions relating to Ethernet networking, as defined by the IEEE 802.3 standards.", 
        "type": "4", 
        "id": "227", 
        "parentId": -1
    }, 
    {
        "content": "", 
        "type": "5", 
        "id": "228", 
        "parentId": -1
    }, 
    {
        "content": "for questions about Internet Protocol version 6 (IPv6); as specified in RFC2460.", 
        "type": "4", 
        "id": "229", 
        "parentId": -1
    }, 
    {
        "content": "This tag is for questions about the the Cisco proprietary VLAN Trunking Protocol (VTP), which defines VLAN propagation on Cisco switches. ", 
        "type": "5", 
        "id": "230", 
        "parentId": -1
    }, 
    {
        "content": "Questions about the VLAN Trunking Protocol", 
        "type": "4", 
        "id": "231", 
        "parentId": -1
    }, 
    {
        "content": "The Black Rack is Cisco hardware based lab, which is accessible for free for educational purpose. It provides   Routers (currently a 2821, two 1841 and some older models) connected back to back and to switches Switches (four 3560, a 3750 and some older models), full redundant mesh ASAs (two 5520 VPN plus, two 5505 Security plus)   Access is possible by   console cables to all devices telnet to the access router (32 terminal lines for console access) WebVPN / SSL VPN (Cisco AnyConnect) with split tunneling full IP access to the lab devices, such as SSH, HTTP, HTTPS, so ASDM, SDM and further GUI tools can be used   The lab was originally put together 2012 for own training, and now it's shared online. The maintainer can be contacted via the contact form on the web site. ", 
        "type": "2", 
        "id": "232", 
        "parentId": "194"
    }, 
    {
        "content": "I am really having trouble to get our SRXes to log sessions that are not in the state table and get dropped because of that.  For example, if you reboot the firewall and some old NFS implementation keeps sending traffic through the same session, once the SRX comes back it drops those packets because it didn't see a three-way-handshake. However, it doesn't log those drops. Yes, logging on the cleanup rule is enabled. ", 
        "type": "1", 
        "id": "233", 
        "parentId": -1
    }, 
    {
        "content": "My undergraduate degree is in electrical and computer engineering and I would recommend it to somebody interested in network engineering, depending, of course, on the particular interests and abilities of the student.  There would be enough computer science and applied mathematics in a good ECE curriculum so that the student could understand the graph theory and algorithms that are necessary to understanding routing protocols, security mechanisms, etc. In addition, an ECE degree would tend to expose the student to a spectrum of highly-relevant topics that exceed computer science, like computer architecture, embedded programming, digital logic, communications theory, electromagnetic fields and waves, optical electronics, and so forth.  Apart from the basic question of which degree to seek, consider, too, the distinction between education and vocational preparation. For one student, it could be better to seek a program that is squarely focused on the nuts and bolts of network engineering. For another, it might be best to use the idea of network engineering to inform course and project selection within a program that emphasizes general, and perhaps even theoretical fundamentals. ", 
        "type": "2", 
        "id": "234", 
        "parentId": "211"
    }, 
    {
        "content": "Perhaps passive monitoring is a better approach. There are plenty of systems out there that will track interface state/errors/discards/bandwidth. Does a bandwidth graph fit your needs? ", 
        "type": "2", 
        "id": "235", 
        "parentId": "195"
    }, 
    {
        "content": "Even though you asked for free training labs, I must mention Junosphere for juniper cert preparation or other testing with juniper equipment.I'm starting to use it, until I buy couple SRX-es.  There is also INET Zero rack rental, not free of course. ", 
        "type": "2", 
        "id": "236", 
        "parentId": "194"
    }, 
    {
        "content": "Add another reason to hate NAT to the list. I'm bringing up two Internet egress points in our corporate network. The edge devices will be ASA 5525-X firewalls. Traditionally you would put these into some sort of cluster, but this requires L2 connectivity. Since these devices will be in separate parts of my network, L2 connectivity is not an easy option.  My current running solution is to bring them both up as independent firewalls and advertise a default route from each. Any ECMP should have the same hash for each flow and push it towards the \"correct\" egress firewall.  My question is this:   Is there a way to cluster two ASAs without needing a L2 link? I want a second/third/hundred pair of eyes on my current solution assuming \"No\" is the answer to #1.  ", 
        "type": "1", 
        "id": "237", 
        "parentId": -1
    }, 
    {
        "content": "I would suggest a Bachelor's in Business Administration with a concentration in Computer/Management Information Systems. Most state schools will have something like that. That way you take programming languages, basic networking, pc basics, and several business classes. IT is becoming more and more a part of the business instead of just support. Boston University has a Master's of Science with a concentration in Computer Information Systems http://www.bu.edu/met/programs/graduate/computer-information-systems/ that is done completely online. It's 10 classes and all the exams are proctored. It's a great program and I would recommend it for anyone who wants to continue their education past the Bachelor's level. They have sub concentrations in several areas. ", 
        "type": "2", 
        "id": "238", 
        "parentId": "211"
    }, 
    {
        "content": "With IPv4, TCP MSS \"clamping\" (a network device editing the MSS value in a TCP header) can help when path maximum transmission unit discovery is not working. (e.g., when ICMP is being blocked somewhere in the path.) Since there's no fragmentation in IPv6, we still have ICMPv6's 'packet too big' to signal the originating end point.  Is there any guidance about clamping TCP MSS over IPv6 specifically? ", 
        "type": "1", 
        "id": "239", 
        "parentId": -1
    }, 
    {
        "content": "Taking a shot in the dark here because there are a lot of variables you didn't mention.  Please update the question to include the specific technologies you are using, your currnet config, and the error you are getting.  But if you are using for instance, DMVPN + EZVPN, you will probably have to use keyrings and multiple ISAKMP profiles.  Since you point to phase 1 issues I would check that.  The following links give reference configs for DMVPN and EZVPN and L2L+EZVPN. You should be able to modify to suit your needs.  Here's a ISAKMP Profile reference for some lunchtime reading. ", 
        "type": "2", 
        "id": "240", 
        "parentId": "221"
    }, 
    {
        "content": "Well technically fragmentation can happen in IPv6; This is the wikipedia article on it.  This Juniper page is a bit old but it shows that you can clamp an MSS for TCP over IPv6 on Junos the same as you would in IPv4 using the same command, tcp mss. The same is shown in this article for Cisco IOS 15, using the traditional ip tcp adjust-mss command.  So you can configure MSS clamping if PMTUD isn't working as it should be in a part of your network, otherwise, you should be ensuring that you are aiding the smoothing running of PTMUD across your networking so that MSS clamping isn't required (I understand this isn't always under your control).  Update  Here is a link to a newer Junos article for Junos 10x rather than 9, I can't find one for 11 and I'm not in front of 11 right now, but I expect it will be the same. ", 
        "type": "2", 
        "id": "241", 
        "parentId": "239"
    }, 
    {
        "content": "I think you have two options:   Designate one Internet circuit as the primary and the other as failover Implement \"NAT outside\" (public space) routing between the sites with the firewalls   The first option ensures traffic is always going through either one firewall or the other so that NAT doesn't break.  The second option allows you to load balance across both circuits: One equal-cost default route from each circuit, with your local public prefix(es) advertised out both circuits. (This option ignores how connectivity between the sites is accomplished.) ", 
        "type": "2", 
        "id": "242", 
        "parentId": "237"
    }, 
    {
        "content": "I have 2 spare older Cisco Catalyst (not Nexus) 5500 switches.  Would I need any additional hardware in order to run Fibre Channel over Ethernet (FCoE) over them?  Do I need some kind of management device and/or software or can I do that internally?  I'd like to re-purpose the old switches for a lab, but I'm unsure of the FCoE requirements and compatibility. ", 
        "type": "1", 
        "id": "243", 
        "parentId": -1
    }, 
    {
        "content": "Don't have much experience with ASA's, so I can't really answer question #1.  Be careful with your assumptions about ECMP, however.  Different equipment handles ECMP differently.  I've seen ECMP implementations from the granularity of \"per-destination-prefix\" load-balancing (which almost isn't ECMP at all), to \"per-packet\" load-balancing.  You're going to have to get a bit more sophisticated with your routing handling to make this work.  Look for the DCI interconnect information that ioshints has published, that should help you figure out how you might design your network to handle this.  Sorry I don't have a URL close to hand on this. ", 
        "type": "2", 
        "id": "244", 
        "parentId": "237"
    }, 
    {
        "content": "My first thought is unicast flooding, especially if the counters increment in unison across a number of ports in the same vlan. I agree with Aaron that the counter decrementing sounds like a bug. The counter will probably roll over at 2^64, but that won't happen within seconds. I would consider a healthy rate of output drops to be zero, but this is not realistic--even in the datacenter. Are you doing 10G uplinks? ", 
        "type": "2", 
        "id": "246", 
        "parentId": "199"
    }, 
    {
        "content": "Personally, I wouldn't even consider long distance clustering. I believe Cisco's recommendation is direct cable connect. ECMP may be workable, but it is vital to do per-destination (the Cisco default AFAIK) and not per-packet. Consider the impact on a passive ftp transfer that requires dual outbound connections. ", 
        "type": "2", 
        "id": "247", 
        "parentId": "237"
    }, 
    {
        "content": "Catalyst 5500 series switches have been declared end-of-life by Cisco, are no longer sold, and will be unsupported beyond September, 2014. Switch models: http://www.cisco.com/en/US/products/hw/switches/ps686/index.html End-of-life milestones and dates: http://www.cisco.com/en/US/prod/collateral/switches/ps5718/ps686/prod_end-of-life_notice0900aecd805eaa6b.html ", 
        "type": "5", 
        "id": "248", 
        "parentId": -1
    }, 
    {
        "content": "Information related to the Cisco Catalyst 5500 series of multilayer switches.", 
        "type": "4", 
        "id": "249", 
        "parentId": -1
    }, 
    {
        "content": "My knee jerk reaction to this would be to say \"don't do it.\" Mainly because these switches would not support data center bridging. FCoE is not like iSCSI. FC is a bus and assumes it is lossless. Ethernet, as you know, is lossy. DCB allows Ethernet to act lossless and transport FCoE frames. ", 
        "type": "2", 
        "id": "250", 
        "parentId": "243"
    }, 
    {
        "content": "You can check the Amsterdam Internet Exchange's Config Guide for hints on how to silence switches from a variety of vendors.  In my experience there are vendors whose software is so bad that their equipment is never silent, for example they ARP out every interface when they boot, or send out some upon a link up event on a port. Juniper, Cisco, Brocade can be muffled with varying degrees of persuasion, Extreme loops everything during EAPS transitions.  Some things to disable/consider:   Discovery protocols (LLDP, CDP, FDP, 'dynamic-vlan-discovery') VTP, DTP STP (disable for the VLAN a port is in) Ethernet keepalives or loop frames (useless on full-duplex media) Weird stuff like DECnet MOP (topic of another question a few days ago) Have a separate management VLAN for the switch's own IP address You'll want to disable PIM snooping on a Cisco as this breaks IPv6.  ", 
        "type": "2", 
        "id": "251", 
        "parentId": "185"
    }, 
    {
        "content": "What is the concensus on the use case for RPKI? Is it useful for a stub AS to perform route validation or is this better left to the providers? ", 
        "type": "1", 
        "id": "252", 
        "parentId": -1
    }, 
    {
        "content": "This is really an opinion question; however, I'd say you'd rather have it and not need it than need it and not have it.  I don't trust anything outside of my AS.  That sounded funny.  But really, you can't assume your upstream is doing their job correctly. ", 
        "type": "2", 
        "id": "253", 
        "parentId": "252"
    }, 
    {
        "content": "I am considering whether ECMP makes sense for anycast. Routing should direct anycast to the logically-nearest destination in which one host would be favored over the other. Even in the case where the anycast hosts are equidistant, I would still expect this to remain true. As for ECMP load-sharing, I would think per-destination is impossible with a /32. Perhaps there are load-sharing algorithms that consider the source. Per-packet seems risky, even for DNS. I believe most out-of-the-box anycast solutions run ospf on the host.  Took a bit of searching, but the following excerpt from rfc2178 confirms the cause.  16.8.  Equal-cost multipath  The OSPF protocol maintains multiple equal-cost routes to all    destinations.  This can be seen in the steps used above to calculate    the routing table, and in the definition of the routing table    structure.  Each one of the multiple routes will be of the same type (intra-area,    inter-area, type 1 external or type 2 external), cost, and will have    the same associated area.  However, each route specifies a separate    next hop and Advertising router. ", 
        "type": "2", 
        "id": "254", 
        "parentId": "151"
    }, 
    {
        "content": "I think that it comes down to 2 things.  First, a link-local cannot be routed, so no subnet ID is needed.  It is assumed that since it cannot be routed that anything following the prefix up until the last 64-bits will be zero's.  Second, like other similar IPv6 prefixes, the prefix is everything up until the last '1' bit.  This keeps consistency. ", 
        "type": "2", 
        "id": "255", 
        "parentId": "130"
    }, 
    {
        "content": "Sup6E/Sup7E based Catalysts have way different architecture than the access Catalysts and the previous Supervisors.  Essentially, the new architecture is based on different hardware architecture. The good news is that it supports MQC and behaves more like router QoS, so the easiest solution for your problem would be to define a class-map with match-any criteria, then make it match different DSCP values that are of interest to you, and then apply that service-policy to input of the interfaces you'd like to monitor. ", 
        "type": "2", 
        "id": "257", 
        "parentId": "167"
    }, 
    {
        "content": "RPKI is two-way action. First of all, it would be nice if you could sign your own prefixes, so nobody will be able to hijack them somewhere in the other part of the internet (if his upstreams support and validate prefix advertisements using RPKI). The more end-sites will use RPKI, the better value will have using RPKI to various SPs and more SPs will do it.  On the SP side, it would be beneficial to push your upstreams to implement RPKI at the same time.  ", 
        "type": "2", 
        "id": "258", 
        "parentId": "252"
    }, 
    {
        "content": "As everyone is aware we are out of IPv4 addresses and soon (if not already) we shall be moving on to IPv6. What are some good strategies and practices to migrate a complete IPv4 network onto IPv6?  ", 
        "type": "1", 
        "id": "259", 
        "parentId": -1
    }, 
    {
        "content": "You certainly want to ECMP LSP's, how many to use depends on traffic levels relative to link bandwidths (critically you want to avoid LSP's being unsignalable due to being larger then a choke point).  For auto-bandwidth intervals it depends on what your aiming for, a few times an hour isn't a bad number, but less frequent may be better if you have fewer flows. ", 
        "type": "2", 
        "id": "260", 
        "parentId": "52"
    }, 
    {
        "content": "I don't have a full strategy, but here's the rough way I did it at $JOB[-1]:   Get an IPv6 block, either from your existing carrier, or an RIR You might also want to mark a fc00::/7 (Unique local) block for fully internal subnets if you have an ISP block and may ever need to renumber Decide on your v6 IGP, IS-IS is still a safer option than OSPFv3, but much kit won't do IS-IS Bring up v6 on your core kit, from internet edge through to DC core switches Bring up v6 transit, if you have to a BGP tunnel from he.net can work while waiting for ISP's stuck in the last decade (remember to enable v6 on your iBGP mesh if you have one) Create v6 infrastructure services, mostly DNS, v4 accessible is fine here Enable v6 on a single server net (you'd probably have a default deny firewall here) Test the v6 connectivity to the world, will it break things? Turn up v6 on a second server net for redundency Bring up a DHCPv6 server if you want to use it Bring up v6 on a single access network (IT staff is a good choice here) Test. Ensure nothing breaks Bring up v6 on remaining server networks Add a v6 namesever for your domains, and a v6 DNS entry for an MX (one, or all but one are good choices for what to dual-stack)   Now, when bringing up new services or upgrading them you can test if they work on v6, and add the appropriate DNS records (almost all web services will \"just work\"), eventually you might start looking for services remaining on v4 and fix them, but there's no hurry for that. ", 
        "type": "2", 
        "id": "261", 
        "parentId": "259"
    }, 
    {
        "content": "(Just noticed your comment about Raspberrys, and I want to follow up)  We have a large MPLS network where we need to measure bandwith and jitter across sites to make sure that our most sensitive applications isn't hurting.  One great way of doing this is, like you mentioned, deploying Raspberrys. They are small enough, so you can install them nearly anywhere. One great toolf for testing bandwith/jitter is iperf, which you then can set up to run as a (filtered!) daemon on each PI. Then just initiate tests from a central management station. ", 
        "type": "2", 
        "id": "262", 
        "parentId": "195"
    }, 
    {
        "content": "If you are experiencing unicast flooding, running wireshark on one of the hosts or spanning one of the ports should show that pretty quickly.  It sounds like you have redundant cores in a square topology?  If so, try adding this command to your vlan interface:  arp timeout 300   CAM tables hold entries for 5 minutes while ARP tables are kept for four hours (defaults).  Setting the ARP to match the CAM may eliminate the unicast flooding at the expense of a slight increase to the CPU.  Catalyst 6500/6000 Switches ARP or CAM Table Issues Troubleshooting ", 
        "type": "2", 
        "id": "263", 
        "parentId": "199"
    }, 
    {
        "content": "When configuring ZBFW on IOS, the \"class-default\" class doesn't allow the inspect action (only pass and drop). What is the recommended way to match all traffic for stateful inspection? Matching TCP, UDP, and ICMP seems to work fine, but this doesn't seem ideal:  class-map type inspect match-any All_Protocols  match protocol tcp  match protocol udp  match protocol icmp  ", 
        "type": "1", 
        "id": "264", 
        "parentId": -1
    }, 
    {
        "content": "In a Cisco environment (ISR-G2), how do I prevent, or mitigate, incorrect RA announcements?  I see Cisco has \"IPv6 RA Guard\"... But does that just run on the router and \"fight back\" with correct RAs? Wouldn't it make more sense to have switches filtering bogus RAs out of the network? (Or am I being overly-paranoid about bogus RAs?) ", 
        "type": "1", 
        "id": "265", 
        "parentId": -1
    }, 
    {
        "content": "That should work. Either that or use something like:  R1(config)#ip access-list extended MATCH-ALL R1(config-ext-nacl)#permit ip any any R1(config-ext-nacl)#class-map type inspect match-any CM_MATCH-ALL R1(config-cmap)#match access-group name MATCH-ALL R1(config-cmap)#policy-map type inspect PM_IN->OUT R1(config-pmap)#class CM_MATCH-ALL R1(config-pmap-c)#inspect  %No specific protocol configured in class CM_MATCH-ALL for inspection. All protocols will    be inspected   If no specific protocol is matched in the class-map then it will match all protocols. ", 
        "type": "2", 
        "id": "267", 
        "parentId": "264"
    }, 
    {
        "content": "", 
        "type": "5", 
        "id": "268", 
        "parentId": -1
    }, 
    {
        "content": "Information related to Fibre Channel over Ethernet, an encapsulation of Fibre Channel frames over Ethernet networks.", 
        "type": "4", 
        "id": "269", 
        "parentId": -1
    }, 
    {
        "content": "This is from the configuration guide for IOS 15.2T. The feature is called RA guard. Basically you create a policy and define if the port that this will applied to leads to a host or to a router. Then you can be more specific and match on hop limit, managed-config-flag and match on an ACL with a range where the trusted sources should come from. You can also make the port trusted and not do any further checks.  In some ways this is very similar to DHCP snooping. The basic steps are:  ipv6 nd raguard policy RA-PROTECT device-role host interface x/x ipv6 nd raguard attach-policy RA-PROTECT   Then you can use this command to verify:  show ipv6 nd raguard policy   If your switches supports the feature then it makes sense to catch the RAs as early as possible. I don't think it's being to paranoid. The same could be said for DHCP. Sometimes it's not even malicious users, it's just a case of people not knowing better or connecting crappy devices to the network. ", 
        "type": "2", 
        "id": "270", 
        "parentId": "265"
    }, 
    {
        "content": "From RFC 6105: \"RA-Guard applies to an environment where all messages between IPv6 end-devices traverse the controlled L2 networking devices.\" That is, it does what you say it should do; filter out rogue RAs at switchport ingress. It operates on the principle of blocking vs. accepting, not just shouting louder than the other guy. ", 
        "type": "2", 
        "id": "271", 
        "parentId": "265"
    }, 
    {
        "content": "We started with fec0::/10 for site-local addresses -- but that is now deprecated. Instead, we now have fc00::/7 reserved, with fd00::/8 dedicated to /48 nets for Unique Local Addresses.  What's the best practice for picking the least-sig 40 bits to give you an org-level /48?  ...is everyone using the SIXXS voluntary registry? (seems dubious to me) ...just use RFC4193's guidance for picking (via it's algo)? ...anyone have an online implementation of that algo?  Picking our 40 bits doesn't seem hard; I'm just trying to pick them the \"right\" way, if I can. ", 
        "type": "1", 
        "id": "272", 
        "parentId": -1
    }, 
    {
        "content": "The odds of someone picking the same range and then merging or making business with you should be very slim. As you mentioned SIXXS has a registration, not sure how much it is used and since it's really no authority there's no guarantee that someone wouldn't have picked the same range. I guess it's better than nothing though.  These are the tools I could find:  http://www.sixxs.net/tools/grh/ula/ https://www.ultratools.com/tools/rangeGenerator ", 
        "type": "2", 
        "id": "273", 
        "parentId": "272"
    }, 
    {
        "content": "Its always best to stick to the relevant RFC when possible. In this case, your two options aren't mutually exclusive. SIXXS' generator should actually generate you a prefix based on RFC4193's algorithm.  So you would just generate your prefix using SIXXS' tool (or another one you find), and if you feel like it, register it with SIXXS. ", 
        "type": "2", 
        "id": "274", 
        "parentId": "272"
    }, 
    {
        "content": "I need to build a simple point-to-point tunnel to connect an office through an area of the network we trust but directly don't control. Does the tunnel need to be GRE-encapsulated or can I use direct IP-in-IP? (We won't be using IPsec for this particular implementation.) ", 
        "type": "1", 
        "id": "275", 
        "parentId": -1
    }, 
    {
        "content": "Either method will work. I personally prefer GRE, but there should be no practical difference between the two for your use case. (GRE can transport other layer3 protocols than just IP, though.)  The only thing to really keep in mind is that GRE incurs a tiny bit of extra overhead as opposed to IPinIP. ", 
        "type": "2", 
        "id": "276", 
        "parentId": "275"
    }, 
    {
        "content": "I would like to redesign a network that has workstations, servers, mgmt interfaces--lots of stuff-- in a single vlan. And, as noted, this single vlan spans an L2 DCI. But if I break all this stuff out into seperate vlans, then inter-vlan routing will be necessary. So, I would like to route between vlans without transiting the DCI. I recall hearing about a method for doing this that involved mac filtering to cause dual-active hsrp. Does anyone know the details of this method? Is there any downside? ", 
        "type": "1", 
        "id": "277", 
        "parentId": -1
    }, 
    {
        "content": "It is also worth considering how tunneling impacts the path MTU. It would be ideal for the infrastructure between tunnel endpoints to support a larger MTU. This will avoid issues with fragmentation and broken pmtud. ", 
        "type": "2", 
        "id": "278", 
        "parentId": "275"
    }, 
    {
        "content": "I am pretty sure there is not a way to do this without it being a huge kludge.  My suggestion would be that since you're already renumbering things, bite the bullet and renumber at each side of the L2 link.  Other questions will come up when renumbering, but it's worth it. ", 
        "type": "2", 
        "id": "279", 
        "parentId": "277"
    }, 
    {
        "content": "What kind of processes and/or tools do you use to design OSPF cost on links in your environments? ", 
        "type": "1", 
        "id": "280", 
        "parentId": -1
    }, 
    {
        "content": "Not sure this is a question that can get a really good answer but it's important to know the preference order of OSPF:  intra area routes inter area routes external type 1 external type 2 NSSA type 1 NSSA type 2   So in some cases adjusting the metric has no effect on traffic engineering. It's important to change the auto-cost reference-bandwidth on Cisco devices so that there is a difference in cost between higher speed interfaces. By default this might be set to 100 Mbit. This would mean that 100 Mbit, gig and 10 gig interfaces would have the same cost.  For faster convergence it's good to have equal cost routes (ECMP) so if you are peering iBGP to a loopback you two paths and if one goes down the impact should not be that big.  I used to work for a large ISP and they set all the costs manually on the transit interfaces. The basic design was to choose the path that had the fewest core hops. The network was designed with access, distribution and core levels with dual links between each level. If there are multiple paths with same number of core hops then choose the path with the lowest delay.  So based on this they designed the paths and set costs on the interfaces. This might require a lot of planning. The bad thing about link state protocols is that they only use the bandwidth of the interface to calculate the metric. So you could have a case where the metric is the same but the distance is significantly longer via one of the paths.  We are talking quite large networks before this would have an impact though.  So I would design it based on bandwidth, number of devices to go through, physical distance (delay) and of course money could be a factor if one path is more expensive than the other. ", 
        "type": "2", 
        "id": "281", 
        "parentId": "280"
    }, 
    {
        "content": "Costing is often used to merge traffic flows together and achieve better utilization of available bandwidth, but costing can also be used to divide traffic and promote symmetry. Consider this campus design in which each building has two distribution switches and two fiber uplinks. A combination of spanning tree root, hsrp and ospf cost provides perfect separation and symmetry across the uplinks. The key to achieving inbound separation lies in costing of the SVIs on the voice and data vlans.   ", 
        "type": "2", 
        "id": "282", 
        "parentId": "280"
    }, 
    {
        "content": "My main production environment is in a Dell M1000e blade chassis with M6220 switches in Fabrics B and C.  Fabric B is dedicated to vMotion traffic, and Fabric C is dedicated to iSCSi traffic and connected directly to our SAN.  None of the switches in either Fabric are connected to the rest of the network, so I am unable to monitor them, and I can only manage the configs through the Dell Chassis Management Controller.  When our consultants set this up two years ago, they configured stacking as follows: C1=C2 B1=B2  I'd like to change the stacking configuration so it is looped in the following way: B1=C1=C2=B2  If I make this change and merge the two stacks, will it change the configs on the switches?   ", 
        "type": "1", 
        "id": "283", 
        "parentId": -1
    }, 
    {
        "content": "I have searched through wireless books and the web which consistently define what IBSS (ad-hoc, peer-to-peer)  is, but have found no examples on how to actually implement one. I'd guess that the steps to set up the IBSS depends on both the OS and NIC, but a guide for any concrete IBSS setup, from any vendor, would still be useful. Can anyone explain what must be done to set up a IBSS, or at least point to resources that explain a full implementation of one? ", 
        "type": "1", 
        "id": "284", 
        "parentId": -1
    }, 
    {
        "content": "Running a tunnel over GRE has the added benefit of being pretty much protocol-agnostic, so you can of course use it for IPv6 later on.  With that said however, there's equally nothing stopping you running 6in4 or ip6ip6 alongside ipip, so the question really comes down to whether there's any tangible gain for you by choosing GRE and using it for multiprotocol. ", 
        "type": "2", 
        "id": "285", 
        "parentId": "275"
    }, 
    {
        "content": "Cisco offers RA-guard as a means to protect against unprivileged ports sending out rogue RAs.  However, enabling this alone isn't guaranteed to protect you as there are several attack tools in existence (THC springs to mind) which will split the Router Advertisement into fragments, thereby defeating RA guard.  The best protection against this is to drop fragmented ICMPv6 packets since, generally speaking, the odds of legitimately needing to fragment an ICMPv6 datagram (aside from a very large ping) are slim to none. ", 
        "type": "2", 
        "id": "286", 
        "parentId": "265"
    }, 
    {
        "content": "You are correct there is something called FHRP isolation, where you block the messages of your FHRP between the Datacenter and in turn create a Dual active gateway's, one in each DC. The nodes in each DC can egress L3 in it's own DC.  From my point of view and experience, I recommend everyone doing this to try to minimize the tromboning of traffic between sites. Makes sense that traffic f.ex between vlan in one DC don\u00b4t need to traverse to another DC to egress it's L3.  Now in Cisco world you see this FHRP isolation accompanied with OTV (basically a way to send L2 across L3 without expanding the broadcast domain). I have seen some documentation on doing this with Port ACL's, mac acl on other platforms but can\u00b4t find it any more.  http://www.cisco.com/en/US/docs/solutions/Enterprise/Data_Center/DCI/whitepaper/DCI_1.html#wp1186074 http://www.cisco.com/en/US/docs/solutions/Enterprise/Data_Center/DCI/4.0/EMC/EMC_2.html#wp1261581 ", 
        "type": "2", 
        "id": "287", 
        "parentId": "277"
    }, 
    {
        "content": "Have a look at this : http://bradhedlund.com/2010/12/16/routing-over-nexus-7000-vpc-peer-link-yes-and-no/  Might help you :) ", 
        "type": "2", 
        "id": "288", 
        "parentId": "102"
    }, 
    {
        "content": "On Linux for all cards that support it (used to be all, many these days don't) you simply run:  iwconfig wlan0 mode Ad-Hoc iwconfig wlan0 essid Foo iwconfig wlan0 channel 6   You can do WEP, and apparently even TKIP-based WPA.  Once configured you can treat it like a classic ethernet bus (Think Coax or 10baseT hubs), with one big caveat, the \"hidden node problem\", in ad-hoc there's no repeaters so if two nodes can't make direct radio contact with each other they can't talk (at that layer, you can of course bridge or route at a higher level). ", 
        "type": "2", 
        "id": "289", 
        "parentId": "284"
    }, 
    {
        "content": "One aspect not yet covered by these answers is BGP \"add-path\" which lets a BGP peer send not only their best route, but some or all of their alternates as well.  This is most useful (as well as likely to work) on iBGP, and gives better ECMP.  For EBGP if you have multiple sessions to the same peer on a single router you should be using BGP \"multipath\" to allow ECMP. Depending on how and where route reflection is done in an SP network this can result in using all sessions quite evenly.  Here's a presentation from Dave Ward (then at Juniper, now at Cisco) about add-path:  http://www.nanog.org/meetings/nanog48/presentations/Tuesday/Ward_AddPath_N48.pdf ", 
        "type": "2", 
        "id": "290", 
        "parentId": "170"
    }, 
    {
        "content": "As long as you buy from the OEM's (probably via a reseller) you're getting the same optics the vendors ship, usually for a small fraction of the price. This lets you spare saving much of the hassle of a support contract & RMA's, which for 1g & 10g optics would probably cost you more in time than just buying a new module. This usually makes third party optics cheaper than first party copper cables.  Finisar & JDSU are the big names, but there are a bunch of others.  Vendors may claim that their optics are tested for compatability and third party optics may have problems. I've even seen these problems, but sadly for the vendor they rebadged the same optics and we demonstrated the problem with them as well.  To give you a pricing idea; Digikey, hardly the cheapest option out there have Finisar multimode QSFP modules for US$390 for quantity one (10g SFP+ at $114 and 1g SFP at $42) ", 
        "type": "2", 
        "id": "291", 
        "parentId": "157"
    }, 
    {
        "content": "Another option that could give more flexibility is to use QoS and simply PbR based on the queues, if you design it right you even get automatic failover from the primary to the backup, but not the other way round.  That way you can choose to share, or not share, any link or router with a policy change. ", 
        "type": "2", 
        "id": "292", 
        "parentId": "202"
    }, 
    {
        "content": "", 
        "type": "5", 
        "id": "293", 
        "parentId": -1
    }, 
    {
        "content": "This tag is for questions about Multi Protocol Label Switching (MPLS), the layer 2.5 protocol used as a transport layer for Traffic Engineering, some Layer 2 & 3 VPN's, and VPLS", 
        "type": "4", 
        "id": "294", 
        "parentId": -1
    }, 
    {
        "content": "", 
        "type": "5", 
        "id": "295", 
        "parentId": -1
    }, 
    {
        "content": "Quality Of Service, all aspects of providing differential service to packets based on TOS, DSCP, or other information", 
        "type": "4", 
        "id": "296", 
        "parentId": -1
    }, 
    {
        "content": "In a interconnection of two datacenters, Is TRILL a long-term solution ?  Is the TRILL implementation of Cisco (FabricPath) interoperable with other manufacturer ? ", 
        "type": "1", 
        "id": "297", 
        "parentId": -1
    }, 
    {
        "content": "Is it okay to use a Cisco 2948 for CCNA students, after all it's cheaper to get these switches and they have more features? Wouldn't this be better than a 2950 switch? ", 
        "type": "1", 
        "id": "298", 
        "parentId": -1
    }, 
    {
        "content": "CCNA requires the student to be familiar with the IOS operating system, this makes the Cisco 2948 unusable for a CCNA lab as it runs Catalyst OS (CatOS) and there is no way to upgrade the operating system from CatOS to IOS.  So while it may have  more features, for a pure CCNA lab it's not really usable.  Personally I would also recommend the following equipment (if you are not opting for GNS3):   2 x Cisco 2610XM Advanced  Fast Ethernet 128Mb Dram / 32mb flash IOS 12.4 Adv Security Cisco 1760 Fast Ethernet 64Mb Dram / 32mb flash IOS 12.4 Adv Security 3 x WIC-1T for the two 2600 routers 2 x Cisco ws2950  ", 
        "type": "2", 
        "id": "299", 
        "parentId": "298"
    }, 
    {
        "content": "Based on the question I assume you're talking about a L2 DCI...which is pretty widely accepted as a \"bad policy\" for a multitude of reasons.  BUT assuming you don't care about any of those reasons a good place to start is by saying that FabricPath != Trill. Just like STP != PVSTP and MST/RSTP != RPVST. It's Cisco's proprietary version of what TRILL might deliver, but it is not TRILL. Thus making it inoperable with other vendors.  If someone had a gun to my head and told me to implement a L2 DCI I would use several geographically diverse links and bond them where I can. You might could get away with TRILL if you have devices that actually support the standard. ", 
        "type": "2", 
        "id": "300", 
        "parentId": "297"
    }, 
    {
        "content": "For basic familiarity with Catalyst IOS switching, I've often had folks check out the 3550 switch.  It isn't capable of certain features (QoS, Private VLANs, etc); however those don't come into play at the CCNA level.   3550's can be had for pretty cheap on eBay, last I checked, under $100.  (Also worth noting: if you have a POE 3550, you have to manually configure access ports as trunk ports for separation of voice/data VLANs)  If you want more functionality and a more recent IOS version, the 3560 can be found for $100-300.  EDIT--  3550's do have QOS capabilities as pointed out in the comments below, see this document on 3550 QOS setup.  I was meaning that it isn't capable of doing MQC style QOS. ", 
        "type": "2", 
        "id": "301", 
        "parentId": "298"
    }, 
    {
        "content": "Wendell Odom's website has a lot of great info, including lab equipment recommendations for CCNA and CCNP.  I also started a Whirlpool thread a few years ago for those studying for the CCNA and CCNP certs. There is a lot of great info in there. We also turned it in to a wiki as well.  If you're wanting to save a bit of money, you can use GNS3 for the routers and then just buy some switches. I have written a few blog posts about how you can connect virtual equipment to physical equipment.   I prefer the virtual router + physical switch approach over the full physical lab as it saves money, energy and power points :) It's also good because you can take your virtual router topologies with you everywhere you go. ", 
        "type": "2", 
        "id": "302", 
        "parentId": "298"
    }, 
    {
        "content": "I am in the process of re-ip addressing a large number of remote locations, all of which are using a Cisco GET VPN/GDOI configuration for encryption of the traffic.  In the process, I also wanted to review the configuration to ensure we were following best-practices.  I have been over the Cisco GET VPN config guide and Deployment Guide, but haven't found a good answer to this question:  Is it best practice to use a loopback or physical interface as the terminating interface of the encrypted traffic?  Currently the configuration uses the physical Gig0/0 interface to terminate the encrypted traffic.  However to simplify some of the other changes involved, I would like to utilize the Loopback0 interface for that purpose.  Down the road, some of these sites would be getting redundant uplinks, and my understanding is that I could use the Loopback interface to terminate both encrypted connections.  Below are two samples, the existing configuration and how I understand I would have to set the router up to use the Loopback.  I believe I would only have to add the following command to the GM:    crypto map %MAPNAME local-address Loopback0    The GM address would then also have to be changed on the Key Server; to my knowledge, that is the only change on the KS.    A sample of the existing confiuration:  ! crypto isakmp policy 10  encr aes  authentication pre-share  group 2 crypto isakmp key %KEY address 10.100.1.1 crypto isakmp key %KEY address 10.100.2.1 ! crypto ipsec df-bit clear crypto gdoi group GDOI-MPLS-GROUP-10  identity number 10  server address ipv4 10.100.1.1  server address ipv4 10.100.2.1 ! crypto map CM-STATIC-MAP 10 gdoi   set group GDOI-MPLS-GROUP-10 ! interface Loopback0  ip address 10.129.110.125 255.255.255.252 ! interface GigabitEthernet0/0  description MPLS-Connection  ip address 10.101.44.2 255.255.255.248  ip virtual-reassembly  ip tcp adjust-mss 1300  duplex full  speed 100  no cdp enable  crypto map CM-STATIC-MAP !     A sample using the loopback as the terminating interface:   ! crypto isakmp policy 10  encr aes  authentication pre-share  group 2 crypto isakmp key %KEY address 10.100.1.1 crypto isakmp key %KEY address 10.100.2.1 ! crypto ipsec df-bit clear crypto gdoi group GDOI-MPLS-GROUP-10  identity number 10  server address ipv4 10.100.1.1  server address ipv4 10.100.2.1 ! crypto map CM-STATIC-MAP local-address Loopback0 crypto map CM-STATIC-MAP 10 gdoi   set group GDOI-MPLS-GROUP-10 ! interface Loopback0  ip address 10.129.110.101 255.255.255.252 ! interface GigabitEthernet0/0  description MPLS-Connection  ip address 10.101.24.2 255.255.255.248  ip tcp adjust-mss 1300  duplex full  speed 100  no cdp enable  crypto map CM-STATIC-MAP !    ", 
        "type": "1", 
        "id": "303", 
        "parentId": -1
    }, 
    {
        "content": "I think it's important to separate two different goals here:   Dealing with IPv6 enablement. The main issues with this goal usually has to do with equipment in your network not supporting IPv6, and you have to use some kind of tunneling/transport solution to bypass those elements. 6rd and 6PE are very popular. On the other side there are strategies to face IPv4 address depletion. The only way to solve this issue is implementing some kind of NAT (carrier grade NAT, DSLite, NAT64...)   Some technologies solve the first issue, some solve the second one, and some solve both of them.  Everything is evolving very quickly and you have to watch out for new solutions arising. For example. One solution that is taking a lot of attention lately is MAP-E and MAP-T, which are currently in draft status (MAP-E is close to becoming RFC) and allow you to implement IPv6 and solve IPv4 address exhaustion in a very smart way. You can get more information at http://tools.ietf.org/html/draft-ietf-softwire-map-06  To get more detailed information, I'd need to know the context and the requirements. I mean, solutions depend on the kind of network (a Service Provider is very different to a content provider or a small business network) and the goal you're trying to achieve.  Kind regards,  Diego Nuevo ", 
        "type": "2", 
        "id": "304", 
        "parentId": "259"
    }, 
    {
        "content": "Packets should be classified regardless of the TCP handshake being watched or not. If there isn't a session defined for that flow (fast path) a new one should be created (first path).  Do you have any screen configured?? Maybe it's the screen that's dropping the traffic.  More details on Troubleshooting Traffic Flows and Session Establishment  Maybe you can configure a log file with traceoptions:  security {   flow {         traceoptions {             file trace_file;             flag basic-datapath;             packet-filter Match {                 protocol tcp;                 source-prefix <source-ip>;                 destination-prefix <dest-ip>;                 destination-port <tcp-port>;             }         }     } }   Beware of these traces, since it can cause high CPU load on the SRX if it's carrying a lot of traffic. Limit the filter as much as possible and run it during a maintenance window. ", 
        "type": "2", 
        "id": "305", 
        "parentId": "233"
    }, 
    {
        "content": "Is it possible to configure Cisco NCS/Prime Infrastructure to send reports via email without encapsulating them in a zip? ", 
        "type": "1", 
        "id": "306", 
        "parentId": -1
    }, 
    {
        "content": "As of Cisco Prime Infrastructure 1.3 (which is the latest version of WCS/NCS), this is not possible. I have heard that many people have asked Cisco about this, but reports sent via email still must be encapsulated in a zip file. ", 
        "type": "2", 
        "id": "307", 
        "parentId": "306"
    }, 
    {
        "content": "One of the best ways to get a lab for the CCNA is to get your hands on a copy of the Packet Tracer utility used in the Cisco Networking Academy courses.  It contains the full spectrum of \"equipment\" and commands you will need.  However, I don't know if there's another legit way to get it other than enrolling in the course itself.  One other thing to note as well, if you are on a tight budget, don't worry about an expensive switch that can do QOS and Layer 3 because the CCNA focuses on nothing above layer 2 and nothing really fancy (no QinQ, etc).  VTP and (Rapid) Spanning Tree will be about the most \"complicated\" switching topics you'll have.  Given this, a 2950 will serve you well and you can get those for less than $50 a pop on ebay. ", 
        "type": "2", 
        "id": "308", 
        "parentId": "298"
    }, 
    {
        "content": "One thing to bear in mind with the CCNA is that the vast majority of the things you need to play with are trivially done in Cisco Packet Tracer and GNS3 (especially since you can now get a switchport card working in GNS3 now). However, with that said, depending on how you learn, you might prefer to work with a physical setup, and if that's within your budget, go for it.  In any case, I'd definitely recommend against foregoing any sort of usage of PT/GNS3, not least because something like GNS3 can actually be used to augment your lab setup - hook it up to your physical gear and run wild. ", 
        "type": "2", 
        "id": "309", 
        "parentId": "298"
    }, 
    {
        "content": "In all the detail on DSSS and OFDM, I have missed which characterics of DSSS and OFDM make these distinct technologies. Nothing I've read appears to contrast the two.   As I understand it, both DSSS and OFDM are intended to send many bits in parallel. DSSS spreads data across a channel for redundancy, and the books say that bits are sent in parallel. OFDM divides a channel into \"subcarriers\" and likewise sends bits in parallel. This might suggest the main difference between the two, that DSSS somehow sends data in parallel on a single carrier, whereas OFDM accomplishes this with multiple carriers. Either way, both take up more bandwidth than 1 signal, so I don't get how they're much different.  What should a network engineer know, about how DSSS and OFDM are fundamentally different from each other?  Update: According to the current CWNA book, OFDM is not a spread spectrum technology. ", 
        "type": "1", 
        "id": "310", 
        "parentId": -1
    }, 
    {
        "content": "I have requested the same thing, and been told that they must be zipped. No real explanation why this must be the case, but there weren't any hints that things were going to change any time soon! ", 
        "type": "2", 
        "id": "311", 
        "parentId": "306"
    }, 
    {
        "content": "There are three TRILL-ish implementations out there that I'm aware of:   FabricPath from Cisco - correct routing protocol (IS-IS), wrong encap format; VCS Fabric from Brocade - correct encap format, wrong routing protocol (FSPF); TRILL from HP - seems to be OK   So there is at the moment ZERO inter-vendor interoperability.  And as others said - if someone held a gun to my head and told me to do L2 DCI, I would try to use OTV first (it's also available on ASR 1K), failing that, TRILL would be second least horrible option. ", 
        "type": "2", 
        "id": "312", 
        "parentId": "297"
    }, 
    {
        "content": "I just got my CCNA not more than 2 wks ago, and the only hardware I purchased was a C2950 for $30. Everything else was virtual. Both GNS3 and Packet Tracer are helpful overall, but neither is without its bugs. I preferred GNS3, simply because it's easier to connect a virtual GNS3 network to real hardware (like my C2950), or arbitrary virtual hosts (like Qemu or VMWare guests). But I will say this: doubt instead of trust in the correctness of the simulation software can really slow down your learning.The actual C2950 hardware either worked as expected, or somewhere I made a mistake. But with GNS3 for example, you have to ask yourself whether you made a mistake or the software did.  For maximum reliability, buy the real hardware if your budget allows. Expect to spend a fair amount of time figuring out how to get GNS3 to work, and handling exceptions. But even with the faults of the emulators, it's a good idea to consider GNS3 because it's possible to create all kinds of near-realistic scenarious quickly and cheaply. ", 
        "type": "2", 
        "id": "313", 
        "parentId": "298"
    }, 
    {
        "content": "TRILL strikes me as something that is barking up the wrong tree; it's costly in terms of both system resources and the complexity of hardware required to support it since it requires a total do-over of a switch architecture from the usual 802.1 standards to the new \"RBridge\" which totally redefines the behaviour one would be accustomed to from Ethernet frames: for example, your L2 forwarding hardware now has to care about a hop count, making L2 behave more like L3, this is quite costly in terms of hardware since a plain old switching ASIC won't cut it.  A better solution (in my opinion, I should add) is 802.1aq AKA SPB or Shortest Path Bridging - developed by the IEEE rather than the IETF, the primary benefit of SPB is that, unlike TRILL, it doesn't require Layer 3-like hardware forwarding capabilities in order to operate. In this respect, FabricPath is more akin to SPB than TRILL since it is still sitting on top of plain old Ethernet.  As a result, My bet is that SPB is the protocol that's more likely to be picked up by vendors and have a better shot at being widely interoperable in the way that MST is today. ", 
        "type": "2", 
        "id": "314", 
        "parentId": "297"
    }, 
    {
        "content": "With regard to whether TRILL is a viable DCI technology, I'm not sure. When I last checked the TRILL WG wasn't chartered to work on cross data center TRILL solutions although the following draft shows what such a solution \"could\" look like draft-aldrin-trill-data-center-interconnect-00  Increasing the size of the TRILL domain has some scalability issues (nickname exhaustion to name one) and also increases the size of the failure domain. For DCI I would look at some of the more tried/tested models (VPLS for example) and I'd be tempted to leave each DC in it's own TRILL domain. ", 
        "type": "2", 
        "id": "315", 
        "parentId": "297"
    }, 
    {
        "content": "This tag should be used for anything directly related to Data Center Interconnect from general design and best practice questions to detailed configuration questions.  Some example technologies used in DCI are Dark Fibre, Coarse Wavelength-Division Multiplexing (CWDM), Dense Wavelength-Division Multiplexing (DWDM), Virtual Private LAN Service (VPLS) and Multi-Protocol Label Switching Virtual Private Networks (MPLS VPNs). ", 
        "type": "5", 
        "id": "316", 
        "parentId": -1
    }, 
    {
        "content": "Data Center Interconnect. The act of interconnecting two or more data centers.", 
        "type": "4", 
        "id": "317", 
        "parentId": -1
    }, 
    {
        "content": "This tag is an catch all for questions related to HP's products. Questions should use a more specific tag if available, such as hp-procurve, hp-comware, hp-virtualconnect, hp-servers, hp-blades etc...  For more information on HP's networking portfolio, head over to hp.com ", 
        "type": "5", 
        "id": "318", 
        "parentId": -1
    }, 
    {
        "content": "", 
        "type": "4", 
        "id": "319", 
        "parentId": -1
    }, 
    {
        "content": "Packet Tracer and GNS3 are highly recommended based on the fact that you can get them at no cost. When using Packet Tracer it is also quite useful in familiarising yourself with what the exams sims are like.  However if you can afford it there's nothing like getting your hands on real kit and getting used to the different physical cables, especially if you don't currently work as an engineer.  As the CCNA requires you to know stuff about the kit like how it boots, flash, moving config & IOS files around from tftp etc, then if you have some real kit you can take a look inside and have a go at upgrading the flash for example, which really helps the theory click into place.  2500 series & 2950 Cat switches are probably the cheapest option that will do it but if you are serious about certification and want to go beyong CCNA level then you'll want to consider building your lab for the future.  So if you can afford it i'd recommend some 1841's for your routers as they are really reasonably priced nowadays on eBay and then (again if you can afford it) get some 3350 switches which you can then load IOS capable of L3 switching and routing protocols.  ", 
        "type": "2", 
        "id": "320", 
        "parentId": "298"
    }, 
    {
        "content": "Typically, BGP peers can only send a single path to eachother, with any updates for that path replacing the existing one.  However, there is an extension to BGP, typically known as additional-paths which puts an identifier on each route sent to a peer and thus enables BGP peers to exchange multiple routes to a path, thereby giving you not only a greater scope for traffic engineering, but also a reduced convergence time in the event of path withdrawal since the non-bestpath prefix(es) can be installed in the FIB as a backup route(s) that will be used the moment the bestpath gets withdrawn - this is particularly significant if you're running full internet tables as the BGP scanner on a Cisco router will run every 30 seconds at best and walking over 300,000 routes takes its toll.  Note that BGP additional-paths has nothing to do with ECMP since obviously, we're talking about receiving multiple prefixes with the same next-hop - with the only exception being cases where you're running iBGP and not using next-hop-self (or doing dirty things with eBGP where the nexthop is preserved)  Since it is an extension, both routers must support it and negotiate the feature at connection time (or alternatively, have negotiated dynamic capability). It is usable with both eBGP and iBGP. ", 
        "type": "2", 
        "id": "321", 
        "parentId": "170"
    }, 
    {
        "content": " A customer was recently adamant to perform redistribution of their RIPv2 routes into BGP.  This is over a standard MPLS VPN solution whereby the CE routers are fully managed.    This approach feels cumbersome and sub-optimal.  I would prefer to opt for BGP network statements on the CE routers to advertise routes to the various subnets on the Customers LAN but can anyone provide pros & cons regarding this scenario? ", 
        "type": "1", 
        "id": "322", 
        "parentId": -1
    }, 
    {
        "content": "I don't guess there's any real reason it can't work just fine.  You, of course, have the normal loss of information anytime you redistribute from one protocol into another, but there's an argument to be made that you get that when you use network statements as well, so that's kind of a wash.  The main benefit that I see in this is that redistribution would give the setup the ability to react more dynamically to what happens in their network than the more static network statements.  The downside would be that that dynamicism (is that a word?) would be harder to keep in control and might end up doing things that you don't want it to do.  Of course you can put filters and route-maps and the like to constrain the redistribution...but then that's kinda like putting the network statements in.  Not that I would advocate being deceptive in what you're delivering to a customer, but if its fully managed CEs...would they even know the difference?  Assuming you're only talking about a handful of /24's like your diagram would suggest, I just don't think it makes all that much difference one way or the other.  If you set up the redistribution to only allow the /24s, or set up network statements to advertise /24s...ultimately it ends up pretty much the say, right?  What may be the even bigger question that I would have (tongue-in-cheek), is...who uses RIPv2 in this day and age?! ", 
        "type": "2", 
        "id": "323", 
        "parentId": "322"
    }, 
    {
        "content": "Traditional data center architectures centralize the routing. All inter-vlan traffic must transit the core, even when hosts share a network access point. It would be more efficient to perform inter-vlan routing at the network edge. One could route at the edge, but there is a requirement to retain a single L2 domain across the core. Are there any data center architectures that deliver distributed L3 forwarding in a single L2 domain? ", 
        "type": "1", 
        "id": "324", 
        "parentId": -1
    }, 
    {
        "content": "I think that any switch you run FCoE on has to support 802.1Qbb - priority based flow control, which allows Ethernet to act lossless much like FC. ", 
        "type": "2", 
        "id": "325", 
        "parentId": "243"
    }, 
    {
        "content": "From what I've gathered, the primary differentiation between DSSS and OFDM comes in a congested or constrained RF environment.  Because DSSS is transmitting as many bits as possible all at once, it runs the risk of having some of the transmission disrupted in transit should the RF become less than ideal.  In contrast, OFDM sacrifices a bit of performance to transmit the data in those multiple carrier \"packets\" that allow for reassembly or retransmission in the event of a failure.  If I use an extra-large semi truck to haul freight, it works well so long as the highway doesn't have any obstructions (like narrow lanes or short overpasses).  If I break my freight up into a greater number of smaller trucks, I can ensure that some of the freight arrives even if conditions (like a traffic jam) prevent the entire shipment from arriving. ", 
        "type": "2", 
        "id": "326", 
        "parentId": "310"
    }, 
    {
        "content": "This article on Cisco's website is the clearest explantion of omnidirectional antennas I've found.  What isn't so clear to me is...  1) Why is the dipole antenna the most common design for omnidirectional antennas? 2) For example, why not have an antenna that has a power source on one end, and then emits current to the other end? 3) Also, why does the radiation pattern (given on the linked page) take an odd spherical-like shape, instead of say, a cylinder?   ", 
        "type": "1", 
        "id": "327", 
        "parentId": -1
    }, 
    {
        "content": "It is said that wireless is a half-duplex medium. \"Dual-band\" stations are now common, with one antenna in the 2.4 GHz band, and the other in the 5GHz band. Suppose now we have stations with both antennas in, say, the 5GHz band, but on different channels, would full-duplex communication be possible? ", 
        "type": "1", 
        "id": "328", 
        "parentId": -1
    }, 
    {
        "content": "A while back I read several articles about researchers using signal inversion cancellation to achieve full-duplex wireless. With a quick google search I found the below links to similar articles to the ones I read back when.  TLDR; It's for sure possible...though I think they're using signal inversion cancellation instead of two channels (I.E. two different frequencies). People are working on it. Only a matter of time.  http://sing.stanford.edu/fullduplex/ http://www.computerworld.com/s/article/9219752/Rice_demonstrates_full_duplex_wireless_technology  I'd love to get a true RF engineers thoughts on this though. I'm by no means an RF guy. ", 
        "type": "2", 
        "id": "329", 
        "parentId": "328"
    }, 
    {
        "content": "More than likely you'd have to go with one of the newer overlay networks or using Plexxi's switches. I'm sure you could find some way of doing this through traditional means, but I'm not sure how stable it would be.  L3 at TOR is for sure not uncommon. Most larger DCs (Google's, Facebook's) run L3 to the TOR, but they also have phenomenally written applications that don't require VMotion/L2 to recover from failure.  It sounds though that your requirements are more SMB and similar pain points for most virtualized DCs. If it's a greenfield deployment I would strongly suggest looking at Plexxi's offering. If not then an overlay might be the right thing for you. ", 
        "type": "2", 
        "id": "330", 
        "parentId": "324"
    }, 
    {
        "content": "The dipole antenna is the most common because it is inherently simple and very inexpensive to produce.  Your example, doesn't make much sense, beause that is exactly what is done with all antennas.  You have a power source (the transmitter) on one end.  The signal is radiated based on the shape of the antenna and any characteristics of the antenna to focus the signal.  As to why a dipole emits an \"odd spherical-like shape\" (often referenced as a toroid or doughnut), that is a relatively simple concept.  A dipole antenna is often just a straight piece of wire.  The amount of surface area available directly relates to how much signal is transmitted in any direction.  You have a much larger surface area around the lenght of the wire than you do at the tip or base, allowing much more signal to be radiated from the sides. ", 
        "type": "2", 
        "id": "331", 
        "parentId": "327"
    }, 
    {
        "content": "HP's IRF has some resemblance to what you're talking about, although possibly not in the way you're suggesting.  It presents a single system image, but the switching and routing is distributed amongst its nodes.  So if routing is enabled and the switch knows from ARP & MAC tables that the destination is on the same switch, it doesn't traverse the IRF stack's backbone.  But that's more like having a distributed core than having a two- or three-layer architecture. ", 
        "type": "2", 
        "id": "333", 
        "parentId": "324"
    }, 
    {
        "content": "IPv6 migration at a high level?   Enable IPv6 throughout the network, until IPv6 capabilities and connectivity are on par with IPv4. Wait for the day to come when IPv4 is no longer relevant.   Now for the low-level:  Get a prefix (ideally from an RIR) and get it announced, I'd recommend OSPFv3 for your IGP unless you happen to be running a large flat network that you feel IS-IS is better suited to. If you have legacy equipment that is IPv4 only, consider getting around that by doing 6in4 or GRE tunnels across the equipment.  Have a plan for address management, IPv6 space is not precious, if you have a /32 and you think customers will be wanting something larger than a /64, route sufficient space up to your equipment; if a single router or router pair serves 100 customers and each one gets a /56, your IGP should not contain each /56 - allocate a /48 for that router (pair) and you're done. The IPv6 space is so huge that subnet fragmentation should never be necessary if you're doing it right.  Make sure that all of the services you run are dual-stacked, be that DNS, e-mail, whatever - in the majority of cases it's as simple as ensuring the service is configured to listen on v6 and your DNS has an AAAA record. If you provide hosting services, servers etc, be proactive about informing people they can dual-stack their offerings.  Start getting familiar with technologies that will prevent disaster when you have no IPv4 space and cannot get any more of it either - keep a finger on the pulse of things like NAT64 and 464XLAT so that when the time comes, you can determine the viability of having IPv6 only hosts vs. using RFC6598 space and NAT44(4). Setup a lab, experiment.  Then? Wait for Encourage the IPv4 wind-down. ", 
        "type": "2", 
        "id": "334", 
        "parentId": "259"
    }, 
    {
        "content": "A lot of the content in this question is very Cisco-ish, let's dial that back and dispel some mythical assumptions.  1. I need to do Layer 2 at the core  Not unless that's all your hardware is capable of; you could quite freely have point-to-point (links/portchannels) between everything in your core and bring up OSPF/ISIS adjacencies, this is arguably superior to a large L2 domain at the core since you're now precluded from inflicting L2 loop prevention upon yourself; topology changes are now going to be handled by your IGP. If you need to multipath, ECMP takes the place of things like GLBP.  2. Traditional DC architecture centralizes routing  Depends what you mean by \"Tradition\" - IPv4 is \"traditionally\" classful, modern IPv4 is not. In the same vein, a modern datacenter architecture will make the vast majority of non-access links between equipment pass traffic over L3, because from a security and performance standpoint, you want to mimimize the size of your broadcast domains and avoid reliance on L2 loop prevention which tends to impact traffic flow for significantly longer periods than an L3 protocol when a topology change happens (recent development such as SPB and TRILL not withstanding)  3. Traffic between broadcast/multipoint domains must happen at the Core  Again, this is down to the hardware you have; if your distribution layer is capable of L3 forwarding on par with your core and also happens to be the termination point for the particular domains you wish to route traffic between, there's no logical reason to send that traffic up to the core only to have it sent back down.  So, with all this in mind, why do large, flat L2 networks remain so pervasive? Because it's \"simple\" and doesn't require too much thought. Setting up multi-area OSPF and ensuring optimum paths throughout the network by configuring link costs appropriately makes for an excellent architecture, but it requires you to think. spinning up a few VLANs, using something like GLBP and letting spanning tree just \"do its thing\" does not. The real WTF however is that a decent L2 setup should have a well-thought out STP configuration just as OSPF should. ", 
        "type": "2", 
        "id": "335", 
        "parentId": "324"
    }, 
    {
        "content": "If you're planning to load the link to its full capacity - go with IPinIP. Otherwise - GRE. ", 
        "type": "2", 
        "id": "336", 
        "parentId": "275"
    }, 
    {
        "content": "I had a similar requirement many moons ago with a remote router running IOS. Ended up using tcp-small-servers chargen service on router - runs on tcp/19. It will generate a stream of random characters etc. and can be scaled out using multiple telnet sessions from the remote router to other routers running chargen. Nowhere near the rich control/functionality of host based iperf tests. Also as we know ASA does not support telnet locally so this won't work here...  ASA does have that packet tracer utility since 7.0 to generate interesting traffic for tunnel configs but doesn't allow rate tuning. Such functionality would also be an interesting attack vector if exploited remotely and at scale... Any such native functionality on ASA would likely peg the control plane and any variety of inherent control plane policing would need to restrict the generated traffic rate.   I agree with above that Raspberry Pi is a good solution here. We just dropped some in to drive NOC style screens. They're awesome. ", 
        "type": "2", 
        "id": "337", 
        "parentId": "195"
    }, 
    {
        "content": "If you're using two different channels then that would be two half-duplex connections, not a full-duplex connection.  This is what MIMO does, multiple frequencies on multiple antennas operating simultaneously to increase throughput.  http://en.wikipedia.org/wiki/MIMO  @bigmstone has the answer for wireless full-duplex, sending and receiving simultaneously on the same frequency, it's being researched but nothing is in production yet. ", 
        "type": "2", 
        "id": "338", 
        "parentId": "328"
    }, 
    {
        "content": "Q1: A simple dipole antenna emits radiation most strongly perpendicular to the axis of the antenna. It emits very little out the ends. The antenna has no power variation in the circular direction around it's \"waist.\" (This is simply the nature of electro-magnetism.) This radiation pattern matches the most common usage pattern -- the various other receivers/transmitters are situated at about the same height when the antenna is oriented vertically. When you factor in that dipoles are easy to construct (they are physically simple structures and electrical systems), they become an obvious choice.  Q2: What you suggest is exactly a dipole antenna. Note that a textbook dipole antenna is TWO wires, in a straight line, with the transmitter/receiver connected to the near ends of the wires. If you just have one wire, with a trans/rec connected to one end, you still have (in term of the E&M theory) a dipole antenna -- it's less efficient, but even easier to construct.  (Note that I'm really glossing over the E&M theory here. In reality, a trans/rec has two connections by definition. Whatever is in the trans/rec has two electrical sides. For best efficiency, you connect them to the two sides of a dipole antenna. You can leave one side disconnected -- but that's just a really small second side for the E&M purposes, giving you an unbalanced antenna. An example of a really cheap dipole setup was the older car antennas: Straight wire sticking up, with the radio receiver connected to the wire and the other side to the car's ground. So the whole metal car was the other side of the antenna.)  Q3: That cisco page has information on different types of antennas. An omni directional antenna would be as you described: The distance from the antenna for a given intensity would be a circle. (The pattern is called a Toroid.) The diagram you're asking about shows a varying distance from the antenna for a given intensity -- that pattern is often said to have lobes. The advantage of that antenna is that it is better in particular directions; Notably, it's primary lobe is significantly better than it's other lobes, making it work much better in one direction, thus is is more or less unidirectional. ", 
        "type": "2", 
        "id": "339", 
        "parentId": "327"
    }, 
    {
        "content": "What model of line cards are you using in your N7K chassis? M series or F series? There may be some hair-pinning happening within the interconnect architecture on the N7K if you are using F series cards that is being detrimental to routed traffic.  Also, make sure you have a port-channel between N7K for non-vpc vlans. Vlans to your firewall cluster should not cross the VPC peer-link. If you do not have a second port-channel between N7K's, then this could be your problem. ", 
        "type": "2", 
        "id": "340", 
        "parentId": "102"
    }, 
    {
        "content": "In our network, we use the line latency to determine the cost.  We measure the latency in microseconds and apply that as the cost of the line.  It doesn't matter if you use one way or round trip latency, of course.  You just need to be consistent.  This works for us because our WAN links are almost always 10G, so we don't need take capacity issues into consideration.  This then, builds the lowest latency forwarding topology and if there is a failure of the primary path, then we know we'll get forwarded on the next fastest path available.  Latency is obviously the most important aspect to consider for our network, that's why this works for us.  Other networks might prefer cheaper or higher capacity lines over low latency lines.  Whatever the business requires is where you should start. ", 
        "type": "2", 
        "id": "341", 
        "parentId": "280"
    }, 
    {
        "content": "I have an issue where a Netscreen 25 is being flooded with IKE packets from an unrelated source, which at times is overloading the firewall's processing capacity. I see thousands of log entries indicating that the IKE messages are being rejected:     Rejected an IKE packet on ethernet1 from x.x.x.x:500 to y.y.y.y:500 with cookies c423bfd6ca96608b and 0000000000000000 because an initial Phase 1 packet arrived from an unrecognized peer gateway.   Is there a way to filter the control plane of the firewall so that these packets are dropped at the interface edge rather than processed and rejected? This would be done with a simple interface ACL on a Cisco router or ASA, but I'm not sure how to go about this on ScreenOS. ", 
        "type": "1", 
        "id": "342", 
        "parentId": -1
    }, 
    {
        "content": "I have what I think is a weird behavior on a Brocade (Foundry) FESX 424.   This router receives a default route (0.0.0.0/0) in iBGP from one router, and route for 0.0.0.0/8 in OSPF from another router, as a type 5 as-external route.  I would expect the two routes to be installed in the routing table, the first one as a more specific, default route and the second one as a route for 0.0.0.0/8.  However, not only is the OSPF route the only one installed of the two, it seems to behave as a default route.  Neither of the two routers has a ' default-information originate' configuration set. The OSPF neighbor is a Cisco 6509. There is no filters on the Brocade router.  What am I missing here ?  SSH@br1>sh version    SW: Version 04.2.00bT3e3 Copyright (c) 1996-2008 Foundry Networks, Inc.       Compiled on Sep 10 2008 at 17:54:35 labeled as SXR04200b       (3955032 bytes) from Primary SXR04200b.bin       BootROM: Version 04.0.00T3e5 (FEv2)   HW: Stackable FESX424-PREM (PROM-TYPE FESX424-L3U)  SSH@br1> sh ip route Total number of IP routes: 134, avail: 79821 (out of max 80000) B:BGP D:Connected  R:RIP  S:Static  O:OSPF *:Candidate default         Destination        Gateway         Port       Cost   Type         0.0.0.0/8          GW-18    2          20     O     SSH@br1> sh ip bgp dampened-paths  SSH@br1>  SSH@br1> sh ip bgp filtered-routes  BGP has no filtered route! SSH@br1>   SSH@br1>sh ip bgp routes  Total number of BGP Routes: 198 Status A:AGGREGATE B:BEST b:NOT-INSTALLED-BEST C:CONFED_EBGP D:DAMPED        E:EBGP H:HISTORY I:IBGP L:LOCAL M:MULTIPATH S:SUPPRESSED        Prefix             Next Hop        Metric     LocPrf     Weight Status 1      0.0.0.0/0          BR-126              100        0      bI              AS_PATH: XXXX  SSH@br1>sh ip ospf routes       Destination     Mask            Path_Cost Type2_Cost Path_Type        0.0.0.0         255.0.0.0       1         20         Type2_Ext        Adv_Router      Link_State      Dest_Type State      Tag       Flags       ADV-1     0.0.0.0         Ase       Valid      0          3000        Paths Out_Port  Next_Hop        Type      Arp_Index  State            1     2         GW-18    OSPF      8          82 00  ", 
        "type": "1", 
        "id": "343", 
        "parentId": -1
    }, 
    {
        "content": "I just looked at an installation of this equipment (http://www.ubnt.com/airfiber).  They're running two antennas in the 24GHz range, each with a 750M throughput.  This is basically a 750M Full Duplex wireless solution, since even for ethernet you're really just two independent unidirectional 100M (or whatever) media.    Though it's not a true Full Duplex solution because this device still needs a mechanism to detect collisions and then back off a random amount of time, else it becomes useless if you install more than one in an area.  And because of the shared medium (the radio spectrum) it can never be \"Full Duplex\" due to the necessity of detecting collisions. ", 
        "type": "2", 
        "id": "344", 
        "parentId": "328"
    }, 
    {
        "content": "MIMO is as close to full duplex as you'll get, at least with current technology.  In fact, a single channel space is split into multiple \"streams\" which allow for the increased throughput via OFDM (http://en.wikipedia.org/wiki/Orthogonal_frequency-division_multiplexing).  However, on a single channel (assuming no overlap), only one device can be transmitting. I don't think there will be a way around this.  There's not a great deal of non-overlapping channels even on 5gHz (you want to avoid the DFS channels). Couple that with possibly getting interference on some but not all channels if you could use multiple channels at once, and it starts to become quite messy and adds a lot of overhead.  But look into 802.11ac or 802.11ad, those use very very wide channels to achieve silly throughput (up to about 7Gbps estimated). More speed is on the way. ", 
        "type": "2", 
        "id": "345", 
        "parentId": "328"
    }, 
    {
        "content": "I'm not a wireless spectrum expert, but one thing to remember in this idea is that full duplex is not just the ability to simultaneously send and receive, but also to do so without a danger of collisions. In a wired environment, if you install a hub you have to fall back to half-duplex because of the possibility of a collision. In wireless, even if you used a separate non-overlapping channel (it wouldn't even have to be 2.4/5) you still have the possibility for collisions on 1 of those channels (the one the hosts are using to transmit).   Now wireless uses CSMA/CA (instead of CSMA/CD in a Ethernet network), which is suppose to *A*void collisions not just *D*etect them. Maybe CSMA/CD would solve that issue, just wanted to point it out as a consideration in full-duplex. ", 
        "type": "2", 
        "id": "346", 
        "parentId": "328"
    }, 
    {
        "content": "0.0.0.0/8 is reserved as a special purpose network meaning \"this host on this network,\" which would no doubt cause issues if trying to use it as a regular prefix. I'm not sure what you're trying to accomplish but try a valid network like 10.0.0.0/8 instead. ", 
        "type": "2", 
        "id": "347", 
        "parentId": "343"
    }, 
    {
        "content": "Taken from http://wiki.answers.com/Q/Difference_between_ofdm_dsss_fhss:     Orthogonal Frequency Division Multiplexing (OFDM) is a   multiple-carrier (MC) modulation technique which creates frequency   diversity. A high-speed data stream is converted into multiple   low-speed data streams via Serial-to-Parallel (S/P) conversion. Each   data stream is modulated by a subcarrier.    That way, instead of having a frequency-selective fading wireless   channel, where each frequency component of the signal is attenuated   and phase-shifted in different amount, we have multiple flat-fading   subchannels.      Spread Spectrum (SS) techniques convert a low-speed data stream into a   high-speed data stream. That way, the bandwidth of the modulated   carrier becomes much larger than the minimum required transmission   bandwidth. This is like Frequency Modulation (FM): we trade   transmission bandwidth with Signal-to-Noise (S/N) ratio, meaning that   we can have error-free communication transmiting lower-power signals.   The fact is, OFDM is used for 802.11n and upwards, so it seems to be the better of the two. I've been a wireless consultant for a couple of years now, and I've never really been asked any questions regarding modulation of the different specifications. Its good to be aware of the differences, but not much more than that. ", 
        "type": "2", 
        "id": "348", 
        "parentId": "310"
    }, 
    {
        "content": "The HP ProCurve switches can have 802.1p CoS Priorities or DSCP Policies set, honored, changed or honored with new priority.   By default, Quality of Service is ENABLED and operates based on 802.1p settings in the packet.   Classification is configured primarily on a global basis; but can be configured by VLAN and port.  Marking is configured primarily on a global basis.  Some configuration options can be set globally and some also set by VLAN or port.   Queue Scheduling is configured per port.   For the ProCurve range, its always worth looking through one particular manual which is the \"Advanced Traffic Management Guide\" For the 3800 Series (which by the way, shares the same firmware as the 3500/5400/6200/6600/8200 series) it has 80-odd pages on configuring or setting up Quality of Service.   Lastly, its always worth looking through \"HP Networking and Cisco CLI reference Guide\"; this takes common Cisco configuration examples, and provides a HP ProCurve or HP Comware equivalant ", 
        "type": "2", 
        "id": "349", 
        "parentId": "181"
    }, 
    {
        "content": "The Best Practice Guide for HP Lefthand iSCSI Storage stated, \"For optimal switch performance, its recommended that the switch have at least 512 KB of buffer cache per port. Consult your switch manufacturer specifications for the total buffer cache. For example, if the switch has 48x 1 Gb ports, the recommendation is to have at least 24 MB of buffer cache dedicated to those ports. If the switch aggregates cache among a group of ports (for example, 1 MB of cache per 8 ports), space your storage modules and servers appropriately to avoid cache oversubscription.\"  I couldn't tell you what buffer cache the 2960S has per port, as it doesn't seem to be stated on the datasheet.  ", 
        "type": "2", 
        "id": "350", 
        "parentId": "135"
    }, 
    {
        "content": "", 
        "type": "5", 
        "id": "351", 
        "parentId": -1
    }, 
    {
        "content": "Used for discussions of TDMoE (Time-Division Multiplexing over Ethernet), a protocol that allows voice links to be run on less expensive Ethernet hardware.", 
        "type": "4", 
        "id": "352", 
        "parentId": -1
    }, 
    {
        "content": "", 
        "type": "5", 
        "id": "353", 
        "parentId": -1
    }, 
    {
        "content": "A general purpose tag to mark discussions of general security topics including firewalls, ACLs, AAA and numerous others related to keeping the network safe from unauthorized access.", 
        "type": "4", 
        "id": "354", 
        "parentId": -1
    }, 
    {
        "content": "If you have a router which does not support OSPF, but your routing topology makes use of OSPF as all other devices do support it, what is the best way to get this routers networks in to the OSPF area?  My initial thought was to put a static route on every other router, but if there are multiple networks behind this router this could become very cumbersome very quickly.  This problem arises from the answer on another question: How do you get an ASA to announce NAT'd 'outside' addresses in to an OSPF zone? ", 
        "type": "1", 
        "id": "355", 
        "parentId": -1
    }, 
    {
        "content": "Seems clear to me that the Link Local, and Unique Local, addresses should at least be filtered.   Is there anything other than LLA/ULA that should be filtered? For LLA, is it standard practice to blanket filter the full fe80::/10, or just filter the fe80::/64?  ", 
        "type": "1", 
        "id": "356", 
        "parentId": -1
    }, 
    {
        "content": "What does the topology look like? How are you doing routing today towards these networks? Or is the router being deployed now? Do you have an OSPF capable router connected to this router that is not running OSPF?  If you do then I suggest you redistribute static on this router. Something like:  ip prefix-list static-routes permit 10.0.0.0/24 ip prefix-list static-routes permit 10.0.10.0/24 ip prefix-list static-routes permit 10.0.20.0/24 route-map static-allowed permit 10 match ip address prefix-list static-routes route-map static-allowed deny 20   The explicit deny at the end is not really needed as there is an implicit deny but it makes the logic a bit more clear.  Then under the OSPF process:  router ospf x redistribute static subnets route-map static-allowed  ", 
        "type": "2", 
        "id": "357", 
        "parentId": "355"
    }, 
    {
        "content": "RFC 6890 section 2.2.3 describe special purpose prefixes for IPv6. Link is here:  http://tools.ietf.org/html/rfc6890#page-14  Prefixes to include are:                 +----------------------+------------------+                | Attribute            | Value            |                +----------------------+------------------+                | Address Block        | ::1/128          |                | Name                 | Loopback Address |                | RFC                  | [RFC4291]        |                | Allocation Date      | February 2006    |                | Termination Date     | N/A              |                | Source               | False            |                | Destination          | False            |                | Forwardable          | False            |                | Global               | False            |                | Reserved-by-Protocol | True             |                +----------------------+------------------+                      Table 17: Loopback Address               +----------------------+---------------------+              | Attribute            | Value               |              +----------------------+---------------------+              | Address Block        | ::/128              |              | Name                 | Unspecified Address |              | RFC                  | [RFC4291]           |              | Allocation Date      | February 2006       |              | Termination Date     | N/A                 |              | Source               | True                |              | Destination          | False               |              | Forwardable          | False               |              | Global               | False               |              | Reserved-by-Protocol | True                |              +----------------------+---------------------+                     Table 18: Unspecified Address              +----------------------+---------------------+             | Attribute            | Value               |             +----------------------+---------------------+             | Address Block        | 64:ff9b::/96        |             | Name                 | IPv4-IPv6 Translat. |             | RFC                  | [RFC6052]           |             | Allocation Date      | October 2010        |             | Termination Date     | N/A                 |             | Source               | True                |             | Destination          | True                |             | Forwardable          | True                |             | Global               | True                |             | Reserved-by-Protocol | False               |             +----------------------+---------------------+                Table 19: IPv4-IPv6 Translation Address               +----------------------+---------------------+              | Attribute            | Value               |              +----------------------+---------------------+              | Address Block        | ::ffff:0:0/96       |              | Name                 | IPv4-mapped Address |              | RFC                  | [RFC4291]           |              | Allocation Date      | February 2006       |              | Termination Date     | N/A                 |              | Source               | False               |              | Destination          | False               |              | Forwardable          | False               |              | Global               | False               |              | Reserved-by-Protocol | True                |              +----------------------+---------------------+                     Table 20: IPv4-Mapped Address            +----------------------+----------------------------+           | Attribute            | Value                      |           +----------------------+----------------------------+           | Address Block        | 100::/64                   |           | Name                 | Discard-Only Address Block |           | RFC                  | [RFC6666]                  |           | Allocation Date      | June 2012                  |           | Termination Date     | N/A                        |           | Source               | True                       |           | Destination          | True                       |           | Forwardable          | True                       |           | Global               | False                      |           | Reserved-by-Protocol | False                      |           +----------------------+----------------------------+                     Table 21: Discard-Only Prefix            +----------------------+---------------------------+           | Attribute            | Value                     |           +----------------------+---------------------------+           | Address Block        | 2001::/23                 |           | Name                 | IETF Protocol Assignments |           | RFC                  | [RFC2928]                 |           | Allocation Date      | September 2000            |           | Termination Date     | N/A                       |           | Source               | False[1]                  |           | Destination          | False[1]                  |           | Forwardable          | False[1]                  |           | Global               | False[1]                  |           | Reserved-by-Protocol | False                     |           +----------------------+---------------------------+           [1] Unless allowed by a more specific allocation.                  +----------------------+----------------+                 | Attribute            | Value          |                 +----------------------+----------------+                 | Address Block        | 2001::/32      |                 | Name                 | TEREDO         |                 | RFC                  | [RFC4380]      |                 | Allocation Date      | January 2006   |                 | Termination Date     | N/A            |                 | Source               | True           |                 | Destination          | True           |                 | Forwardable          | True           |                 | Global               | False          |                 | Reserved-by-Protocol | False          |                 +----------------------+----------------+                           Table 23: TEREDO                  +----------------------+----------------+                 | Attribute            | Value          |                 +----------------------+----------------+                 | Address Block        | 2001:2::/48    |                 | Name                 | Benchmarking   |                 | RFC                  | [RFC5180]      |                 | Allocation Date      | April 2008     |                 | Termination Date     | N/A            |                 | Source               | True           |                 | Destination          | True           |                 | Forwardable          | True           |                 | Global               | False          |                 | Reserved-by-Protocol | False          |                 +----------------------+----------------+                        Table 24: Benchmarking                  +----------------------+---------------+                 | Attribute            | Value         |                 +----------------------+---------------+                 | Address Block        | 2001:db8::/32 |                 | Name                 | Documentation |                 | RFC                  | [RFC3849]     |                 | Allocation Date      | July 2004     |                 | Termination Date     | N/A           |                 | Source               | False         |                 | Destination          | False         |                 | Forwardable          | False         |                 | Global               | False         |                 | Reserved-by-Protocol | False         |                 +----------------------+---------------+                        Table 25: Documentation                   +----------------------+--------------+                  | Attribute            | Value        |                  +----------------------+--------------+                  | Address Block        | 2001:10::/28 |                  | Name                 | ORCHID       |                  | RFC                  | [RFC4843]    |                  | Allocation Date      | March 2007   |                  | Termination Date     | March 2014   |                  | Source               | False        |                  | Destination          | False        |                  | Forwardable          | False        |                  | Global               | False        |                  | Reserved-by-Protocol | False        |                  +----------------------+--------------+                           Table 26: ORCHID                  +----------------------+---------------+                 | Attribute            | Value         |                 +----------------------+---------------+                 | Address Block        | 2002::/16 [2] |                 | Name                 | 6to4          |                 | RFC                  | [RFC3056]     |                 | Allocation Date      | February 2001 |                 | Termination Date     | N/A           |                 | Source               | True          |                 | Destination          | True          |                 | Forwardable          | True          |                 | Global               | N/A [2]       |                 | Reserved-by-Protocol | False         |                 +----------------------+---------------+                    [2] See [RFC3056] for details.                            Table 27: 6to4                   +----------------------+--------------+                  | Attribute            | Value        |                  +----------------------+--------------+                  | Address Block        | fc00::/7     |                  | Name                 | Unique-Local |                  | RFC                  | [RFC4193]    |                  | Allocation Date      | October 2005 |                  | Termination Date     | N/A          |                  | Source               | True         |                  | Destination          | True         |                  | Forwardable          | True         |                  | Global               | False        |                  | Reserved-by-Protocol | False        |                  +----------------------+--------------+                        Table 28: Unique-Local              +----------------------+-----------------------+             | Attribute            | Value                 |             +----------------------+-----------------------+             | Address Block        | fe80::/10             |             | Name                 | Linked-Scoped Unicast |             | RFC                  | [RFC4291]             |             | Allocation Date      | February 2006         |             | Termination Date     | N/A                   |             | Source               | True                  |             | Destination          | True                  |             | Forwardable          | False                 |             | Global               | False                 |             | Reserved-by-Protocol | True                  |             +----------------------+-----------------------+                        Table 29: Linked-Scoped Unicast   This should be enough. There is also the option of filtering bogons but that feels a bit overkill unless you setup peering to Team Cymru or such. ", 
        "type": "2", 
        "id": "358", 
        "parentId": "356"
    }, 
    {
        "content": "It was decided recently to migrate a large campus network from the short mode STP costs (16-bit) to the long mode STP costs (32-bit).    I have clearly found it documented that this needs to be a \"universal\" configuration in that all switches need to support it and it needs to configured on all switches, however I have found very few discussions on how to migrate from short mode to long mode.  Most spanning tree costs in the campus network are dynamic, but there are some places where the costs were set manually.   When configuring long mode, would it be better to move from the root of spanning tree outwards to the edge or from the edge in towards the root? How will the current manual costs be affected and should these be adjusted before hand in some fashion? What issues should we be aware of before making this change? If there were a few switches that did not support long mode and were left in short mode, would this still work?  If so, should we be aware of?  ", 
        "type": "1", 
        "id": "359", 
        "parentId": -1
    }, 
    {
        "content": "At the point where the non-OSPF domain touches the OSPF domain I would setup static routes and then redistribute those static routes into OSPF.  This ofcourse is a very static (no pun intended) setup, there is always the other option of running another (supported) protocol down to the non-OSPF device and then redistribute between the two protocols.  Have you got a use case where you would want to be doing this? ", 
        "type": "2", 
        "id": "360", 
        "parentId": "355"
    }, 
    {
        "content": " I would run the change from root outwards but I don't think there are any use cases for doing it each way (someone correct me if I'm wrong). Manual costs will stay exactly the same so you should at some point convert these to fall in line with your new costs once you have changed over. Be aware of the fact that during topology changes or before you change over the manual metrics you may be running a sub-optimal L2 path between nodes. It is recommended that all your switches run the same cost type and reference bandwidth, although I can't see any fatal flaws in not having them all the same it again could give you an inconsistent / sub-optimal L2 path.  ", 
        "type": "2", 
        "id": "361", 
        "parentId": "359"
    }, 
    {
        "content": "How do people handle the need to add VLANs to all switches on their network (or even a subset of devices)? We are adding around 6 new VLANs per week at the moment and as the network grows this is becoming a very cumbersome and risky task. ", 
        "type": "1", 
        "id": "362", 
        "parentId": -1
    }, 
    {
        "content": "When connected to an Internet peering exchange(IXP), what is a good way to make sure that people don't send you prefixes that they shouldn't be announcing?  With regards to bogons I'm aware of the Team Cymru Bogon Reference project but when it comes to filtering anything else from peers I have no idea where to begin. My understanding is this is what RPKI and similar are for? ", 
        "type": "1", 
        "id": "363", 
        "parentId": -1
    }, 
    {
        "content": "In computer networking, peering is a voluntary interconnection of administratively separate Internet networks for the purpose of exchanging traffic between the customers of each network. The pure definition of peering is settlement-free or \"sender keeps all,\" meaning that neither party pays the other for the exchanged traffic; instead, each derives revenue from its own customers.  Peering requires physical interconnection of the networks, an exchange of routing information through the Border Gateway Protocol (BGP) routing protocol and is often accompanied by peering agreements of varying formality, from \"handshake\" to thick contracts. ", 
        "type": "5", 
        "id": "364", 
        "parentId": -1
    }, 
    {
        "content": "Peering is a voluntary interconnection of administratively separate Internet networks for the purpose of exchanging traffic between the customers of each network.", 
        "type": "4", 
        "id": "365", 
        "parentId": -1
    }, 
    {
        "content": "I would say you have a couple of options:   Manually. Takes most time. Safest? Depends on the one doing the config. Use some tool like Kiwi Cattools or Rancid etc. Much easier but you would need some kind of logic to check if VLAN is already existing or you could mess up the naming structure. Maybe not a huge deal? Script it! Use Perl, Python, Ruby or whatever language you have experience with. Takes some time to build it but once it done you could reuse script for other configuration tasks. It would be customizable but it depends on if you are comfortable coding. Use SNMP. Never tried this. Would require RW on the devices and I don't really like running RW on my network devices.  ", 
        "type": "2", 
        "id": "366", 
        "parentId": "362"
    }, 
    {
        "content": "See the IPv6 Fullbogons list at http://www.team-cymru.org/Services/Bogons/http.html  This is available through DNS, RADB, RIPE or BGP as well if you want to perform automatic filtering.   Here's an example of filtering automatically on Cisco:  router bgp <your asn>  ! Session 1  neighbor A.B.C.D remote-as 65332  neighbor A.B.C.D description <your description>  neighbor A.B.C.D ebgp-multihop 255  neighbor A.B.C.D password <your password>  ! Session 2  neighbor E.F.G.H remote-as 65332  neighbor E.F.G.H description <your description>  neighbor E.F.G.H ebgp-multihop 255  neighbor E.F.G.H password <your password> !  address-family ipv4   ! Session 1   neighbor A.B.C.D activate   neighbor A.B.C.D soft-reconfiguration inbound   neighbor A.B.C.D prefix-list cymru-out-v4 out   neighbor A.B.C.D route-map CYMRUBOGONS-V4 in   ! Session 2   neighbor E.F.G.H activate   neighbor E.F.G.H soft-reconfiguration inbound   neighbor E.F.G.H prefix-list cymru-out-v4 out   neighbor E.F.G.H route-map CYMRUBOGONS-V4 in !  address-family ipv6   ! Session 1   neighbor A.B.C.D activate   neighbor A.B.C.D soft-reconfiguration inbound   neighbor A.B.C.D prefix-list cymru-out-v6 out   neighbor A.B.C.D route-map CYMRUBOGONS-V6 in   ! Session 2   neighbor E.F.G.H activate   neighbor E.F.G.H soft-reconfiguration inbound   neighbor E.F.G.H prefix-list cymru-out-v6 out   neighbor E.F.G.H route-map CYMRUBOGONS-V6 in ! ! Depending on IOS version, you may need to configure your router ! for new-style community syntax. ip bgp-community new-format ! ip community-list 100 permit 65332:888 ! ip route 192.0.2.1 255.255.255.255 Null0 ! ip prefix-list cymru-out-v4 seq 5 deny 0.0.0.0/0 le 32 ! ipv6 route 2001:DB8:0:DEAD:BEEF::1/128 Null0 ! ipv6 prefix-list cymru-out-v6 seq 5 deny ::/0 le 128 ! route-map CYMRUBOGONS-V6 permit 10 description IPv6 Filter bogons learned from cymru.com bogon route-servers match community 100 set ipv6 next-hop 2001:DB8:0:DEAD:BEEF::1 ! route-map CYMRUBOGONS-V4 permit 10 description IPv4 Filter bogons learned from cymru.com bogon route-servers match community 100 set ip next-hop 192.0.2.1   And here's one for JunOS:  /* * Define BGP peer group */ delete protocols bgp group cymru-bogons set protocols bgp group cymru-bogons type external set protocols bgp group cymru-bogons description \"cymru fullbogon bgp feed (ipv4 + 6)\" set protocols bgp group cymru-bogons multihop ttl 255 set protocols bgp group cymru-bogons import cymru-bogons-in /* * Define MD5 password in quotes */ set protocols bgp group cymru-bogons authentication-key \"<YOUR PASSWORD>\" set protocols bgp group cymru-bogons export deny-all set protocols bgp group cymru-bogons peer-as 65332 /* * Replace values below as appropriate */ set protocols bgp group cymru-bogons neighbor A.B.C.D local-address <YOUR IP> set protocols bgp group cymru-bogons neighbor A.B.C.D family inet unicast set protocols bgp group cymru-bogons neighbor A.B.C.D family inet6 unicast set protocols bgp group cymru-bogons neighbor E.F.G.H local-address <YOUR IP> set protocols bgp group cymru-bogons neighbor E.F.G.H family inet unicast set protocols bgp group cymru-bogons neighbor E.F.G.H family inet6 unicast /* * Define CYMRU import policy */ delete policy-options policy-statement cymru-bogons-in set policy-options policy-statement cymru-bogons-in term 1 from family inet set policy-options policy-statement cymru-bogons-in term 1 from community comm-cymru-bogon set policy-options policy-statement cymru-bogons-in term 1 then community add no-export set policy-options policy-statement cymru-bogons-in term 1 then next-hop discard set policy-options policy-statement cymru-bogons-in term 1 then accept set policy-options policy-statement cymru-bogons-in term 2 from family inet6 set policy-options policy-statement cymru-bogons-in term 2 from community comm-cymru-bogon set policy-options policy-statement cymru-bogons-in term 2 then community add no-export set policy-options policy-statement cymru-bogons-in term 2 then next-hop discard set policy-options policy-statement cymru-bogons-in term 2 then accept set policy-options policy-statement cymru-bogons-in then reject /* * Define deny-all export policy */ delete policy-options policy-statement deny-all set policy-options policy-statement deny-all then reject /* * Define CYMRU Bogon community */ delete policy-options community comm-cymru-bogon set policy-options community comm-cymru-bogon members no-export set policy-options community comm-cymru-bogon members 65332:888 /* * Define internal no-export community */ delete policy-options community comm-no-export set policy-options community comm-no-export members no-export  ", 
        "type": "2", 
        "id": "367", 
        "parentId": "356"
    }, 
    {
        "content": "This can be done, see the page 15 of the Dell white paper on the subject here: http://www.dell.com/downloads/global/products/pwcnt/en/pwcnt_stacking_switches.pdf  Specifically it says:     Merging Two Operational Stacks      The recommended procedure for merging two operational stacks is as   follows:         Always power off all units in one stack before connecting to another stack.   Add the units as a group by unplugging one stacking cable in the operational stack and physically connecting all unpowered units.   Completely cable the stacking connections, making sure the redundant link is also in place.         Two operational stacks can also be merged by reconnecting stack cables   without powering down units in either stack. Connecting a powered up   standalone unit to an existing stack leads to same behavior as when   merging two operational stacks. In such cases, Manager reelection is   done and the Manager with the higher MAC address wins the election.   The losing stack manager resets itself and all its member units. After   the reset, all the losing stack members join the winning stack to form   a single stack. The winning stack remains functional through the merge   process. If the stack merge is performed in this way, then it is   strongly recommended that the user set the admin management preference   of the desired winner stack manager to a higher value than the stack   manager that should lose the election.   Also, in your above proposed cabling you are not completing a loop with your stacking cables. You should always aim to do this, even though it is not a requirement. See page 7 of the Dell m6220 stacking use case: http://i.dell.com/sites/content/business/solutions/whitepapers/zh/Documents/powerconnect-m6220-switch_cn.pdf     Cabling:       M6220 switches should be stacked together by connecting a   stacking cable from stack port xg2 of one switch to stack port xg1 of   the next sw itch. The stacking cable is included with the stacking   module. Stack port xg2 of the fi nal switch in the stack should be   connected to stack port xg1 of the first switch, completing the stack   loop. A loop topology is not strictly required for a stack but it is   recommended, as it is the most robust stacking topology and has seen   the most time in production use.  ", 
        "type": "2", 
        "id": "368", 
        "parentId": "283"
    }, 
    {
        "content": "You've basically answered your own question. Your assumption that using RPKI is the way to go is absolutely correct. More specifically Route Origination Authorizations are used to validate a prefix to an AS. Obviously bogons will not be valid because they're not assigned to anyone, so that problem will take care of itself. A lot of this information is available on the RPKI Wikipedia page. Another good resource is ARIN's RPKI page.  If you need configuration help I suggest you create another question asking for specific configuration help.  It's also worth noting that RPKI won't work for everything, because not everyone is using it. At some point you just have to trust the routes you're receiving. ", 
        "type": "2", 
        "id": "369", 
        "parentId": "363"
    }, 
    {
        "content": "At the moment (until RPKI is more widespread), we generally just filter common bogons and apply a max-prefix filter to exchange peers. We also filter certain ASNs, ones we are certain will never show up in most peering sessions, such as Level3 or Cogent, or should not be transited over an exchange.  We usually find that most of the common route leaks are not in the 1-2 digit range. That's very hard to catch anyway, unless you filter all your peers by building a prefix/ASN list or filter by radb, etc. Most leaks end up being closer to 10k-100k+, which is easily caught by a fairly low (100-500) max-prefix filter. You can then adjust that per-session as needed. ", 
        "type": "2", 
        "id": "370", 
        "parentId": "363"
    }, 
    {
        "content": "It could be that VTP is your answer.  Like any \"automated\" tool, it has it's risks, but you can mitigate them with proper planning.  You should also do some reading to make sure you understand how it works or you can inadvertently create your own problems (again, just like any automated tool).  I would recommend VTP version 3, as this can help protect from some of the potential problems and provides additional benefits.  You can easily find hundreds of documents by searching \"vtp version 3 configuration\" in your search engine of choice. ", 
        "type": "2", 
        "id": "371", 
        "parentId": "362"
    }, 
    {
        "content": "Configuration management software might be worth looking into -- Puppet's network device management can add vlans easily to numerous Cisco devices (if you're using Cisco). ", 
        "type": "2", 
        "id": "372", 
        "parentId": "362"
    }, 
    {
        "content": "Solarwind's Network Configuration Manager can run scripts in IOS devices and some others.   It also does things like nightly config backups, change reports and config audits. Their pricing isn't horrible but they're merging NCM with their Orion Network Performance Monitor and I'm not certain you can run NCM separately any more. ", 
        "type": "2", 
        "id": "373", 
        "parentId": "362"
    }, 
    {
        "content": "The best way to do this would be through redistribution. If the non-OSPF devices do support RIP or EIGRP you could create a neighborship with the OSPF device and non-OSPF device and redistribute the routes into OSPF - and the rest of your network. This is relatively safe if the non-OSPF device is single-homed. If dual-homed then you'll need to beware of the possibility of routing loops due to lost metric when redistributing.  If running a different IGP on the non-OSPF device is not an option then I'm afraid you'll have to use static routes - be it manually put in or automated with some sort of script. ", 
        "type": "2", 
        "id": "374", 
        "parentId": "355"
    }, 
    {
        "content": "I originally wan't going to post on here because this question is answered, but after seeing your other post about moving the static routes into your OSPF session I thought this might circumvent that problem.  In the ASA you can create a static route for your public address space (Let's say 134.0.15.0/30) and redistribute that route into OSPF. Assuming you have the proper config to establish an OSPF session on the \"Outside\" interface then it will advertise the static route north.  Note: This will also advertise the route to any peers on the \"Inside\" interface as well. This shouldn't be an issue other than you'll see it in the device's routing tables. ", 
        "type": "2", 
        "id": "375", 
        "parentId": "37"
    }, 
    {
        "content": "Depending on how you're using the peering exchange, you've got a few different options:  Firstly I'll cover RPKI and say that whilst it's something you should definitely go ahead and deploy, both for your own routes and validating others, it's unfortunately in such low use that you cannot at this point expect it to do all that much. The real solution here is WHOIS - Merit's RaDB is arguably the best since it'll allow you to return results for all RIRs at once. But, if you prefer to query each RIR directly, go for it.  Now, if you're on the exchange and you're just getting a pile of prefixes from the IXP's route server, depending on the tools you've got available to you and the capabilities of your router, you have two possibilities:     1. Filter by origin AS  Essentially, this consists of validating the origin AS of a prefix against the one in WHOIS - if the origin AS isn't matching the one in WHOIS, you drop the prefix and any more-specifics that might also be announced. This is generally a good protection against unintentional hijacks. The vast majority of prefixes should have this data.     2. Filter by transit AS  This takes it a step further and filters routes with any AS in the path that isn't authorised within WHOIS - you can't do this for every prefix however, since not everybody will have created objects specifying who their authorised transit AS providers are.    On the other hand, if you're using the peering exchange to directly peer with others, then your life gets a whole lot simpler; you can lookup what prefixes they have in WHOIS and permit those. Good practice in my opinion is to permit peers to announce more-specifics up to a max length of /24 whilst also setting a sensible maximum-prefix value (i.e. proportional to the number of subnets they have) on your peering so that they can't flood you with routes but can respond to a prefix hijack.  If you're looking for tools, check out IRRToolSet and IRR PowerTools ", 
        "type": "2", 
        "id": "376", 
        "parentId": "363"
    }, 
    {
        "content": "If you are planning to implement multiple links in the same GDOI group on the GMs, best practice would be to use a loopback interface as the crypto source.  The reason being that otherwise the key servers will see each interface as a separate entry and the router will receive multiple rekeys.  Your second sample config looks good.  See section 4.1.2.1.3 of the GETVPN DIG:  http://www.cisco.com/en/US/prod/collateral/vpndevc/ps6525/ps9370/ps7180/GETVPN_DIG_version_1_0_External.pdf ", 
        "type": "2", 
        "id": "377", 
        "parentId": "303"
    }, 
    {
        "content": "That should be caught by the default dos-protection-group. No? Do you have, perhaps, 'unset ike dos-protection' ?  What does 'show suspicious-control-flow-detection ike' show? ", 
        "type": "2", 
        "id": "378", 
        "parentId": "342"
    }, 
    {
        "content": "You could try terminating the VPN tunnels on the IP address of a loopback interface, and creating a policy rule to specify what sources are (not) allowed to contact this VPN endpoint. If the loopback interface is in the same zone as the interface receiving the traffic, enable \"block intra-zone traffic\" for this zone and specify a rule to permit your VPNs. ", 
        "type": "2", 
        "id": "379", 
        "parentId": "342"
    }, 
    {
        "content": "OSPF over metroE works fine but you will need to make sure it fits your needs and you architect accordingly. One caveat I haven't seen mentioned is to make sure you know what MTU your provider supports. I have seen an MTU drop on a metroE link during a provider maintenance cause the OSPF neighbor to not come up. Probably only a problem because they don't really support jumbo frames but they did just for us:) Being nice sometimes doesn't pay off. ", 
        "type": "2", 
        "id": "380", 
        "parentId": "54"
    }, 
    {
        "content": "Here is a really basic script template in Perl for telneting into a list of devices (one on each line in a file called devicelist.txt) and configuring some commands.  Depending on exactly what you are doing it should provide a good start.    use Net::Telnet::Cisco;      # read in a list of devices     my @devicelist;     open(DATA, \"<devicelist.txt\") || die \"Can't open file!\";     while (<DATA>) {             chomp;             push( @devicelist, $_);     }      # loop through the devices     foreach $hostname (@devicelist)     {             # telnet to device             my $cs = Net::Telnet::Cisco->new(Host => $hostname);              # login, go enable, disable paging, go into config mode             $cs->login( \"username\", \"password\" );             $cs->enable( \"enable_password\" );             $cs->cmd( 'terminal length 0' );             $cs->cmd( 'config t' );              # configure the device             $cs->cmd( 'vlan 100, 200, 300' );             $cs->cmd( 'interface Ethernet0' );             $cs->cmd( ' switchport access vlan 100' );              # exit config mode and write the config             $cs->cmd( 'end' );             $cs->cmd( 'wr mem' );              # close the connection             $cs->close;     }   Here are some more details on Net::Telnet::Cisco as well. ", 
        "type": "2", 
        "id": "381", 
        "parentId": "362"
    }, 
    {
        "content": "At the RIPE conference the was a talk about how MAC addresses starting with a 4or 6 may suffer from decreased performance because MPLS routers misinterpret the Ethernet packets as an IPv4/6 packet when load balancing over multiple links.  Presentation is here  One workaround would be to insert additional fields to prevent misinterpretation of the packets. Control words do the trick. Now, I know that control words are enabled on l2vpn connections on juniper by default, but I can't find any information regarding VPLS.  Does anyone know if control words are sent when using VPLS on juniper by default or if we can enable them? ", 
        "type": "1", 
        "id": "382", 
        "parentId": -1
    }, 
    {
        "content": "The challenge you now face is that you are going into a mixed environment.  You mention you are moving towards Juniper from I assume Cisco?  In a pure Cisco environment VTP v3 with passwords would be the way to go and supports over 4k vlans.  In the Juniper world the equivalent would be GVRP.  You may be able to use some form of centralized management such as Puppet as was mentioned by Shane Madden, SolarWinds, HP OpenView and such but you will still have two scripts to manage.  I would try to keep things as simple as possible (KISS) for now as you transition from one vendor to another.  Using VTP and GVRP on the appropriate hardware is probably the way to go and doesn't add the potential cost for other solutions or complexity of managing another new thing. ", 
        "type": "2", 
        "id": "383", 
        "parentId": "362"
    }, 
    {
        "content": "As the others stated, RPKI would be the way to go, but it's not there yet. At exchange points we generally put a max-prefix limit on every session.  Additionally we use the following rules:   No default route No bogons, more exactly this list:  route-filter 0.0.0.0/8 orlonger reject; route-filter 127.0.0.0/8 orlonger reject; route-filter 10.0.0.0/8 orlonger reject; route-filter 172.16.0.0/12 orlonger reject; route-filter 192.168.0.0/16 orlonger reject; route-filter 224.0.0.0/4 orlonger reject; route-filter 240.0.0.0/4 orlonger reject; route-filter 169.254.0.0/16 orlonger reject; route-filter 192.0.2.0/24 orlonger reject; route-filter 198.51.100.0/24 orlonger reject; route-filter 203.0.113.0/24 orlonger reject; route-filter 100.64.0.0/10 orlonger reject;  No prefixes longer than /24 No private AS numbers in the path None of our own prefixes   For IPv6 we do the same, only the bogons are different. I pasted our filter below this. Please be aware that the syntax might be a bit odd but that is due to the Juniper way of matching prefixes. For Cisco syntax you can go here: IPv6 BGP filter recommendations (The Juniper example on the page is buggy, please use the one below if you want.)   term ebgp-relaxed {     from {         family inet6;         route-filter 3ffe::/16 orlonger;         route-filter 0000::/8 orlonger;         route-filter 2001:db8::/32 orlonger;         route-filter 2001::/32 exact next policy;         route-filter 2001::/32 longer;         route-filter 2002::/16 exact next policy;         route-filter 2002::/16 longer;         route-filter fe00::/9 orlonger;         route-filter ff00::/8 orlonger;         route-filter 2000::/3 prefix-length-range /49-/128;         route-filter 0::/0 orlonger;     }     then reject; }  ", 
        "type": "2", 
        "id": "384", 
        "parentId": "363"
    }, 
    {
        "content": "I have read many data sheets on the Nexus 7000 series and it's cards purporting to be capable of OIR (Online Insertion and Removal).  However I have never needed to replace/reseat/add any Nexus line cards since I walked into this Nexus deployment two years ago.  (Several power supplies and a fan tray, but no line cards.)  Is replacing (or adding) a line card truly impact-free on the other line cards/traffic that is currently in production?  To test, I have scheduled a downtime for testing to involve replacing one of the line cards and one of the supervisors.  However I was wondering if any of you could give me a heads up on what to expect. ", 
        "type": "1", 
        "id": "385", 
        "parentId": -1
    }, 
    {
        "content": "I have been evaluating converged storage/data networking for some time. It seems that the design pitched by vendors is a bridging of the Fiber Channel (FC) and Ethernet domains. I always come away questioning if this is just some interim step towards a pure FCoE storage networking environment. Some vendors are pushing towards end-to-end FCoE, but it seems that there may be scalability concerns. I find it difficult to take any step toward FCoE while there is an existing investment in FC. It probably makes more sense for a greenfield deployment.  Is end-to-end FCoE still in its infancy? If so, does it make sense to wait for it to mature and jump straight to a pure FCoE storage environment? ", 
        "type": "1", 
        "id": "386", 
        "parentId": -1
    }, 
    {
        "content": "\"Yes, it's completely impact-free.*  *Your experience may vary.\"  That's the impression I get from Cisco and the Nexus platform in general. As a general rule, I always try to secure a maintenance window for work on critical infrastructure as a CYA measure. Even if it works flawlessly 99% of the time, there's still that 1% that it won't, and \"But Cisco told us it would be fine\" does little to placate angry customers. ", 
        "type": "2", 
        "id": "387", 
        "parentId": "385"
    }, 
    {
        "content": "", 
        "type": "5", 
        "id": "388", 
        "parentId": -1
    }, 
    {
        "content": "For WiFi or 802.11 questions, please use the [ieee-802.11] tag. For questions about wireless networking, including any licensed or unlicensed RF medium used to provide point-to-point or point-to-multipoint network links.", 
        "type": "4", 
        "id": "389", 
        "parentId": -1
    }, 
    {
        "content": "I'm attempting to set up client / server sockets in Cisco EEM 3.0 TCL with IOS version 12.4(24)T8 (this was recently upgraded to determine whether the problem was EEM ver).  I have the following two example Tcl scripts (ref: http://wiki.tcl.tk/15315 )  Server.tcl:  ::cisco::eem::event_register_none maxrun 120  namespace import ::cisco::eem::* namespace import ::cisco::lib::*  proc accept {chan addr port} {     puts \"$addr:$port says [gets $chan]\"     puts $chan goodbye     close $chan } socket -server accept 12345 vwait forever   Client.tcl:  ::cisco::eem::event_register_none maxrun 20  namespace import ::cisco::eem::* namespace import ::cisco::lib::*  set chan [socket 10.0.0.2 12345] puts $chan hello flush $chan puts \"10.0.0.2:12345 says [gets $chan]\" close $chan   10.0.0.2 is assigned to a loopback.  When I show the listening ports via the \"show control-plane host open-ports\" command, the server port of 12345 is listening, but the client script does not produce any output. A telnet to the router (via a physical interface) to port 12345 results in a connection refused. No ACLs are enabled.  These scripts work from a Windows XP computer running ActiveTCL 8.5.  Is this a bug or security feature within EEM 3.0? Are any additional commands or settings required to enable TCP sockets within EEM 3.0? ", 
        "type": "1", 
        "id": "390", 
        "parentId": -1
    }, 
    {
        "content": "I think it's mature enough for production use. However, it's not an all-or-nothing thing. Right now the only major FCoE (multi-hop) vendor is Cisco. They're pitching a Fibre Channel fabric where it doesn't matter if the ports are FC or FCoE. Some ports might be 8 Gbit FC, others might be 10 Gbit Ethernet running FCoE.   You can have an FC-connected storage array, connected to a Nexus 5K, using a Nexus 7K as your core (or MDS with FCoE cards), aggregating down to another 5K, to a UCS B-Series connected via FCoE.   Brocade is a native FC shop, and they've been pushing 16 Gbit FC for I think 2 years. Cisco just announced a 16 Gbit FC switch, so they're a little later to the 16 Gbit game, though they've been pushing 10 Gbit Ethernet FCoE for about as long.   Also, 10 Gbit Ethernet is about 1250 MBytes of raw throughput, where 16 Gbit FC is 1600 Mbyte/s of raw throughput, because of the way FC was designed.  ", 
        "type": "2", 
        "id": "391", 
        "parentId": "386"
    }, 
    {
        "content": "If you have a Cisco device use a combination of NBAR and QoS.  NBAR will help classify traffic based on your custom requirements. You can create custom NBAR PDLMs for the protocol/application you need to track. The command is: ip nbar custom name [offset [format value]] [variable field-name field-length] [source | destination] [tcp | udp ] [range start end | port-number ]  Once this is done create a QoS class for the custom NBAR app and then apply your policies. ", 
        "type": "2", 
        "id": "392", 
        "parentId": "3"
    }, 
    {
        "content": "Unfortunately, no, you can't. Specifically because FCoE requires lossless Ethernet, which can't be done on a Catalyst 5500. PFC works on physical ports, but the switch itself needs to have internal VOQs in order to not lose frames from port to port internally. You can do old-timey flow control on a 5500 which will keep physical ports from overflowing each others buffers, but it won't guarantee losslessness on internal ports.   Also, the switch wouldn't support FIP, which is the control plane for FCoE.  ", 
        "type": "2", 
        "id": "393", 
        "parentId": "243"
    }, 
    {
        "content": "Thousands of entries over how much time?  The \"unrecognized peer gateway\" means that sure, someone could be up to no good, but more likely it's that you have a manual gateway entry on your end that's wrong, or a VPN entry tied to the wrong interface, or it could very well be that someone randomly typed in your address for no reason than an accident happens sometimes.  You're getting an IKE packet that looks malformed. This should not overload a firewall. Not by a long shot. However, back to question #1, how many entries over how much time -- and where from? ", 
        "type": "2", 
        "id": "394", 
        "parentId": "342"
    }, 
    {
        "content": "Given that spanning tree has failed (or you don't have any spanning tree) and get an ethernet loop, what's the best way to diagnose where the problem is?  Which switch?, which cable? and so on. ", 
        "type": "1", 
        "id": "395", 
        "parentId": -1
    }, 
    {
        "content": "Ouch. But ok, I can think of two ways I'd go at this...  Eyeball it: If the switches have port indicators, you should be able to eyeball which ports are the most active. Those are the ones to start looking at first. Hopefully the cables are labeled so you can search for the low hanging fruit of finding two busy ports, on two switches with the same cable.  SNMP monitoring: If you've got SNMP (or similar) usage stats, look for the busiest switch and the busiest ports. Then go looking at cables.  ...if you have unlabeled cables, start tracing and labeling as part of your checking out the busiest ports. ", 
        "type": "2", 
        "id": "396", 
        "parentId": "395"
    }, 
    {
        "content": "In my experience it's always been the cable that I just plugged in, or no shut, or added to the port-channel.  Tougher is when someone else did it and doesn't immediately fess up. ", 
        "type": "2", 
        "id": "397", 
        "parentId": "395"
    }, 
    {
        "content": "To be honest, if you remotely connected (or via console cable) onto the device, you'd notice its very sluggish, there will be a delay from when you type to the letters coming up on the CLI.  If its a Cisco switch, 2 easy ones are to look at the interface statistics, it'll be on 100% (or 255/255) usage, constantly. In my years of dealing with switches, I've yet to see a port legitimatly hit 100% usage. Other than that, check the CPU usage (usually \"show process cpu history\"), looped interfaces will usually hit your CPU pretty hard unless you're running a high end switch.  STP should really be enabled though! ", 
        "type": "2", 
        "id": "398", 
        "parentId": "395"
    }, 
    {
        "content": "OK, so assume you have a topology like:            SW1          /   \\         /     \\        /       \\ PC A--SW2-----SW3--PC B   For some reason there is a bridging loop, STP is disabled or someone applied a filter in the wrong place or such.  PC A wants to communicate with PC B. It first ARPs for the MAC of PC B, the destination is a broadcast with MAC ffff.ffff.ffff. So the frame goes to both SW1 and SW3. The SRC MAC is PC A. SW1 then floods the frame towards SW3 and SW3 will flood the frame coming from SW2 to SW1.  SW1 and SW3 learned the MAC of PC A when the first frame came in. When the second one comes in from the opposite direction it has to relearn it. Because these events occur so fast and repeatedly you will see log messages complaining about MAC flapping. Something like \"MAC FLAP 0000.0000.0001 is flapping between Gi0/24 and Gi0/23\". This is a good sign that you have a loop.  What you could do then is to try to trace this MAC. Try looking in the ARP cache of a device in the same subnet and see what IP this device has. So with the MAC you could try to trace it with sh mac-address-table or with the IP maybe you have a list with all IPs and where they are connected.  If the host gets a IP address from a DHCP server you could also try there to find where the host is coming from. If you have option 82 enabled that would be a great help.  Other signs are that the CLI will be very sluggish. CPU load will be very high. Switches do almost everything in ASICs so if a switch has a CPU load over 50% it's probably not good. You should implement SNMP monitoring and watch for high CPU load. Also look for the MAC flap messages. If the switches have a loop the LEDs will probably be blinking like crazy.  Things you could do to protect against loops:   Enable STP! (duh) SNMP monitoring of CPU load Enable SNMP traps for certain events like STP topology changes Enable storm control on the ports to limit broadcast Don't span your VLANs too much in your L2 topology Enable port security and limit number of MAC addresses per port Enable Option82 if you run DHCP  ", 
        "type": "2", 
        "id": "399", 
        "parentId": "395"
    }, 
    {
        "content": "I've encountered a problem on a cisco ws-c3750x-48ts-s where jumbo-frames won't cross a trunk-connection between a vwmare esx-host and the switch.  The access ports in the same vlan don't experience any problems.    I suspect that the problem lies with the mtu for the SVI for that vlan since it's derived from the system mtu value and not the system-mtu jumbo command :  *<hostname>*#show vlan mtu  VLAN    SVI_MTU    MinMTU(port)      MaxMTU(port)     MTU_Mismatch ---- ------------- ----------------  ---------------  ------------ 1    1500          9198              9198              No 10   1500          9198              9198              No 20   1500          9198              9198              No 30   1500          9198              9198              No 31   1500          9198              9198              No 150  1500          9198              9198              No 151  1500          9198              9198              No 200  1500          9198              9198              No 250  1500          9198              9198              No 255  1500          9198              9198              No 444  1500          9198              9198              No  *<hostname>*#show interfaces vlan 150 Vlan150 is up, line protocol is up   Hardware is EtherSVI, address is c89c.1d49.b245 (bia c89c.1d49.b245)   Description: iSCSI   Internet address is 10.150.7.254/21   MTU 1500 bytes, BW 1000000 Kbit, DLY 10 usec,      reliability 255/255, txload 1/255, rxload 1/255   Is there a way to increase the SVI MTU to 9198, since system mtu has a max-value of 1998? ", 
        "type": "1", 
        "id": "400", 
        "parentId": -1
    }, 
    {
        "content": "for IOS:  You will probably have MAC addresses flapping between ports.. look for MAC_MOVE_NOTIFICATION (or similar) errors in:  sh logg   Now to find the port:  sh int g0/1 controller   look for out of ordinary Multicast and Broadcast numbers. Any collisions are a bad sign.  Last but not least, you can't log in, because the CPU is pwned :)  sh proc cpu   How is the switch doing here? If it's an L2 switch only, you don't want anything above ~10% ", 
        "type": "2", 
        "id": "401", 
        "parentId": "395"
    }, 
    {
        "content": "One of my users recently borrowed a desktop switch from someone's desk. Upon returning the switch, they plugged in all of the loose ethernet ends that were nearby. One of those cables went to the network and another was two ends of the same cable. The desktop switch was plugged into the network and also plugged into itself. The switch had no STP, so broadcasts that came in from the network would loop on the other cable in both directions. Of course, each time a broadcast was received on the looped ports it gets replicated back into the network. It drove HSRP absolutely mad and--due to poor design--it also resulted in OSPF adjacency failures across the campus.  The first indication of the problem was a macflap forwarded to my email. This immediately led us to the correct wiring closet. From there, it was a process of elimination based on port LEDs, interface pps and logs. Needless to say, I have since rearchitected the entire campus. The best preventative measure is probably bpduguard. I have since deployed the feature and it was quite simple. Getting that errdisable syslog in my email is nothing short of bliss. ", 
        "type": "2", 
        "id": "402", 
        "parentId": "395"
    }, 
    {
        "content": "From the configuration guide:     Frames sizes that can be received by the switch CPU are limited to 1998 bytes, no matter what value was entered with the system mtu or system mtu jumbo commands. Although frames that are forwarded or routed are typically not received by the CPU, in some cases packets are sent to the CPU, such as traffic sent to control traffic, SNMP, Telnet, or routing protocols.   But if it's received over a trunk it shouldn't be routed in the first place and even if it was the jumbo MTU should still apply.     Routed packets are subjected to MTU checks on the output ports. The MTU value used for routed ports is derived from the applied system mtu value (not the system mtu jumbo value). That is, the routed MTU is never greater than the system MTU for any VLAN. The routing protocols use the system MTU value when negotiating adjacencies and the MTU of the link. For example, the Open Shortest Path First (OSPF) protocol uses this MTU value before setting up an adjacency with a peer router. To view the MTU value for routed packets for a specific VLAN, use the show platform port-asic mvid privileged EXEC command.   Can you try this command:  show platform port-asic mvid   So it seems 1998 is max on SVI. ", 
        "type": "2", 
        "id": "403", 
        "parentId": "400"
    }, 
    {
        "content": "With most equipment, the CPU shoots to 100% and the only thing you can do is break the redundant physical connections.  Once the CPU calms down you can plug the links back in one by one and see which one re-causes the loop.  For big chassis (like a 6500) I've had to pull out all of the blades and plug them back in one at a time.  Once I figured out which blade, then I had to pull all of the individual links (16 GBICs) and put them back in one at a time as well.  Never fun.  Some more modern equipment has a protected CPU which should make this easier to deal with - you can still interact with the box.  At that point looking at traffic counters and such to determine the malfunctioning link becomes possible. ", 
        "type": "2", 
        "id": "404", 
        "parentId": "395"
    }, 
    {
        "content": "I don't know for sure, but  set routing-instances red instance-type vpls protocols vpls control-word  commits for me on 12.3R2.5  and this is mentioned here:     On MX Series routers with the Channelized OC3/STM1 (Multi-Rate)   Circuit Emulation MIC with SFP, Junos OS substantially supports RFC   4385, Pseudowire Emulation Edge-to-Edge (PWE3) Control Word for Use   over an MPLS PSN  ", 
        "type": "2", 
        "id": "405", 
        "parentId": "382"
    }, 
    {
        "content": "I recently started at a company where they use broadcast limits on each port.  If a port passes >5% of it's capacity as broadcasts the switch puts it into ERRDISABLE.   storm-control broadcast level 5.00    storm-control action shutdown   This has been a life saver when one group tends to plug in devices that bridge the wireless networks onto the LAN.  Though for your actual question, I've always found it to be manual. ", 
        "type": "2", 
        "id": "407", 
        "parentId": "395"
    }, 
    {
        "content": "I would start with debugging commands. I'd start with  debug event manager tcl cli  There's more information in the EEM best practices document over at https://supportforums.cisco.com/docs/DOC-12757 about debugging and troubleshooting. ", 
        "type": "2", 
        "id": "408", 
        "parentId": "390"
    }, 
    {
        "content": "Determining a loop really depends on the brand of switch that you have. For example, on an Extreme switch, I can run elrp-client on a VLAN and the switch will basically send out a broadcast frame on all ports for that VLAN and see if it returns by any of them, if so, it tells me which port(s) the frame was received back on, thereby revealing the loop candidates.  On a Cisco, you can enable storm control, which is a bit more of a blunt instrument since it will basically block the port for a period of time until the status clears (or you clear the errdisable state) - generally speaking however, this sort of thing is only relevant when you're using Cisco switches in a mixed topology of devices that do not do spanning tree nor forward BPDUs. ", 
        "type": "2", 
        "id": "409", 
        "parentId": "395"
    }, 
    {
        "content": "I have a 1260 AP that I upgraded this morning.  Prior to the upgrade, the system permitted ssh and would respond to pings on the network, however now it does not respond.  I hooked up a serial cable and surfing around the config I can't seem to find anything amiss, and turning on ssh debugging is not producing any output.  I tried regenerating the RSA key in the off chance that was causing ssh to not come online, however it has not affected the inability to contact the unit over the network.  I also tried turning on \"ip routing\" and \"ip cef\" thinking they might be the issue, but no effect.  I also added a static default route out to our management gateway in hopes that perhaps it was a default route issue but it also did not help  Here's the current version of IOS on the unit:  Cisco IOS Software, C1260 Software (AP3G1-K9W7-M), Version 15.2(2)JB, RELEASE SOFTWARE (fc1) Technical Support: http://www.cisco.com/techsupport Copyright (c) 1986-2012 by Cisco Systems, Inc. Compiled Mon 10-Dec-12 23:42 by prod_rel_team  ROM: Bootstrap program is C1260 boot loader BOOTLDR: C1260 Boot Loader (AP3G1-BOOT-M), Version 12.4 [mpleso-ap_jmr3_esc_0514 125]   Here's the current running config:  DEN-AP01#sh run full Building configuration...  Current configuration : 3535 bytes ! ! Last configuration change at 00:22:30 UTC Mon Mar 1 1993 by gbeech version 15.2 no service pad service timestamps debug datetime msec service timestamps log datetime msec service password-encryption ! hostname DEN-AP01 ! ! logging rate-limit console 9 logging console warnings enable secret 5 redacted ! no aaa new-model ip cef ip domain name ds.stackexchange.com ! ! ! dot11 syslog dot11 vlan-name DEN-CLIENTS vlan 20 dot11 vlan-name DEN-MGMT vlan 10 dot11 vlan-name DEN-WIRELESS vlan 50 ! dot11 ssid StackGuest    vlan 50    authentication open    authentication key-management wpa version 2    mbssid guest-mode    wpa-psk ascii 7 redacted ! ! dot11 network-map crypto pki token default removal timeout 0 ! ! ! ! bridge irb ! ! ! interface Dot11Radio0  no ip address  no ip route-cache  !  encryption mode ciphers tkip  !  encryption vlan 50 mode ciphers aes-ccm tkip  !  ssid StackGuest  !  antenna gain 0  mbssid  speed  basic-1.0 basic-2.0 basic-5.5 basic-11.0 basic-6.0 basic-9.0 basic-12.0 basic-18.0 basic-24.0 basic-36.0 basic-48.0 basic-54.0  channel 2427  station-role root  bridge-group 1  bridge-group 1 subscriber-loop-control  bridge-group 1 spanning-disabled  bridge-group 1 block-unknown-source  no bridge-group 1 source-learning  no bridge-group 1 unicast-flooding ! interface Dot11Radio0.50  encapsulation dot1Q 50  no ip route-cache  bridge-group 50  bridge-group 50 subscriber-loop-control  bridge-group 50 spanning-disabled  bridge-group 50 block-unknown-source  no bridge-group 50 source-learning  no bridge-group 50 unicast-flooding ! interface Dot11Radio1  no ip address  no ip route-cache  !  encryption vlan 50 mode ciphers tkip  !  encryption mode ciphers tkip  !  ssid StackGuest  !  antenna gain 0  dfs band 3 block  mbssid  channel dfs  station-role root  bridge-group 1  bridge-group 1 subscriber-loop-control  bridge-group 1 spanning-disabled  bridge-group 1 block-unknown-source  no bridge-group 1 source-learning  no bridge-group 1 unicast-flooding ! interface Dot11Radio1.50  encapsulation dot1Q 50  no ip route-cache  bridge-group 50  bridge-group 50 subscriber-loop-control  bridge-group 50 spanning-disabled  bridge-group 50 block-unknown-source  no bridge-group 50 source-learning  no bridge-group 50 unicast-flooding ! interface GigabitEthernet0  no ip address  no ip route-cache  duplex auto  speed auto  no keepalive  bridge-group 20  bridge-group 20 spanning-disabled  no bridge-group 20 source-learning ! interface GigabitEthernet0.10  encapsulation dot1Q 10  no ip route-cache  bridge-group 1  bridge-group 1 spanning-disabled  no bridge-group 1 source-learning ! interface GigabitEthernet0.50  encapsulation dot1Q 50  no ip route-cache  bridge-group 50  bridge-group 50 spanning-disabled  no bridge-group 50 source-learning ! interface BVI1  ip address 10.15.0.6 255.255.255.0  no ip route-cache ! interface BVI50  no ip address  no ip route-cache ! ip default-gateway 10.15.0.1 ip forward-protocol nd ip http server no ip http secure-server ip http help-path http://www.cisco.com/warp/public/779/smbiz/prodconfig/help/eag ip route 0.0.0.0 0.0.0.0 10.15.0.1 ! access-list 111 permit tcp any any neq telnet bridge 1 route ip ! ! ! line con 0  access-class 111 in line vty 0 4  login local  transport input ssh line vty 5 15  login local  transport input ssh ! end   Any suggestions would be appreciated, I'm pretty stumped as to why this would suddenly go wrong.  EDIT: Here's the recreating of crypto keys output.  DEN-AP01(config)#crypto key generate rsa modulus 1024 % You already have RSA keys defined named DEN-AP01.ds.stackexchange.com. % They will be replaced.  % The key modulus size is 1024 bits % Generating 1024 bit RSA keys, keys will be non-exportable... [OK] (elapsed time was 1 seconds)  DEN-AP01(config)# *Mar  1 01:02:01.411: %SSH-5-DISABLED: SSH 1.99 has been disabled *Mar  1 01:02:02.515: %SSH-5-ENABLED: SSH 1.99 has been enabled   ", 
        "type": "1", 
        "id": "410", 
        "parentId": -1
    }, 
    {
        "content": "Your configuration above doesn't show a crypto key configuration. There should be something like:  crypto pki certificate chain TP-self-signed-1306837737     certificate self-signed 01     3082022B 30820194     ((snip snip :))     quit   I would try re-running the crypto key generate rsa command. ", 
        "type": "2", 
        "id": "411", 
        "parentId": "410"
    }, 
    {
        "content": "I've been looking at a hardware network tap like this one to replace a pseudo-permanent SPAN that's been running on a Catalyst switch. All the taps I find have four interfaces: A, B, and two output ports (one for each direction). Ideally I would prefer to funnel the traffic from both directions into one cable so I only have to capture from one interface. Why do taps always seem to have two output ports? ", 
        "type": "1", 
        "id": "412", 
        "parentId": -1
    }, 
    {
        "content": "Hardware network taps provide one output port in each direction to ensure that traffic can be replicated at line rate. For example, a 100 Mbps Ethernet connection provides a theoretical maximum of 200 Mbps of total bandwidth; 100 Mbps in each way. If you tried to capture traffic from a line which was carrying 75 Mbps in each direction, you would need at least 150 Mbps of one-way bandwidth: more than a single 100 Mbps connection can carry. Hence, taps include two output ports operating at the same speed as the line being monitored. ", 
        "type": "2", 
        "id": "413", 
        "parentId": "412"
    }, 
    {
        "content": "I have an scenario where a Fortigate firewall is used to separate internal networks from the Internet (FortiOS Version 4.0 MR3 patch 11). Right now there is a single Internet connection attached to the firewall and a default static route is used to get all Internet traffic through it. I would like to attach a second Internet connection to the firewall and then route only certain traffic through it, for example web browsing traffic.   For this setup, I keep the current static default route through the first link and then configure policy routing options in order to route traffic with destination port TCP/80 and TCP/443 through the second Internet link. As expected, policy routing is evaluated before routing table and all traffic destined to TCP/80 and TCP/443 is sent through to second link, including traffic between subnets directly connected to the Fortigate, what breaks communication between them.   In a Cisco environment I would adjust the ACL used to match traffic for policy routing, denying traffic between internal networks at the beginning of the ACL and adding a \"permit any\" statement at the end. However, I can not find the way to instruct the Fortigate to work in a similar manner.   Do you know how to make this scenario working with Fortigate?  ", 
        "type": "1", 
        "id": "415", 
        "parentId": -1
    }, 
    {
        "content": "I will be performing NAT on the outside interface of an ASA to a web server within a DMZ. I would like to disable proxy-arp on all the interfaces that I can. I know that outside interface will need to have proxy-arp enabled because of the NAT statement. Do I need to have proxy-arp enabled on the DMZ interface as well?   ", 
        "type": "1", 
        "id": "416", 
        "parentId": -1
    }, 
    {
        "content": "You don't need proxy arp on the DMZ LAN. The web system will answer ARP for itself on that LAN.  ", 
        "type": "2", 
        "id": "417", 
        "parentId": "416"
    }, 
    {
        "content": "Like Jeremy said, you're only able to tap at line speed in one direction because normal connections are full duplex; you're only receiving. An added benefit/side effect/reason for doing so is to ensure that you don't put any packets back out on the wire (for passive taps). ", 
        "type": "2", 
        "id": "418", 
        "parentId": "412"
    }, 
    {
        "content": "Short answer, no.  Long answer, no and..  Basically the netscreens will listen for any IKE packets coming to the device and attempt to process them. While it's a vector for attacks I haven't seen juniper change this behavior.   Short of filling up your event log it shouldn't do much assuming it's a single source attempting to stand up a VPN tunnel to you. If you think it's impacting your performance you can check 'get cpu perf all detail\" and see the task/flow CPU usage.  ", 
        "type": "2", 
        "id": "419", 
        "parentId": "342"
    }, 
    {
        "content": "As a temp work around you could always disable tcp-syn-checking with will allow the traffic to return if it matches security policy but does not have a proper 3 way set up already complete. Basically it will allow a data packet to create a session.  This is less secure and not ideal, but in the short term til you get your stuff fixed it maybe a viable work around.   Additional info: http://www.juniper.net/techpubs/software/junos-security/junos-security10.2/junos-security-swconfig-security/topic-44055.html  http://kb.juniper.net/InfoCenter/index?page=content&id=KB21266 ", 
        "type": "2", 
        "id": "420", 
        "parentId": "233"
    }, 
    {
        "content": "Ask your peers what AS macro they will be announcing and build filters for them using IRRToolSet or rpsltool or irrpt.  Encourage them to have correct information published in an IRRdb.  Don't forget to update your own aut-num object in your nearest friendly IRRdb to reflect the adjacency.  RPKI is not the way forward as it does not protect against route leaks. ", 
        "type": "2", 
        "id": "422", 
        "parentId": "363"
    }, 
    {
        "content": "Virtual LANs (VLANs) are used to divide what otherwise would be a single OSI layer-2 broadcast domain into multiple, logical OSI layer-2 broadcast domains.  VLANs are like any OSI layer-2 broadcast domain:   VLANs are not necessarily tied to a single physical device. VLANs are bounded by OSI layer-3. Traffic from one VLAN to another VLAN must be routed at OSI layer-3.  ", 
        "type": "5", 
        "id": "423", 
        "parentId": -1
    }, 
    {
        "content": "For questions about Virtual LANs (VLANs) which are used to divide what otherwise would be a single OSI layer-2 broadcast domain into multiple, logical OSI layer-2 broadcast domains.", 
        "type": "4", 
        "id": "424", 
        "parentId": -1
    }, 
    {
        "content": "Try system mtu routing. See the link for caveats that may apply to your situation. ", 
        "type": "2", 
        "id": "425", 
        "parentId": "400"
    }, 
    {
        "content": "The bit error rate or bit error ratio (BER) is the number of bit errors divided by the total number of transferred bits during a studied time interval. BER is a unitless performance measure, often expressed as a percentage. BERT or bit error rate test is a testing method for digital communication circuits that uses predetermined stress patterns consisting of a sequence of logical ones and zeros generated by a test pattern generator.  A BERT typically consists of a test pattern generator and a receiver that can be set to the same pattern. They can be used in pairs, with one at either end of a transmission link, or singularly at one end with a loopback at the remote end. ", 
        "type": "5", 
        "id": "426", 
        "parentId": -1
    }, 
    {
        "content": "", 
        "type": "4", 
        "id": "427", 
        "parentId": -1
    }, 
    {
        "content": "CoS (Class of Service) is a parameter used in data and voice protocols to differentiate the types of payloads contained in the packet being transmitted. ", 
        "type": "5", 
        "id": "428", 
        "parentId": -1
    }, 
    {
        "content": "CoS (Class of Service) is a parameter used in data and voice protocols to differentiate the types of payloads contained in the packet being transmitted.", 
        "type": "4", 
        "id": "429", 
        "parentId": -1
    }, 
    {
        "content": "Let's do some path MTU discovery between two Debian hosts separated by a Debian router that runs Shorewall-generated iptables rules. Each of the two hosts uses a single Ethernet link while the router uses tagged VLANs over two aggregated Ethernet links.  Using scamper :  root@kitandara:/home/jm# scamper -I \"trace -M 10.64.0.2\" traceroute from 10.1.0.5 to 10.64.0.2  1  10.1.0.1  0.180 ms [mtu: 6128]  2  10.64.0.2  0.243 ms [mtu: 6128]   Good: 6128 bytes is the expected result (cheap Realtek Ethernet adapters can't handle jumbo frames of a decent size).  Now, let iperf perform a throughput test and tell us about the MTU by the way :  root@kitandara:/home/jm# iperf -c 10.64.0.2 -N -m ------------------------------------------------------------ Client connecting to 10.64.0.2, TCP port 5001 TCP window size: 66.2 KByte (default) ------------------------------------------------------------ [  3] local 10.1.0.5 port 59828 connected with 10.64.0.2 port 5001 [ ID] Interval       Transfer     Bandwidth [  3]  0.0-10.0 sec  1011 MBytes   848 Mbits/sec [  3] MSS size 6076 bytes (MTU 6116 bytes, unknown interface)   6116 bytes ? Why ?  And now for something completely different, let's see what this session's traffic actually contained :  root@kitandara:/home/jm# tshark -i eth0 -R \"(ip.dst == 10.64.0.2) || (ip.src == 10.64.0.2)\" | head Capturing on eth0   1.308557     10.1.0.5 -> 10.64.0.2    TCP 74 60310 > 5001 [SYN] Seq=0 Win=5340 Len=0 MSS=534 SACK_PERM=1 TSval=101928961 TSecr=0 WS=16   1.308801    10.64.0.2 -> 10.1.0.5     TCP 74 5001 > 60310 [SYN, ACK] Seq=0 Ack=1 Win=18328 Len=0 MSS=6088 SACK_PERM=1 TSval=3764064056 TSecr=101928961 WS=64   6088 bytes MSS, which means a 6128 MTU... Good. But then why does iperf announce a 6116 bytes MTU ?  At that point thoroughness calls for a closer look at what happens during the scamper trace session :  root@kitandara:/home/jm# tshark -i eth0 -R \"(ip.dst == 10.64.0.2) || (ip.src == 10.64.0.2)\" Capturing on eth0   0.000000     10.1.0.5 -> 10.64.0.2    UDP 58 Source port: 43870  Destination port: 33435   0.000175     10.1.0.1 -> 10.1.0.5     ICMP 86 Time-to-live exceeded (Time to live exceeded in transit)   0.050358     10.1.0.5 -> 10.64.0.2    UDP 58 Source port: 43870  Destination port: 33436   0.050592    10.64.0.2 -> 10.1.0.5     ICMP 86 Destination unreachable (Port unreachable)   0.099790     10.1.0.5 -> 10.64.0.2    UDP 6142 Source port: 43870  Destination port: 33437   0.100912    10.64.0.2 -> 10.1.0.5     ICMP 590 Destination unreachable (Port unreachable)   All those packets have a udp.length of 24 except the two last which have a udp.length of 6108... But then how does scamper tell us that the path MTU is 6128 ?  6108, 6116, 6128... So many MTU to choose from ! ", 
        "type": "1", 
        "id": "430", 
        "parentId": -1
    }, 
    {
        "content": "For the IGPs, cant you just use the regular metric tuning? EIGRP - just manipulate the delay and for OSPF the cost. Once it hits the BGP core, cant you use BGP meds.  For my company (financial intuition) i know thats what we do. We have an A feed and B feed. A feed will have better internal metrics than B. Once it hits our BGP core then its pretty much what I listed above. ", 
        "type": "2", 
        "id": "431", 
        "parentId": "202"
    }, 
    {
        "content": "", 
        "type": "5", 
        "id": "432", 
        "parentId": -1
    }, 
    {
        "content": "A tag for questions involving Brocade Communications Systems hardware or software.", 
        "type": "4", 
        "id": "433", 
        "parentId": -1
    }, 
    {
        "content": "From Network Labs blog:     \"In case of a Fortinet firewall, its Policy Route:  CLI version:  config router policy     edit 1         set input-device \"port4\"         set src 172.18.0.0 255.255.0.0         set dst 192.168.3.0 255.255.255.0         set protocol 6         set start-port 443         set end-port 443         set gateway 1.1.1.1         set output-device \"port3\"     next end    For the GUI version, check the blog above. Can't post images until I get 10 rep points. :-/ ", 
        "type": "2", 
        "id": "435", 
        "parentId": "415"
    }, 
    {
        "content": "I had this issue occur on a network on the other end of the US and had to remotely help some level one analysts via the phone and my wan link to their site. The issue was complicated further by the fact that they had several brands of switches which they had slowly added to the network over the years. When they moved the office, they marked where each port went then re-attached everything the exact same way at the new office and started everything up. Needless to say that the handful of switches that did have working spanning tree didn't converge the same way and they had all kinds of loops and issues. By the time I was done fixing everything no less than three unmanaged switches were discovered to have been connected in loops with the rest of the infrastructure.   The way I was able to track down each of the unmanaged switches was by using a tool called nedi (on the switches which were able to be managed I enabled lldp/cdp). I first generated maps with nedi. Then in areas where the map showed connections from one switch to another then back around to the same switch again I had the network technician on site trace the line manually. I either manually shutdown the interfaces involved with the loop or had the onsite person unplug cables. In the end I was able to get the network working as it should, despite all the crazy off brand switches. ", 
        "type": "2", 
        "id": "436", 
        "parentId": "395"
    }, 
    {
        "content": "Very interesting.  MSS (maximum segment size) = MTU - IP header = 6076.  6076 + 40 = 6116.   Could it be Debian is using the IP options fields in the IP header? That might be the extra 12 bytes... ", 
        "type": "2", 
        "id": "437", 
        "parentId": "430"
    }, 
    {
        "content": "As other people have already pointed out, the only semi-sane design is to configure static routes pointing to (or across) the non-OSPF device at the edge OSPF device and redistribute them into OSPF. Configuring static routes on other OSPF devices would be a nightmare.  Now, assuming the non-OSPF device is totally IGP-clueless (it cannot run RIP or EIGRP, for example), there are two ways to make the routing at least a bit more dynamic (to detect failures in the IGP-clueless device, for example):   Use IP SLA to ping an IP address across that device and tie the static route to the results of IP SLA. If the IGP-clueless device fails, the ping fails, and the static route is gone. More @ http://blog.ioshints.info/search?q=sla+track and http://stack.nil.com/ipcorner/SmallSiteMultiHoming/ Run BGP across the IGP-clueless device.  ", 
        "type": "2", 
        "id": "438", 
        "parentId": "355"
    }, 
    {
        "content": "I am looking to read optical transmit and recieve power of XFPs in our ASR9k. The MIB used should be \"CISCO-ENTITY-SENSOR-MIB\" which is 1.3.6.1.4.1.9.9.91 and occording the ASR9000 documentation, this is available on ASR9k's: http://www.cisco.com/en/US/docs/routers/asr9000/mib/guide/asr9kmib3.html#wp2293135 If you scroll up, you will see that the MIB is in the supported list.  So, my question: am I missing something and should this information be available to SNMP, or is the Cisco documentation wrong here? And if it is available, how can I get to this information?  However show snmp mib object-name | i 1.3.6.1.4.1.9.9.91 gives me nothing neither does show snmp mib object-name | i Sensor     RP/0/RSP0/CPU0:router#show snmp mib object-name | i 1.3.6.1.4.1.9.9.91   Thu May 16 09:08:01.679 CET    RP/0/RSP0/CPU0:router#show snmp mib   object-name | i [sS]ensor Thu May 16 09:08:19.017 CET   The version:     RP/0/RSP0/CPU0:router#show version Thu May 16 09:07:14.437 CET      Cisco IOS XR Software, Version 4.2.3[Default] Copyright (c) 2012 by   Cisco Systems, Inc.      ROM: System Bootstrap, Version 1.06(20120210:003513) [ASR9K ROMMON],      cn-asd-kl-cr15 uptime is 23 weeks, 3 days, 1 hour, 12 minutes System   image file is   \"bootflash:disk0/asr9k-os-mbi-4.2.3/0x100000/mbiasr9k-rp.vm\"      cisco ASR9K Series (MPC8641D) processor with 4194304K bytes of memory.   MPC8641D processor at 1333MHz, Revision 2.2 ASR 9006 AC Chassis with   PEM Version 2   And the XFP I am trying to read:     RP/0/RSP0/CPU0:router#show inventory NAME: \"module 0/0/CPU0\", DESCR:   \"8-Port 10GE Low Queue Line Card, Requires XFPs\" PID: A9K-8T-L, VID:   V04, SN: FOC1641N6EH      NAME: \"module mau TenGigE0/0/CPU0/0\", DESCR: \"Multirate 10GBASE-LR and   OC-192/STM-64 SR-1 XFP, SMF\" PID: XFP-10GLR-OC192SR  , VID: V04 , SN:   SPC1623090S   To compare, this is the output from our 7606:     7606#show ver Cisco IOS Software, c7600s72033_rp Software   (c7600s72033_rp-ADVIPSERVICESK9-M), Version 15.1(3)S4, RELEASE   SOFTWARE (fc2)      7606#show snmp mib | i Sensor entPhySensorType entPhySensorScale   entPhySensorPrecision entPhySensorValue entPhySensorOperStatus   entPhySensorUnitsDisplay entPhySensorValueTimeStamp   entPhySensorValueUpdateRate entSensorType entSensorScale   entSensorPrecision entSensorValue entSensorStatus   entSensorValueTimeStamp entSensorValueUpdateRate   entSensorMeasuredEntity entSensorThresholdSeverity   entSensorThresholdRelation entSensorThresholdValue   entSensorThresholdEvaluation entSensorThresholdNotificationEnable  ", 
        "type": "1", 
        "id": "439", 
        "parentId": -1
    }, 
    {
        "content": "The web server will only need to ARP the ASA to get the MAC address for its (default) gateway. So, the ASA won't need to reply an ARP for any other IP addresses then its own. You can safely turn off proxy-arp on the DMZ interface. You are correct in your assumption that you need it for the outside interface. ", 
        "type": "2", 
        "id": "440", 
        "parentId": "416"
    }, 
    {
        "content": "There are three options you can go.  The first one, and most accurate one, is to setup peering with Team Cymru, as SimonJGreen explains. You have the advantage of having the most accurate list, the disadvantage of maintaining the peering, the policy-statements/route-maps etc.  The second route, would be to deny the prefixes that \"you should never see in the wild\", such as the link-local prefix, the old 6Bone 3FFE::/16 prefix etc and combine that with the prefixes you should see. See below for an example. The advantage is that this is the easiest config, the disadvantage is that it isn't as accurate as the first option.  The third route, which you should never implement, is to take the current ipv6 bogon list, as published by Team Cymru, and paste that as static filters in your config. This is what a lot of people did with ipv4 a few years ago, and leads to a lot of suffering today... Do not this this option. Ever.  As an example, here is a decent list of ipv6 prefixes to allow and prefixes to deny:  ipv6 prefix-list in-filter-v6 seq 5 deny 3ffe::/16 le 128  ipv6 prefix-list in-filter-v6 seq 10 deny 2001:db8::/32 le 128  ipv6 prefix-list in-filter-v6 seq 15 permit 2001::/32  ipv6 prefix-list in-filter-v6 seq 20 deny 2001::/32 le 128  ipv6 prefix-list in-filter-v6 seq 25 permit 2002::/16  ipv6 prefix-list in-filter-v6 seq 30 deny 2002::/16 le 128  ipv6 prefix-list in-filter-v6 seq 35 deny ::/8 le 128  ipv6 prefix-list in-filter-v6 seq 40 deny fe00::/9 le 128  ipv6 prefix-list in-filter-v6 seq 45 deny ff00::/8 le 128  ipv6 prefix-list in-filter-v6 seq 50 permit 2000::/3 le 48  ipv6 prefix-list in-filter-v6 seq 55 deny ::/0 le 128   ", 
        "type": "2", 
        "id": "441", 
        "parentId": "356"
    }, 
    {
        "content": "Have you tried walking the MIB/OIDs in question from a management station?  After having spent a lot of time w/firmware QA, I've noticed things like show commands are likely to not display correct info, even when the OIDs are poll-able.  I recommend using and knowing Net-SNMP tools and utils as debug before trying to poll the information in cacti, observium, etc.  e.g. snmpwalk -v2c -c <community> <routername> 1.3.6.1.4.1.9.9.91 will say \"No Such Object available on this agent at this OID\" if it's not there  Walking 1.3.6.1.4.1.9 on my IOS-XE box gives a lot (I just need to add the MIBs for description). Then I have something to work with (including other gems that might benefit me for monitoring)   snmpwalk -v2c -c <community> <routername> 1.3.6.1.4.1.9  Check out the MIBs available for 4.2.x on the ASR 9000 @:  ftp://ftp.cisco.com/pub/mibs/supportlists/asr9000/asr9000-supportlist.html#Supported_and_Verified_MIBs_XE_4_2_X  That link says that the CISCO-ENTITY-SENSOR-MIB is available, and hasn't been updated since 2007.  Edit: it appears that the asr9k-mgbl-p.pie package was not available on the router, as mapped in the ASR9000 MIB list above.  Supplemental info:  Cisco's MIB Locator tool is IOS-only, so check out the directories above above the asr9000 on the FTP link for more info.  Tool: http://tools.cisco.com/ITDIT/MIBS/MainServlet  SNMP ftp dir: ftp://ftp.cisco.com/pub/mibs/supportlists/  For more information on loading MIBs: http://www.cisco.com/en/US/tech/tk648/tk362/technologies_tech_note09186a00800b4cee.shtml  A really good Cisco SNMP links page: http://www.cisco.com/en/US/tech/tk648/tk362/tk605/tsd_technology_support_sub-protocol_home.html ", 
        "type": "2", 
        "id": "443", 
        "parentId": "439"
    }, 
    {
        "content": "also worth ensuring you nail down .1q/tagging negotiation http://www.curtis-lamasters.com/cisco-switching-switchport-nonegotiate/ ", 
        "type": "2", 
        "id": "445", 
        "parentId": "185"
    }, 
    {
        "content": "For various (and hopefully obvious) reasons, I've started compiling regular expressions that I can use to catch various pieces of information or configuration.   I am expecting I am not the only one, so I would like to put it to you to share your best regexes for use in networks.  (Sections moved to a separate answer marked as Community Wiki) ", 
        "type": "1", 
        "id": "446", 
        "parentId": -1
    }, 
    {
        "content": "In the case you have unmanaged, or the equivalence of unmanaged (lacking login details, or knowledge of the switch operating system, etc), switches and a bridge loop, I describe how I'd go about finding the loop manually. This also addresses the fundamental bottom of the original question, \"you don't have STP\".  The basic algorithm for fault-locating this loop is similar to STP except you don't readily have access to sending out BPDU's with port ID's in them.   First, connect a packet dumping/sniffing-capable device to a port in  one of the switches.  This device has now become your tree's root device.  If you have to fault-locate in multiple locations, e.g. over a \"campus\" or similar, you stand to gain by being able to remotely login with a portable ssh client to the packet dumping machine.  I'd personally use my Linux laptop with an Internet connection with tcpdump in a screen and ssh into it from for example ipad or phone.  If you are unable to login yourself remotely, use a friend to visually monitor the tcpdump, which is probably flooding at link speed making it easy to notice a difference whenever the path towards the loop source device is disconnected.  Next, you're going to have to essentially recreate a tree, starting from your root switch.  And because you can have the scenario where you have multiple looping links feeding into your root device, you must start by removing all connected ports simultaneously at once.  Reconnect the ports one by one and if at any time the packet burst re-appears, follow this port to the connected switch in the other end. Repeat step 1, until you find the looped port(s) and can't iterate further down in your manual tree. Having resolved the loop situation in this switch, return to the switch above in the tree and resume step 2.  This recursion continues all the way back until the final cable has been re-connected in your root switch.    This is a completely exhaustive manual search for looped ports.  Typically there will just be one pair of ports that are looped, meaning the exhaustive and safe search with first removing all connected (link) ports and then reconnecting them one by one is unnecessary. If just one port pair down the 'tree' is looped, you can find it by simply disconnecting one port at a time.  Nevertheless, the general, \"foul-proof\", method, or algorithm, becomes what I described above. ", 
        "type": "2", 
        "id": "448", 
        "parentId": "395"
    }, 
    {
        "content": "We're using VPLS and L2VPN on Juniper MX for L2 connections. Signaling is done via BGP and label distribution via LDP.   Now we want one L2VPN to use a specific path trough the network and not follow the IGP.   As we currently only use LDP we would have to introduce RSVP alongside LDP. Are there any caveats while doing that?  I'm looking for practical examples how this is done on the Juniper boxes. ", 
        "type": "1", 
        "id": "449", 
        "parentId": -1
    }, 
    {
        "content": "Actually, your IPv4 regex is wrong, and will match 999.999.999.999 which is a valid match, but not a valid address.  This is a better bet:  (25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)  ", 
        "type": "2", 
        "id": "450", 
        "parentId": "446"
    }, 
    {
        "content": "Can't see to comment! This:  (advipservicesk9|METROIPACCESSK9|metroipaccessk9|metrobasek9|METROBASEK9)   can be reduced to this:  (?i)(advipservices|METROIPACCESS|METROBASE)(:?k9)?   and then even further to this:  (?i)(a|m).*9)  ", 
        "type": "2", 
        "id": "451", 
        "parentId": "446"
    }, 
    {
        "content": "Catch routers and switches with predictable names  All of our routers and switches follow the pattern access (a), distribution (d), multicast distribution (mdr), border (b), core (c) or datacenter (dc), then device type (router (r) or switch (s)), always followed by a number indicating the device number of its type on that site, then a dot.  After the dot, the unique site name.   (^|(?!:))((as|ast|dr|mdr|br|cr|cs|dcs)\\d\\.[a-zA-Z]{3,5})(:?\\d)?(:?((:?\\(.*\\))?#|>))?   (This pattern will also catch if there's a prompt - that's the ?(:?((:?\\(.*\\))?#|>))?)  Catch interfaces and subinterfaces  This one is overly broad, unfortunately, so it'll also catch the back end of a slash-notated IP-network, e.g. it'll match 0/22 in 10.20.30.0/22)   ((:?int(:?erface)? )?((:?Te(:?n)?)?((:?(G|g)(:?i)?(:?gE|g)?)?(:?abit)?|(Fa(:?st)?))(:?Ethernet)?|Vl(:?an)?))((:? *)?\\d+(/\\d{1,2}){1,3}(:?\\.\\d{1,9})?)   It'll match Cisco Gi, Te and Fa interfaces and subinterfaces.  IP addresses  IPv4, with optional slash notation   \\b(?:\\d{1,3}\\.){3}\\d{1,3}(:?/\\d.)?\\b   *: Note: this is purposefully a sloppy and very wide match and will also match 999.999.999.999  IPv6, with optional slash notation  Then \"not followed by dot\" is to weed out time stamps (e.g. 09:48:01.992), but it will still match non-dotted time stamps (e.g. 09:48:01)   \\b([0-9A-Fa-f]{0,4}:){2,7}[0-9A-Fa-f]{1,4}(?!\\.)(:?\\/\\d*)?\\b   Both IPv4 and v6, including optional ip address information   \\b(:?ip(:?v\\d)? address )?((?:\\d{1,3}\\.){3}\\d{1,3}(:?/\\d.)?|\\b([0-9A-Fa-f]{0,4}:){2,7}[0-9A-Fa-f]{1,4}(?!\\.)(:?\\/\\d*)?\\b)\\b   *: See note at IPv4  Certain devices names and types  This one matches some variations of Cisco ASR9K, and iosxr (for output colouring, makes it easier to spot lines with router and software information). Easily customized    (:?cisco )?(ASR(-| )90\\d\\d|(asr|ASR)9(k|K)|iosxr)   Switch software versioning   (advipservicesk9|METROIPACCESSK9|metroipaccessk9|metrobasek9|METROBASEK9)   and when you're on the 12.2 train...   (12(:?\\.)?2)((\\(|-)\\d*(\\)|\\.))(:?SE\\d)   Reboot reason   System returned to ROM by[^$]*   HSRP information   (Active|Standby) router is.*\\)  (Active|Standby) router is unknown  (Active|Standby) router is local   Use cases  Terminal actions, including output colouring  iTerm2 supports all sorts of interesting actions based on matches.  Unix  sed, awk, grep, etc. Lovely. ", 
        "type": "2", 
        "id": "452", 
        "parentId": "446"
    }, 
    {
        "content": "I have two SRX240's clustered together. The clustering is configured with 2 redundancy groups and then 3 RETH's.  reth1 is connected to our internet connection via ge-0/0/5 and ge-5/0/5. Our internet connection is a 100mbps each way leased line. We have to make sure they we specify disable the auto negotiate settings and manually set the speed and full duplex mode.  Here is the config showing those interfaces  cluster {     reth-count 3;     redundancy-group 0 {         node 0 priority 100;         node 1 priority 99;     }     redundancy-group 1 {         node 0 priority 100;         node 1 priority 99;         preempt;         interface-monitor {             ge-0/0/5 weight 255;             ge-5/0/5 weight 255;         }      } }  interfaces {     ge-0/0/5 {         speed 100m;         link-mode full-duplex;         gigether-options {             no-auto-negotiation;             redundant-parent reth1;         }     }     ge-5/0/5 {         speed 100m;         gigether-options {             no-auto-negotiation;             redundant-parent reth1;         }     }     reth1 {         redundant-ether-options {             redundancy-group 1;         }         unit 0 {             family inet {                 address 1.1.1.25/30;             }         }     }  }   The upstream NTE sits on IP address 1.1.1.26/30 (IP's changed).  My connection works fine, I get close to maximum download speeds for the line speed. I have low latency and everything else that you would expect. However every now and then I suddenly can't ping the upstream NTE. The connectivity just stops.  If I check the interface status it shows as being up.  {primary:node0} gareth@FW01> show interfaces ge-0/0/5 Physical interface: ge-0/0/5, Enabled, Physical link is Up   Interface index: 139, SNMP ifIndex: 527   Link-level type: Ethernet, MTU: 1514, Link-mode: Full-duplex, Speed: 100mbps,   BPDU Error: None, MAC-REWRITE Error: None, Loopback: Disabled,   Source filtering: Disabled, Flow control: Enabled, Auto-negotiation: Enabled,   Remote fault: Online   Device flags   : Present Running   Interface flags: SNMP-Traps Internal: 0x0   Link flags     : None   CoS queues     : 8 supported, 8 maximum usable queues   Current address: 00:10:de:ff:20:01, Hardware address: 08:81:f4:cd:a1:05   Last flapped   : 2013-05-16 01:35:08 UTC (03:39:01 ago)   Input rate     : 7144 bps (10 pps)   Output rate    : 34488 bps (58 pps)   Active alarms  : None   Active defects : None   Interface transmit statistics: Disabled    Logical interface ge-0/0/5.0 (Index 74) (SNMP ifIndex 528)     Flags: SNMP-Traps 0x0 Encapsulation: ENET2     Input packets : 20966964     Output packets: 13453431     Security: Zone: Null     Protocol aenet, AE bundle: reth1.0   Link Index: 0  {primary:node0} gareth@FW01> show interfaces reth1.0   Logical interface reth1.0 (Index 68) (SNMP ifIndex 578)     Flags: SNMP-Traps 0x0 Encapsulation: ENET2     Statistics        Packets        pps         Bytes          bps     Bundle:         Input :      20967161         12   19068965037         9320         Output:      13454302         44    3387733487        29088     Security: Zone: untrust-internet     Allowed host-inbound traffic : ping     Protocol inet, MTU: 1500       Flags: Sendbcast-pkt-to-re       Addresses, Flags: Is-Preferred Is-Primary         Destination: 1.1.1.24/30, Local: 1.1.1.25,         Broadcast: 1.1.1.27   The reason for the last flap was because I changed the network cable to rule that out. Unplugging the cable and connecting a new one causes the connection to come back. I am a little reluctant to trust it at the moment.  Does anyone have any other things I can look at if it happens again?  I did find the following post http://kb.juniper.net/InfoCenter/index?page=content&id=KB16672 which says it should work on supported versions.     The releases, specifically for High End SRX devices, are 11.2R1, 11.1R1, 10.3R3, 10.4R2, 10.2R4 or later. For Branch SRX devices, this is supported only from Junos 11.1R4, 11.2R2, and 11.4R1 onwards.   I am running version 11.2R4.3 ", 
        "type": "1", 
        "id": "453", 
        "parentId": -1
    }, 
    {
        "content": "Here's some version info that should help.  I think that the other thing that immediately strikes me is autonegotiation being disabled, which shouldn't be necessary.  Is this something that your provider is asking for, or based on learned behaviors?  I recommend reading what's out there, since autonegotiation has been recommended for over 10 years.  Anything you're connecting to should work fine with it as well (the last time I had issues was on a 3500XL - we're talking ooooold). Check out:  http://etherealmind.com/ethernet-autonegotiation-works-why-how-standard-should-be-set/  First off, Junos 11.4R7.5 is the supported release recommended for SRX240, as of 8 April 2013, per JTAC (since you mentioned versions).  http://kb.juniper.net/InfoCenter/index?page=content&id=KB21476 (need login)  Also, JTAC recommends EEOL releases on SRX or J Series for IPsec features (may or may not apply, but FYI).  (For me, the only releases available for SRX240H on juniper.net are 10.4, 11.4, and 12.1 - that may help set your expectations on what to run.)  http://www.juniper.net/alerts/viewalert.jsp?txtAlertNumber=PSN-2013-01-822&actionBtn=Search (need login)  You are also running a version that was released before the malformed TCP vulnerability came out.  I shudder to think that a live exploit exists, but you definitely need to be on versions that were published around January or February 2013, or later.  The versions you need for 11.2 are 11.2R5.5 or 11.2R7.5 (or higher)  http://osvdb.org/89751  I mentioned versions because the SRX is a 'rapidly evolving' platform as well, and anecdotal evidence and hearsay suggests that you'll want to upgrade more frequently. ", 
        "type": "2", 
        "id": "454", 
        "parentId": "453"
    }, 
    {
        "content": "Short answer, just use Resource ReSerVation Protocol (RSVP).  Long answer, you could use multi-topology-routing and have multiple metrics in each interface and force some packets to different topology than another packets. But I would not really venture there.  You might want to talk to your account team that you want segment routing implemented: http://tools.ietf.org/html/draft-previdi-filsfils-isis-segment-routing-02 (customer pressure will help resource development)  Segment routing would make it trivial to solve your problem while removing both LDP and RSVP from your network, relying only on IGP.    As my suggestion in comments did not actually work, I'll explain why not, and how to fix. Problem is we need to have LSP installed in HW to be able to use it. And by my suggestion the RSVP LSP is not actually installed until LDP LSP goes away. So we cannot conditionally inject traffic there.  I couldn't find any way to force RSVP+LDP in ECMP, with equal preference LDP wins. But we still can achieve what is desired at least in two separate ways.   Dual next-hops Add second next-hop in the l2circuit PEs. This next-hop will not be used by iBGP, so it draws no traffic at all. Now configure RSVP tunnel for this second loopback and use it as neighbor address for l2circuit. Net effect is, all traffic is using LDP except this l2circuit which is using RSVP RSVP only Create two RSVP tunnels, one using IGP path (i.e. will use same as LDP) another using your explicit path. These can be set to ECMP, i.e. all traffic will use both tunnels. Now as we've accomplished ECMP requirement, we can use 'routing-options forwarding-table' export policy to put some traffic on LSP_NORMAL and some traffic on LSP_EVPN. Essentially our export policy would be:   .   term EVPN {     from community EVPN;     then {         install-nexthop lsp LSP_EVPN;         accept;     } } term NORMAL {     from next-hop 1.2.3.4;     then {         install-nexthop lsp LSP_NORMAL;         accept;     } }   Now none of the traffic would actually use the ECMP as all of the traffic would be forced to one or the other RSVP LSP. I would prefer the 1st option. ", 
        "type": "2", 
        "id": "455", 
        "parentId": "449"
    }, 
    {
        "content": "Is there such a thing as a network bridge or is it always meant as a switch implementing a bridging function?  Whilst bridges are described as devices that create separate collision domains in network specifications and tutorials, I have never been able to find any concrete product denominated 'bridge'. ", 
        "type": "1", 
        "id": "456", 
        "parentId": -1
    }, 
    {
        "content": "Bridges as a product no longer exist due to how the market evolved.  Typically the products specifically called bridges were used in hubbed environments to separate the collision domain or to bridge two network media types together (for example, Ethernet and token ring).  Bridges as a function are definitely still around.  Simply speaking, as a function of separating the collision domain, a switch is a bridge with lots of ports.  For an example of bridging two network media types, access points are bridges that bridge 802.11 traffic to Ethernet. ", 
        "type": "2", 
        "id": "458", 
        "parentId": "456"
    }, 
    {
        "content": "Yes, a network bridge was originally what we would think of today as a 2-port ethernet switch.  They were used to provide separate collision domains without otherwise changing the routing on the network.  I always thought the use case was a bit limited, but ethernet switching was the newfangled fanciness as I was coming of age in networking, so the network bridge was already looking a bit long in the tooth as a concept.  The term \"switch\" is really the term that is nebulous.  Early ethernet switches were frequently referred to as multi-port bridges to help define what it was that they were.  Later, when the development of routing traffic in hardware some marketing geniuses (tongue-firmly-in-cheek using \"genius\" there) decided to create the term Layer 3 switching to differentiate hardware based routing from the traditional software based routing processes.  This served to further muddle the definition of the term switch, and now we have marketing geniuses (Ibid) referring to \"Layer 7 switches\" and other such inanities.  As YLearn's answer alludes to, bridges could also bridge between dissimilar media types with greater or lesser amounts of lossage depending on how compatible the media types were...ethernet <-> FDDI was easy, ethernet <-> Token Ring was a bit more challenging to get right. ", 
        "type": "2", 
        "id": "459", 
        "parentId": "456"
    }, 
    {
        "content": "The mib 1.3.6.1.4.1.9.9.91 works on ASR1001s at least.  Running the following from my monitoring box:  snmpwalk -v2c -c <community-string> <asr1001-name> 1.3.6.1.4.1.9.9.91   Gives an output of:  CISCO-ENTITY-SENSOR-MIB::entSensorType.4 = INTEGER: amperes(5) CISCO-ENTITY-SENSOR-MIB::entSensorType.5 = INTEGER: voltsAC(3) CISCO-ENTITY-SENSOR-MIB::entSensorType.6 = INTEGER: voltsAC(3) CISCO-ENTITY-SENSOR-MIB::entSensorType.7 = INTEGER: celsius(8) CISCO-ENTITY-SENSOR-MIB::entSensorType.8 = INTEGER: celsius(8)   And so on.  You'll just have to index it and find the particular sensor you wish to monitor.  (As a note, to get readable output, I had to install the CISCO-ENTITY-SENSOR-MIB on my server that was originating the snmpwalk.) ", 
        "type": "2", 
        "id": "460", 
        "parentId": "439"
    }, 
    {
        "content": "The main part about this is the switch IDs for the devices. If you have two switch stacks which BOTH have units 1 and 2 your interfaces are named 1/g1, 1/g2, 2/g1 etc. When they are combined into one stack the configuration of at least two will change.  So:   Do backups of the configuration Get a service window :-) Shutdown two units, and join them to the stack Paste the configuration for the \"new units\" 3/g1-24, and 4/g1-24 etc.   TL;DR interface numbers follow switch id and switches cannot automatically merge two stack configs ", 
        "type": "2", 
        "id": "461", 
        "parentId": "283"
    }, 
    {
        "content": "I would like to have syntax highlighting while perusing my configs - does anybody know of a good Cisco IOS syntax highlighting bundle for TextMate or Sublime Text?  Edited (2015-09-21) to add:  GitHub Atom Editor has a Cisco IOS syntax highlighter in their built in \"packages\" repo and it is easy to install. I think that Sublime Text is a better editor, but if you are not already invested in ST, I recommend giving Atom a look. ", 
        "type": "1", 
        "id": "462", 
        "parentId": -1
    }, 
    {
        "content": "Though a .tmBundle exists for syntax highlighting in Cisco IOS, it is very limited in scope.   Have you made or do you know of a better bundle? ", 
        "type": "2", 
        "id": "463", 
        "parentId": "462"
    }, 
    {
        "content": "I haven't tried it yet but there is a GitHub repo someone made for Cisco IOS Syntax Highlighting for Sublime Text 2.   ", 
        "type": "2", 
        "id": "464", 
        "parentId": "462"
    }, 
    {
        "content": "I've been placed in charge of replacing an older Avaya TDM PBX with a new VoIP system that will integrate with Exchange (at least in the capability to transcribe voicemail messages and deliver them to the email inbox).  I recently acquired the CCNA Voice cert, and while I have a decent idea of what I need, perhaps the most confusing part is the licensing. I really thought Cisco should have done a better job of explaining it for the CCNA Voice curriculum.  Basically, the network design will involve a SIP trunk from the ISP. I was looking at a Cisco Business Edition 3000 system, but I found out it requires a CUBE. So, that being the case, I am looking to buy either a 3825 router, or something from the 2900-series instead of the BE3000 system.   So my questions are:   I know CUCME is part of the IOS image, but does it have to be licensed to be unlocked? I know I'll need either an AIM-CUE or NM-CUE for voicemail, how does licensing for that work? If I buy Cisco IP phones from eBay, I assume they're unlicensed. How do I acquire a license, or will they simply work with CUCME (provided CUCME supports the phone model to begin with)? Is the CUBE functionality built into IOS, similar to how CUCME is, or is it an addon, and how does licensing for that work? What hardware would you recommend for a small company of 30 employees with a 10-number SIP trunk? Or does a 3825/2900-series sound ok? How does a small company with no Cisco contracts go about purchasing the necessary licenses?   I have been researching this for about three weeks, but I keep running into incomplete and sometimes conflicting information. This will be the first voice system I've set up. ", 
        "type": "1", 
        "id": "465", 
        "parentId": -1
    }, 
    {
        "content": "I use Cisco access points AIR-CAP1552E to connect buildings via WiFi, 802.11a/n (5 GHz). Normally, they are mounted upright, with three three omni directional antennas at the bottom. Now I consider a single AP on the roof of a very small building, connecting to a much higher one.  Would it be beneficial to turn the AP up some degrees, such as in the photo I made, or would it degrade the WiFi quality if the angle of the antennas doesn't match the other AP which is upright?   ", 
        "type": "1", 
        "id": "466", 
        "parentId": -1
    }, 
    {
        "content": "If you are not tied to CallManager, Asterisk is an open-source solution to provide SIP telephony, and can automatically email voicemails to users. ", 
        "type": "2", 
        "id": "467", 
        "parentId": "465"
    }, 
    {
        "content": "This will theoretically help.  Your question seems to break down to:  \"Does it make sense to aim omnidirectional antennas?\"    Since 'omnidirectional' dipoles are actually directional with a toroidal radiation pattern, the radiation from your angled antennas will be strongest along the plane perpendicular to the antenna.    The fact that the other antenna is perpendicular to the ground would not cause any issues, but if you wanted to optimize for this particular building to building link you could angle that one 'down'.    Whether or not this will help in any meaningful way in your particular situation is less clear:  The only way to know would be to try it both ways and see if there is any difference in RSSI.    My hunch is that unless you're talking about extremely long distances or sharp angles, it won't matter much.  If you are then you should probably be looking at more directional antennas. ", 
        "type": "2", 
        "id": "468", 
        "parentId": "466"
    }, 
    {
        "content": "It definitely matters:  'Omni' refers to the symmetry in the plane perpendicular to the axis of the antenna; That is, the torus around the antenna axis. But 'omni' antennas are VERY sensitive to variation from the vertical.  If you're aiming down into an open area (to the left, as suggested by the photo,) then ok, tip them as is shown. But generally, you should have the antenna at about the same height at the other trans/receivers you're trying to cover.  If that photo is your actual installation: Be aware that a metal roof -- especially if it's grounded, which it almost surely is -- will be an RF reflector. So you will have an RF shadow from the roof below the visual line of sight. (If you can't see the antenna, the RF signal won't go through the roof either.) ", 
        "type": "2", 
        "id": "469", 
        "parentId": "466"
    }, 
    {
        "content": "Yes, it would be beneficial if you are angling the AP correctly (second AP would be up and to the right), even with the antennas on the other AP being vertical.  If you angle this the wrong way (second AP is up and to the left), then you will be making things worse.  This type of antenna produces a signal pattern in a toroid or doughnut shape (with the antenna forming an \"axel\" through this pattern).  Angling the one would increase the energy that arrives at the higher AP and will allow for slightly better reception by the lower AP.  However, this may only be true if all you are concerned about was the signal between the two APs.  If you are providing service to other devices from the lower AP, this could negatively impact the service to those other devices.  If it is only signal between the two APs, then I would question why you are using omnidirectional antennas over directional?  Even if the higher AP is serving multiple lower APs, if the lower AP only connects to the higher one, it would be better served using directional antennas.  If all the APs are lower than the higher one, then I would look for antennas with \"down tilt\" for the higher AP if possible or else something like a patch/panel pointed downward.  With any wireless, you should make sure to understand the signal patterns of the antennas you choose. ", 
        "type": "2", 
        "id": "470", 
        "parentId": "466"
    }, 
    {
        "content": "", 
        "type": "5", 
        "id": "471", 
        "parentId": -1
    }, 
    {
        "content": "The Spanning Tree Protocol is a protocol that prevents layer 2 loops by shutting down redundant links. It builds a tree from a central switch, called the \"root switch\". This can be done for the network as a whole, or per VLAN. Different types are Rapid Spanning Tree, Per VLAN (Rapid) Spanning Tree and Multiple Spanning Tree.   It is often abbreviated to STP.", 
        "type": "4", 
        "id": "472", 
        "parentId": -1
    }, 
    {
        "content": "", 
        "type": "5", 
        "id": "473", 
        "parentId": -1
    }, 
    {
        "content": "IOS, or Internetwork Operating System, is the operating system employed by most Cisco devices. It is also used to refer to the command line shell that is used to configure Cisco devices.", 
        "type": "4", 
        "id": "474", 
        "parentId": -1
    }, 
    {
        "content": "When implementing Cisco Nexus 5k switches (5596UP), I connected a server to a dual homed 2000 FEX (2232T), the port belonging to a virtual port channel. However, the port changed the status from notconnected to inactive and remained so.   I verified that speed and duplex match, i.e. auto/auto, tested also 1000/full. I verified that the corresponding VLAN exists and is the access VLAN on this port. Default port settings, except this access VLAN.   What may be wrong, and how can I correct it? ", 
        "type": "1", 
        "id": "475", 
        "parentId": -1
    }, 
    {
        "content": "It turned out, that the configuration of this port did not match on both Nexus 5k, as I configured just one switch at first.   I configured the port on the second Nexus switch in the same way. I plan to implement the config sync feature so that issue should not happen again.   Once the configuration of the ports of the virtual port channel matched, the link came up. ", 
        "type": "2", 
        "id": "476", 
        "parentId": "475"
    }, 
    {
        "content": "A question of this type sounds like something your local Cisco VAR or Partner could answer for you.  Find your local Cisco partners here.  You can specifically search for a Partner with Voice experience/folks.  I've found that Cisco's voice licensing is obtuse bordering on arcane sometimes, and it is best to ask the folks who are paid to understand it and deal in it every day.  --  With that said, if you contact a Cisco Partner, you will also have to sort marketing info from what would really solve your problems.  But then again, that's what WE as the engineers are paid for right? ", 
        "type": "2", 
        "id": "477", 
        "parentId": "465"
    }, 
    {
        "content": " On a 2900/3900 platform, the UC license is required to use the CUCME/SRST functionality.  It is in addition to the base OS.  Once unlocked the commands will be available (no upgrade needed). As of Unity express 7.0.2, the CUE modules are licensed separately for a given number of mailboxes. Spare phones (with an = in the part number) are technically unlicensed.  You can use them with the system, as the CUCME router platform is licensed to a specific number of phones per hardware platform.  While you don't need the licenses to operate the phones, you should probably purchase them to stay on Cisco's good side. CUBE should be unlocked with the UC licenses on the 2900/3900 platform. For 30 phones, you probably want a 2911 or 2921.   Brett is right in that you probably need to contact a Cisco VAR/Partner to sort out the licensing issues.  They have people on staff that can take care of that for you and probably get you discount off list pricing. ", 
        "type": "2", 
        "id": "479", 
        "parentId": "465"
    }, 
    {
        "content": "I want to factory reset IOS-XR. The router used is ASR9000  I'm used to do that easily in IOS doing config-register 0x2102, write erase followed by a reload.    I search on documentation, but found no explicit information. What is the correct method for doing a factory reset on the ASR9k running IOS-XR? ", 
        "type": "1", 
        "id": "480", 
        "parentId": -1
    }, 
    {
        "content": "I am redistributing a static route into EIGRP on a 6500. I had read here if you enter a network statement matching a static route that it would be redistributed as an internal route by EIGRP. However, after entering the configuration, neighbors indicate the route as external.  Does the redistribute static preempt and cause the route to be marked as external?      router eigrp 10  network 10.0.0.0 network 10.1.13.0 0.0.1.255 redistribute static  ip route 10.1.13.0 255.255.254.0 10.1.29.5  ", 
        "type": "1", 
        "id": "483", 
        "parentId": -1
    }, 
    {
        "content": "Today you can make a network bridge in software. Get a Linux box and compile the ethernet bridging support into the kernel. Then you get network devices like br0 which can be connected to interfaces like eth0 and eth1 and will propagate raw, low level packets from one to the other. There is even filter support similar to iptables, as well as a user space tool called ebtables (Ethernet bridging tables) using which you can define rules to filter packets by MACs and other fields or bytes, so your bridge does not have to forward everything.  Ethernet was not switched once upon a time. The original Ethernet consisted of a long cable shared among the stations. Each station tapped into the cable.  This is why we still talk abut a \"network segment\". Today a \"network segment\" is a logical segment only, but actually looks like a star (or bunch of stars) centered around switches, but once upon a time, it really was like a straight line with stations hanging off it.  If you wanted to connect two such networks, there were two choices: a repeater, or a bridge. A repeater is an analog amplifier device which listens on one wire, buffers the signal electronically and drives the same signal on the other wire (and in the case of networking, vice versa: bidirectionally).   A bridge is a computer or embedded system which receives the actual packets, and then sends them to the other side.  Unlike a repeater, a bridge can be smart in that as it passes traffic, it builds a table of known addresses in memory. It knows which station is on which side of the bridge, so it can avoid bridging whenever a station on one side of the bridge addresses a station that lives on the same side. Only broadcast packets have to be bridged, and packets which address across the bridge. ", 
        "type": "2", 
        "id": "484", 
        "parentId": "456"
    }, 
    {
        "content": "You must commit replace with an empty config file. This will wipe the config out completely. Also keep in mind the admin context. You'll need to go into the admin context and commit replace that config as well if you want to reset the settings inside the admin context. ", 
        "type": "2", 
        "id": "485", 
        "parentId": "480"
    }, 
    {
        "content": "commit replace does the trick of nuking the config.  I found the commit history still shows the previous commits in a list, but you cant see the contents of them.  ", 
        "type": "2", 
        "id": "486", 
        "parentId": "480"
    }, 
    {
        "content": "You can inject static routes into EIGRP two ways:   The 'network' command 'redistribute static'   You only need one or the other; here you've used both. It seems that the redistribution command takes precedence over the network command so the route is appearing as static routes. Remove 'redistribute static' and the route should appear as internal. ", 
        "type": "2", 
        "id": "487", 
        "parentId": "483"
    }, 
    {
        "content": "FluxLight also has a fairly wide selection of SFP, SFP+ and QSFP optical transceivers. We have used them for about 5 years now and have only encountered one bad module. We contacted FluxLight and they cross-shipped a new module for free. I highly recommend them. Their modules also identify properly in various vendor chassis, so HP and Cisco equipment should see the module without it complaining or shutting down the interface. ", 
        "type": "2", 
        "id": "488", 
        "parentId": "157"
    }, 
    {
        "content": "I was wondering if anyone has some favorite modules for doing things like SNMP, CLI screen scraping, netconf, etc... ", 
        "type": "1", 
        "id": "489", 
        "parentId": -1
    }, 
    {
        "content": "We've been using:  pysnmp - pretty obvious Exscript - offers an enhanced \"expect\" type of experience.  Very nice. MySQLdb - also self explanatory ", 
        "type": "2", 
        "id": "490", 
        "parentId": "489"
    }, 
    {
        "content": "I just started playing with Trigger and I have to say I've really enjoyed it.  It's quite a powerful network engineer toolkit and their documentation is awesome.  While we primarily have Cisco it does support other vendors such as Juniper and Brocade, they have a list of vendors in their docs ", 
        "type": "2", 
        "id": "491", 
        "parentId": "489"
    }, 
    {
        "content": "Lots of people have answered already; and I agree: Fiber beats copper as soon as distance becomes a factor.   But beware of multimode fiber; it also has serious distance issues. You can only go 550 metres on GE (1000BASE-SX), and some of the 10GE modes manage 330 metres on really good multimode fiber (OM3 or OM4). In a larger colo or CO or in a campus setting, this is severely limiting. IMNSHO multimode is a \"rack row\" technique only for 10G.   Combining this with the many available grades of multimode and you've got a recipe for confusion and investment one-way alleys.   Singlemode, OTOH, is simpler, and the price delta down to multimode keeps getting smaller. I am not recommending anything except singlemode for new structural installs, limiting multimode new installs to backwards compatibility (ie. new computer room needs to interconnect with old FC infrastructure on 50\u00b5m or to closet switches on 1000BASE-SX).  ", 
        "type": "2", 
        "id": "492", 
        "parentId": "99"
    }, 
    {
        "content": "When cabling a network using fibre, what is the difference between single-mode and multi-mode fibre? When should I be using one or the other? Are there compatibility and/or speed concerns with either? ", 
        "type": "1", 
        "id": "493", 
        "parentId": -1
    }, 
    {
        "content": "Singlemode fiber has a smaller core (9 micron), resulting in less light diffraction over distance than multimode fiber (50, 62.5) micron.   The fragility and increased cost to produce singlemode fiber makes it more expensive to use, which is why multimode is typically used when you don't need the distance of singlemode.  Multimode generally has a reach upto ~550 meters, where as singlemode has the potential to reach 10,000 meters (40,000 meters with ER) ", 
        "type": "2", 
        "id": "495", 
        "parentId": "493"
    }, 
    {
        "content": "Multi-mode fiber (MMF) uses a much bigger core and usually uses a longer wavelength of light.  Because of this, the optics used in MMF have a higher capability to gather light from the laser.  In practical terms, this means the optics are cheaper.  Single-mode fiber (SMF) has much tighter tolerances for optics used.  The core is smaller and the laser wavelength is narrower.  This means that SMF has the capability for higher bandwidth and much longer distances in transmission.  With 10GB just around the corner for many of my customers, I've started recommending they use SMF everywhere for connections.  When installed as part of a project, the extra cost of SMF is negligible compared to MMF.  That also means you won't need to rip out your MMF fiber plant to upgrade speeds in a few years. ", 
        "type": "2", 
        "id": "496", 
        "parentId": "493"
    }, 
    {
        "content": "Main difference: Singlemode fiber has a lower power loss characteristic than multimode fiber, which means light can travel longer distances through it than it can through multimode fiber. Not surprising, the optics required to drive singlemode fiber are way more expensive, especially considering any varying circumstances.   When to use each: Both singlemode and modern multimode fiber can handle 10G speeds.  The most important thing to consider is the distance requirement.  Within a data center, it's typical to use multimode which can get you 300-400 meters.  If you have very long runs or are connecting over longer distance, single mode can get you 10km, 40km, 80km, and even farther - you just need to use the appropriate optic for the distance required, and again, the prices go up accordingly.  Compatibility issues: They are not compatible.  You cannot mix multimode and singlemode fiber between two endpoints.  The optics are not compatible either.  There's a lot more to say about fiber, in general, but I hope this answers your immediate question. ", 
        "type": "2", 
        "id": "497", 
        "parentId": "493"
    }, 
    {
        "content": "I have the feeling copper is a bit more robust then fiber. In a datacenter this is not an issue because the cables stay where they are once the links are up.  However, in harsher conditions (temporary setups in open air, equipment hauled around the country and networks rebuilt often, ...) sturdiness is a factor. I haven't kept score, but I think fibers fail me a bit more often than copper, cables getting damaged or connectors getting dirty.  YMMV of course, and as Lucas may remember, those little clip thingies on RJ45 connectors aren't the most student-proof invention either... ", 
        "type": "2", 
        "id": "498", 
        "parentId": "99"
    }, 
    {
        "content": "Not all taps are \"passive\".  Look a few tabs down for \"aggregation\" taps  Yes, the most common quoted reason is to allow linerate monitoring, but the truth is far simpler... it takes pratically no logic to individually mirror the electrical signaling in each direction. (at least for 10/100, gig uses all four pairs) [I have various 10/100 passive taps.  Most of them have maybe $5 worth of logic in them. The good aggregation taps are tiny highspeed computers.] ", 
        "type": "2", 
        "id": "499", 
        "parentId": "412"
    }, 
    {
        "content": "Don't forget about:   Ciscoconfparse Cisco CLI Automation argparse (best module for parsing arguments)  ", 
        "type": "2", 
        "id": "500", 
        "parentId": "489"
    }, 
    {
        "content": "On paper, yes.  In reality, don't bet on it.  As Mr. Stretch brings up... are you willing to bet your job on it not interrupting the CEO's video conference?  (In my experience, Cisco OIR is always an incalculable gamble.  Sometimes it works perfectly.  Others is creates noise on the bus that crashes the entire router. Or my fav... corrupts one of the buses and half the linecards disappear/reboot.) ", 
        "type": "2", 
        "id": "501", 
        "parentId": "385"
    }, 
    {
        "content": "Fiber over Copper...   High electrical noise environment.  The first place I used fiber was on the production floor of a textile mill. twisted pair was a nightmare there.  Long spans -- in excess of 100m. Anywhere future in-place upgrades are desirable  I know of a few places where SM fiber from the 80's is still being used today for 10Gbe.  Anywhere that maximum speed is desired.   Yes, there are many different grades/qualities of fiber, but unless we're talking 10km+ spans, the differences aren't that major for 1/10/40/100Gbe.  Higher speeds reduce overall distance, but that's an unavoidable reality. ", 
        "type": "2", 
        "id": "502", 
        "parentId": "99"
    }, 
    {
        "content": "Some things that I haven't seen mentioned:  1) 10GBASE-T uses a lot of power compared to fiber to DAC.  2) 10GBASE-T transceivers have much higher latency than other options.  This could be important in a compute cluster or other low latency environment like automated financial trading. ", 
        "type": "2", 
        "id": "503", 
        "parentId": "99"
    }, 
    {
        "content": "Is there a way to overcome Cisco's 2 monitor session limitation on a VSS 6500 without the use of a network tap? ", 
        "type": "1", 
        "id": "504", 
        "parentId": -1
    }, 
    {
        "content": "When describing 802.11b/g and the 2.4 GHz channels, or 802.11a/n with 5 GHz channels,  textbooks (CWNA Official Study Guide) often show some figure with channels spaced such that certain channels cannot overlap and therefore ISI is avoided. The explanation is that ISI occurs in cases of multipath, where the signals of the same frequency interfere. This does make sense to me, i.e.  that signals of the same frequency can interfere, and so non-overlapping channels would avoid ISI.   My understanding is that the 802.11 design assigns 1 signal per constant width of \"frequency space\" in a channel, for example   1 signal per 2 MHz in a DSSS channel 1 signal per subcarrier in OFDM channel   If we look at the figures in the URLs, the spacing of the channels and frequencies show a sequential order by Hz. What's not clear to me, is whether the same exact sequence must also hold for the timing of each signal's arrival. For example, consider 2.4 GHz channel 1: does the 2.410 GHz signal always arrive at the receiver before the 2.414 GHz signal? After the first 1 cycle, I would guess that the signals within a single channel arrive in order of lowest to highest Hz. But does this precise order hold after any length of time? What would prevent signals at different Hz from arriving at exactly the same instant? Or if simultaneous arrival of different-frequency signals is already expected to occur, then how does the radio discern which is the correct signal to receive?  ", 
        "type": "1", 
        "id": "505", 
        "parentId": -1
    }, 
    {
        "content": "If it's like most of the hardware switches, no.  Only one \"monitor session\" can be active at a time, 'tho the configuration can store two.  Using vlans and external filtering hardware (gigamon?) you could have one session dumping all the traffic you want to see, but that's still one session. (and a network tap would be cheaper) ", 
        "type": "2", 
        "id": "506", 
        "parentId": "504"
    }, 
    {
        "content": "How many contexts can be created on a Cisco ASA Active/Standby pair with base license?  ", 
        "type": "1", 
        "id": "507", 
        "parentId": -1
    }, 
    {
        "content": "Each physical firewall is licensed for two contexts with the base license. For example: an operational and an admin context. If you create an active/standby failover pair up to four contexts can be created as the licensing is shared between the physical devices. For Example: Operational 1, Operational 2, Operational 3, and an admin context.  ", 
        "type": "2", 
        "id": "508", 
        "parentId": "507"
    }, 
    {
        "content": "ncclient is a python library for communicating via netconf. I've just started working with it. ", 
        "type": "2", 
        "id": "509", 
        "parentId": "489"
    }, 
    {
        "content": "Usually, when using BGP, you can choose (or your device chooses four you) a router ID from one of your assigned public IP addresses.  Now, let's admit you only run IPv6. As the router ID is still a 32 bits number, it can not be copied from a loopback's address.  The draft-dupont-durand-idr-ipv6-bgp-routerid-01 brings a start of an answer, suggesting to use your AS number suffixed with a locally allocated part. But that works only for 16 bits AS numbers.  So, how to choose a RID for your devices ? Randomly ? If so, how would devices react in case of collision (both ends of a BGP session use the same RID) ?  PS : the issue also concerns OSPF, but then you only have to design a coherent RID allocation scheme. Which you can not do when using BGP to peer with other ASes. ", 
        "type": "1", 
        "id": "510", 
        "parentId": -1
    }, 
    {
        "content": "IPv4 loopback interface?  I know Cisco IOS will use the highest address (32bit number) as the router ID. ", 
        "type": "2", 
        "id": "511", 
        "parentId": "510"
    }, 
    {
        "content": "Color me unsure on this answer...  router-ids only really need to be unique within the OSPF space, as you mentioned.  Within BGP, my understanding is that they are only used to detect a new peering session being created when one already exists...to which I guess the solution is to tear down the old one.  If the peering sessions come in on different transport addresses, then even if the router-ids presented are the same, they will be seen as different sessions because they're coming from different transport addresses (IPv6 addresses in your scenario).  So...I guess the answer would be to pick your router-ids for OSPF (v3 presumably) and its probably not the end of the world if your router-id ends up duplicating the router-id that another (third party) peer uses with an external AS peer ", 
        "type": "2", 
        "id": "512", 
        "parentId": "510"
    }, 
    {
        "content": "After restoring the unit to factory defaults and reprogramming it, the AP began functioning properly once more.  I'm chalking it up to \"attempted upgrade gone awry.\" ", 
        "type": "2", 
        "id": "513", 
        "parentId": "410"
    }, 
    {
        "content": "If its vlan traffic look into setting up VACL captures. ", 
        "type": "2", 
        "id": "514", 
        "parentId": "504"
    }, 
    {
        "content": "I use Google Capirca for firewall / acl management. It is simply a good rule generator, and the rule definition and generation are separated so you can even extend it to support any device you want. It does i.e. Linux iptables, Juniper SRX or Cisco ACLs out of the box. The ACLs you write can be kept independent of the device type.  (the little geek brother of FW-1 rule compiler ;) ", 
        "type": "2", 
        "id": "515", 
        "parentId": "489"
    }, 
    {
        "content": "Since policy routes are evaluated top-down, you can work around this limit by placing a more specific entry matching traffic from internal subnet A to internal subnet B.  However, this should be less than comfortable if you have many different networks attached to your internal interface.  In this case, I would recommend you a trick I once used:  since Fortigate devices ignore QoS marks, you should sign your \"internet\" packets on the firewall-facing port of your Cisco switch with a specific TOS and then use that mark in your policy-route. ", 
        "type": "2", 
        "id": "516", 
        "parentId": "415"
    }, 
    {
        "content": "There are several references to backpressure as regards to the internal bandwidth and switching fabrics of routers and switches.  What exactly does backpressure mean, and what are the real world ramifications? ", 
        "type": "1", 
        "id": "517", 
        "parentId": -1
    }, 
    {
        "content": "[MMF] longer wavelength (850nm), much wider beam vs. [SMF] short wavelength (1310nm-15??nm), narrow beam.  The key difference that no one has touched is \"modal dispersion\", which is a fancy term to describe how the light moves through the fiber. This page goes into far more detail. The first picture sums it up... MM is bouncing off the edge of the fiber resulting in a dispersion of light at the far end because the photons that went down the center traveled less distance than those that bounced a lot; a 1ns pulse entering one end does not exit as a clean 1ns pulse at the other end. The effect is greatly diminished in SMF due to the much smaller diameter fiber, and precise injection (\"launch\") of the laser at the center of the fiber.  Dispersion gets worse as distance increases. ", 
        "type": "2", 
        "id": "518", 
        "parentId": "493"
    }, 
    {
        "content": "I am thinking of upgrading our networking situation and am considering a migration of IPv4 to IPv6.  Is it too soon to be considering this move as it looks like much of the networking gear and OSen are ready for it?  Where do I lose out in such a situation? ", 
        "type": "1", 
        "id": "519", 
        "parentId": -1
    }, 
    {
        "content": "TL;DR: If you're a consumer/SOHO nothing needs doing. If you're providing services, start planning now while there's no rush and no deadline.  Basically, everything is dual stack these days, meaning it supports IPv4 and IPv6 out of the box. The Internet in general is still operating fully supporting IPv4 as much as possible.  At this point, if you're providing services to the Internet -- running DNS, web, email, etc. services. You should be planning to provide those services as both IPv4 and IPv6.  If you're consuming services from the Internet -- small office/home office, larger offices, residential, etc. then there is currently no urgency to convert yourself to IPv6. I suspect as the bigger cable companies start deploying IPv6 the \"last mile.\" Then we'll see more IPv6 traffic in general.  Today, there are a lot of really big things -- Amazon, some of the content delivery networks -- which are only IPv4. So the focus, as I see it, is for the providers to continue working to provide evertyhing in IPv4 and IPv6 simultaneously. The first problem the Internet is going to face is fracturing/islands appearing as the newest areas, where IPv4 addresses are already exhausted, come online as IPv6-only. Those newest areas will need the existing services and service providers to offer stuff over IPv6. ", 
        "type": "2", 
        "id": "520", 
        "parentId": "519"
    }, 
    {
        "content": "Backpressure refers to what is essentially concentration of traffic.  E.g. I can have 10 x 1Gbit links internally that are all feeding into a 1Gbit link that provides me with Internet transit.  at saturation point, the router can store packets in its buffer and/or drop them - with no particular configuration, a router will generally fill its buffers and then tail drop, this gives rise to two problems: buffer-bloat and tcp global synchronisation.  The first refers to a case where the buffer is constantly filled due to constantly saturated link utilisation. The second refers to the issue of hosts re-transmitting dropped packets all at the same time, thereby causing a burst of traffic and thus, more drops, more retransmits, ad nauseum.  RED was conceived a long time ago as a means to deal with this issue; namely by randomly selecting packets to drop during times of congestion. This however required careful tuning according to the properties and expected behaviour of the link. Fortunately things have moved on and AQM (Active Queue Management) is now the cutting-edge of the industry.  A top-notch example of AQM is CoDeL - this is an algorithm that focuses purely upon the sojorn of a packet through the system and aims to ensure packets are passed within a specific time rather than caring about whether or not a certain amount of bandwidth/buffer is being utilised. ", 
        "type": "2", 
        "id": "521", 
        "parentId": "517"
    }, 
    {
        "content": "These types of radio frequency transmissions are \"frequency division multiplexed\" (FDM). The different channels (ie, frequencies) transmit and receive at the same time. It's like a cocktail party where each conversation chooses a different pitch range -- the tenors have no problem hearing each other right through the basses at the next table.  In FDM, the receivers are tuned so that they only pickup transmissions in the channel (the frequency range) to which they are supposed to listen. So over a wider range (eg, the 2.4Ghz wifi) there are smaller divisions of frequency ranges into channels. The transmissions move at nearly the speed of light, so any transmitters on the same frequency -- the same channel in a give frequency band, eg 2.4Ghz's channel 11 -- will instantly be talking on top of each other. So any two 2.4Ghz channel 11 devices within range of each other will collide instantly.  Perhaps the part that isn't obvious is that electro-magnetic theory shows that superposition of E&M waves is not a problem. It's like waves in the open, ocean; You can have short spaced three foot waves (a highish frequency), moving over the surface at the same time you have long ocean swells (a lowish frequency). At the E&M receiver, you \"simply\" tune to the right frequency and you can pick the signals you want out of the noise. (And the E&M spectrums is very very noisy.) ", 
        "type": "2", 
        "id": "522", 
        "parentId": "505"
    }, 
    {
        "content": "In general, yes.  If your systems (routers, workstations, servers, etc) support IPv6 and your ISP provides IPv6, then there's very little reason not to move forward, 'tho you'll want IPv4 to remain your default protocol.  And we're talking \"dual stack\" (v4 and v6), not \"turn off IPv4\".  There are parts of the world today that simply have no more IPv4 addresses; IPv6 is their only means of connectivity.  In order to communicate with them, you'll have to be on the IPv6 internet -- or they need an IPv4-IPv6 proxy, as the protocols are not compatible. (or they're stuck behind massive carrier-grade-nat (CGN) systems.) Unless you're doing a lot of business with Asia, I doubt you've noticed. (or need to)  The only current drawback that I'm aware of is that the IPv6 internet is somewhat less stable and slower.  Because many providers aren't focusing as much effort on IPv6, they have fewer IPv6 peering connections over slower alternate links, or worse, tunnels.  [My IPv6 is over a HE.net tunnel.  Stock android devices prefer IPv6, and they're HORRIBLY slow to various google properties (play store, youtube) over that tunnel.] ", 
        "type": "2", 
        "id": "523", 
        "parentId": "519"
    }, 
    {
        "content": "All this RF stuff sometimes makes my head spin, but I believe you are mixing up some concepts in your question.  The separation of channels has absolutely nothing at all to do with ISI.  ISI is an effect that occurs on the same frequency.  ISI typically results from multipath when more than one copy of a symbol arrives at the receiver at slightly different times and those copies start to overlap with the next transmitted symbol.  This has a \"blurring\" effect, confusing the receiver and making it hard to understand the symbol.  The guard interval is what helps prevent ISI, by allowing the RF medium to \"quiet down\" before the next symbol is sent.  A longer guard interval helps give the RF medium more time to become quiet, but reduces performance by reducing the amount of time that data is actually transmitted.  A shorter guard interval increase performance but risks more chance of ISI.  A VERY loose analogy, think of someone talking into a microphone and that sound coming out of two speakers.  If you introduce a delay in the transmission of sound from one speaker so that words start to overlap, this can make it difficult for people to understand what is being said.  If that person were to give a full speech non-stop so the words are continually overlapping, it can be very hard to understand.  However if they were to pause for a full second between each word, it would be easier to understand, but it would take longer to get through the speech. ", 
        "type": "2", 
        "id": "524", 
        "parentId": "505"
    }, 
    {
        "content": "You can reference cable spec for each module. This one is from Cisco SFP+ 10G spec and its support cabling. http://www.cisco.com/en/US/prod/collateral/modules/ps5455/data_sheet_c78-455693.html ", 
        "type": "2", 
        "id": "525", 
        "parentId": "493"
    }
]